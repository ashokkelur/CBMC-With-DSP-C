{\rtf1\ansi\uc1\deff13\deflang1024
{\fonttbl{\f0\fnil\fcharset0 Zapf Chancery;}
{\f1\fnil\fcharset204 Zapf Chancery;}
{\f2\fnil\fcharset204 Times;}
{\f3\fnil\fcharset204 Helvetica;}
{\f4\fnil\fcharset204 Helvetica;}
{\f5\fnil\fcharset204 Courier;}
{\f6\fnil\fcharset2 Symbol;}
{\f7\fnil\fcharset0 MT Extra;}
{\f8\fnil\fcharset238 Zapf Chancery;}
{\f9\fnil\fcharset238 Times;}
{\f10\fnil\fcharset238 Helvetica;}
{\f11\fnil\fcharset238 Helvetica;}
{\f12\fnil\fcharset238 Courier;}
{\f13\fnil\fcharset0 Times;}
{\f14\fnil\fcharset0 Helvetica;}
{\f15\fnil\fcharset0 Helvetica;}
{\f16\fnil\fcharset0 Courier;}
}
{\colortbl;
\red0\green0\blue0;
\red0\green0\blue255;
\red0\green255\blue255;
\red0\green255\blue0;
\red255\green0\blue255;
\red255\green0\blue0;
\red255\green255\blue0;
\red255\green255\blue255;
\red0\green0\blue128;
\red0\green128\blue128;
\red0\green128\blue0;
\red128\green0\blue128;
\red128\green0\blue0;
\red128\green128\blue0;
\red128\green128\blue128;
\red192\green192\blue192;
}
{\stylesheet
{\s0\fs20\snext0 Normal;}
{\s2\ql\sb240\sa60\keepn\f13\b\fs40 \sbasedon0\snext0 heading 1;}
{\s2\ql\sb240\sa60\keepn\f13\b\fs40\li0 \sbasedon0\snext0 heading 1;}
{\s1\ql\sb240\sa60\keepn\f13\b\fs40\li0 \sbasedon0\snext0 heading 1;}
{\s6\ql\sb240\sa60\keepn\f13\b\fs24\li2048 \sbasedon0\snext0 heading 5;}
{\s3\ql\sb240\sa60\keepn\f13\b\fs32\li512 \sbasedon0\snext0 heading 2;}
{\s7\ql\sb240\sa60\keepn\f13\b\fs24\li2560 \sbasedon0\snext0 heading 6;}
{\s4\ql\sb240\sa60\keepn\f13\b\fs32\li1024 \sbasedon0\snext0 heading 3;}
{\s5\ql\sb240\sa60\keepn\f13\b\fs24\li1536 \sbasedon0\snext0 heading 4;}
{\s6\ql\sb240\sa60\keepn\f13\b\fs24 \sbasedon0\snext0 heading 5;}
{\s1\qc\sb240\sa60\keepn\f13\b\fs40 \sbasedon0\snext0 part;}
{\s3\ql\sb240\sa60\keepn\f13\b\fs32 \sbasedon0\snext0 heading 2;}
{\s7\ql\sb240\sa60\keepn\f13\b\fs24 \sbasedon0\snext0 heading 6;}
{\s4\ql\sb240\sa60\keepn\f13\b\fs32 \sbasedon0\snext0 heading 3;}
{\s5\ql\sb240\sa60\keepn\f13\b\fs24 \sbasedon0\snext0 heading 4;}
}
{\info
{\title Original file was report.tex}
{\doccomm Created using latex2rtf 1.9.19 (released Nov 20 2007) on Thu Sep 13 09:09:57 2012
}
}
{\footer\pard\plain\f13\fs20\qc\chpgn\par}
\paperw12280\paperh15900\margl2680\margr2700\margt2540\margb1760\pgnstart0\widowctrl\qj\ftnbj\f13\aftnnar
{{\pard 
\par\qj \page 
\par\pard\qc {\fs30 \page{}\pard\qc\sl240\slmult1 \fi300 Model checking of multicore software using CBMC}
\par\pard\qc {\fs24 Ashok Kelur\par
{\f16 \pard\qc\sl240\slmult1 \fi0 ashok.kelur.1807@student.uu.se}\par
{\f16 \pard\qc\sl240\slmult1 \fi0 ashoksarf@gmail.com}}
\par\pard\qc {\fs24 }
\par\pard\qc {\fs24 }
\par\pard\qc {\fs24 }\par
\page \pard 
\par\qj \page }{}\page{}\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 Abstract\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The computers have been key subsystems in various complex systems. As computers are adapted into various fields, hardware and software are increasing in size and complexity. It is evident that parallel computing is the way to solve large scale complex information technology problems.\par
\pard\qj\sl240\slmult1 \fi300 Engineers designing hardware and software are required to verify the system for correctness. As system\rquote s size and complexity increases, it is difficult to perform manual system verification. Model checking converts a hardware or software solution into the temporal logic and uses solvers to assert on properties of solution. A Bounded Model Checker can verify properties of program/logic within bounded limits. CBMC {\xe{\v CBMC}}is a Bounded Model Checker for ANSI-C and C++ programs.\par
\pard\qj\sl240\slmult1 \fi300 Thesis work is done considering an Ericsson\rquote s multicore platform as case study, which uses DSP-C as programming language. {\xe{\v DSP-C}}DSP-C is a set of language extensions on ISO C programming language. These extensions allow programmers to describe features of Digital Signal Processor (DSP). The work includes extending CBMC to support DSP-C, identifying Bounded Model Checking (BMC) techniques to cope-up with concurrency of Ericsson\rquote s multicore Digital Signal Processor (DSP) platform and implementing new features in CBMC to detect issues with Ericsson\rquote s parallel software. \par
{\page{}\pard\qc\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 Acknowledgements\par
}}\pard\qj\sl240\slmult1 \sb60 \fi0 I would like to thank Dr. Philipp R\'fcmmer, Thomas Magnsson and Kenneth Andersson for initiating the work, supporting continuously and providing key insights.\par
\pard\qj\sl240\slmult1 \fi300 I would like to thank Prof. Parosh Abdulla for reviewing my master thesis.\par
\pard\qj\sl240\slmult1 \fi300 I express my gratitude to Prof. Daniel Kr\'f6ening for helping me understand and providing updates of CBMC. \par
\pard\qj\sl240\slmult1 \fi300 Special thanks to Therese Breinordh and Mats Svensson for taking care of all the administrative formalities at Ericsson.\par
\pard\qj\sl240\slmult1 \fi300 I would like to thank my parents, Vijaykumar and Vijaya, for supporting me in all of my initiatives and my siblings, Kavita and Ningappa, for love and support.\par
\pard\qj\sl240\slmult1 \fi300 At last, I would like to thank all my friends for providing helpful suggestions whenever in need.\par
\pard\qj\sl240\slmult1 \fi0 {\s1\ql\sb240\sa60\keepn\f13\b\fs40\li0 Contents\par
}{\field{\*\fldinst TOC \\o "1-3" }{\fldrslt }}
\page{}\pard\qj\sl240\slmult1 \sb60 \fi0 {\s1\ql\sb240\sa60\keepn\f13\b\fs40\li0 List of Figures\par
}{\field{\*\fldinst TOC \\f f }{\fldrslt }}
\page{}\pard\qj\sl240\slmult1 \sb60 \fi0 {\s1\ql\sb240\sa60\keepn\f13\b\fs40\li0 List of Tables\par
}{\field{\*\fldinst TOC \\f t }{\fldrslt }}
{\page{}\pard\qc\sl240\slmult1 \sb300 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 Formal notations\par
}{\pard\qj\sl240\slmult1 \sb300 \fi0  \par
{\pard\qc\sl240\slmult1 \fi0 \par
\trowd\cellx3450\cellx6900
\pard\intbl\ql {{{{\f6\'D9}}}}\cell
\pard\intbl\ql {Concatenation operation}\cell
\row
\trowd\cellx3450\cellx6900
\pard\intbl\ql {{{{\f6\'DA}}}}\cell
\pard\intbl\ql {Disjunction operation}\cell
\row
\trowd\cellx3450\cellx6900
\pard\intbl\ql {{{{\f6\'D8}}}}\cell
\pard\intbl\ql {Negation operation}\cell
\row
\trowd\cellx3450\cellx6900
\pard\intbl\ql {{{{\f6\'C7}}}}\cell
\pard\intbl\ql {Set intersection operation}\cell
\row
\trowd\cellx3450\cellx6900
\pard\intbl\ql {{{{\f6\'C8}}}}\cell
\pard\intbl\ql {Set union operation}\cell
\row
\trowd\cellx3450\cellx6900
\pard\intbl\ql {{{\field{\*\fldinst{ EQ {{\i X}\\s\\up5({\fs16 {\i n}})}}}{\fldrslt }}}}\cell
\pard\intbl\ql {Power (X power of n)}\cell
\row
\trowd\cellx3450\cellx6900
\pard\intbl\ql {{{{\u8866*}}}}\cell
\pard\intbl\ql {Infers}\cell
\row
} \par
}}\page{}\pard\qj\sl240\slmult1 \sb240 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter 1\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Introduction\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 The complexity of hardware and software is increasing as the years are passing. With increase in complexity, the likelihood of errors is much greater. A major goal of software engineering is to enable developers to implement systems which operate reliably despite the complexity. One of the ways to achieve this is by using {\i formal methods} 
[{\field{\*\fldinst{\lang1024 REF BIB_clarke1996formal \\* MERGEFORMAT }}{\fldrslt{12}}}
]. Formal methods are mathematically based techniques, tools and languages for describing and verifying the system. These techniques can greatly increase our understanding of a system by revealing incompleteness, ambiguities and inconsistencies that may go undetected otherwise 
[{\field{\*\fldinst{\lang1024 REF BIB_hall1990seven \\* MERGEFORMAT }}{\fldrslt{20}}}
].\par
\pard\qj\sl240\slmult1 \fi300 Single core processor\rquote s speed is limited by the physics of semiconductors. High performance computers are being designed using multiple cores to reach the high computation goals. In multicore systems, applications are designed to execute in parallel, and computation speed is achieved by parallel computation. The parallel computation increases complexity of software and hardware. Research industry is working on developing tools and techniques to reduce complexity and detect possible error cases. In this work we have analysed an embedded multicore Digital Signal Processor (DSP) architecture and software and developed {\i model checking} techniques. DSPs are processors with special functional blocks to handle digital signals. A digital signal is a sequence of discrete values which represent a physical signal, for example, representing a radio signal or audio signal. Digital signal processing can be enhanced by features like fixed point arithmetic, coprocessors and dedicated registers. The standard C language does not have explicit support to handle these features. Industry and researchers have defined extensions like Embedded-C and DSP-C to add these features to standard C. We have added support for DSP-C in our bounded model checking tool to process DSP-C based programs. We will present multicore, parallel processing, DSP functionality and DSP-C in later chapters.\par
{\i \pard\qj\sl240\slmult1 \fi300 Model checking} is a formal method for verifying logical correctness. Proving logical correctness can be very effective in development process since testing lacks the coverage 
[{\field{\*\fldinst{\lang1024 REF BIB_zhu1997software \\* MERGEFORMAT }}{\fldrslt{45}}}
], peer review is error prone and costly. For example as we can see in {fig:example:test:coverage:code}, the function {{\field{\*\fldinst{ EQ {{\i g}{\i r}{\i e}{\i a}{\i t}{\i e}{\i s}{\i t}_{\i c}{\i o}{\i m}{\i m}{\i o}{\i n}_{\i d}{\i i}{\i v}{\i i}{\i s}{\i o}{\i r}}}}{\fldrslt }}} can iterate in while loop based on the values of x and y, which are dynamic values. There are {{\field{\*\fldinst{ EQ {2\\s\\up5({\fs16 {\i N}})*2\\s\\up5({\fs16 {\i N}})}}}{\fldrslt }}} possible inputs and {{\field{\*\fldinst{ EQ {2\\s\\up5({\fs16 {\i N}})}}}{\fldrslt }}} outputs, where N is number of bits in int data type. In large software it is impractical to cover all the inputs, outputs and behaviours of each function and module. There are alternative approaches in testing, like code coverage techniques and white-box testing, which can provide some assurance of behaviour but testing cannot prove the correctness.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum width=3em, minimum height=1.6em, rectangle, rounded corners] {decision} = [diamond, draw, text width=4.5em, text badly centered, node distance=3cm, inner sep=0pt] {line}=[draw, -latex] {\par
\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_test_coverage_code}1.1{\*\bkmkend BMfig_example_test_coverage_code}: Function to find greatest common divisor}{\field{\*\fldinst TC "1.1 Function to find greatest common divisor" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 The verification techniques are being employed extensively in hardware and embedded system development. Since, hardware and embedded systems are designed, developed once and mass produced, and bugs in implementation may not be fixed once produced. Even a single bug in the system may lead to recall of all the products. Also, the embedded systems have become part of our regular life. For example, microwave oven at home to safety critical systems like power plant controller or flight controllers in aircraft. A single bug in these systems can lead to fatal disasters. The verification techniques can help us to identify possible error cases. In embedded systems, verification can identify problems like checking if array access is within the defined array bound, dangling pointers, arithmetic overflow or underflow and if it is a multicore systems, data races, deadlocks and many other properties can be verified 
[{\field{\*\fldinst{\lang1024 REF BIB_werner2010correctness \\* MERGEFORMAT }}{\fldrslt{44}}}, {\field{\*\fldinst{\lang1024 REF BIB_post2007integrated \\* MERGEFORMAT }}{\fldrslt{34}}}, {\field{\*\fldinst{\lang1024 REF BIB_vasudevan2008static \\* MERGEFORMAT }}{\fldrslt{41}}}
].\par
{}{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 
{\pict\picw19049\pich7551\picwgoal10800\pichgoal4281\pngblip
89504e470d0a1a0a0000000d49484452000008ca0000037c0806000000a3ddd41800000006624b474400ff00ff00ffa0bda793000000097048597300002e2300002e230178a53f760000001d74455874536f6674776172650047504c2047686f737473637269707420382e3731033f68340000200049444154789cecdd6dac
ad675deffbdfffbac79a6bad76955528c49696a716ba56911c1f80da6d7c6172ca967838e00671ef23c62a1b44e326246282b0899eed1b7952737c7134f5a088092f408d9c1083d915305138664b770e861746ed423748392fb056fbb0e61cf7f53f2faeebba9fc63dc61c73ce311fefefa7b93bc61c4ff39eab9d6bceeb1a
bfffff6fee2e000000000000000000000000e0ac0bc77d02000000000000000000000000c0512028030000000000000000000000804998493ab4d94bc3b14e66b6d663978d835a3526aabdcf649d7f1fa6f4e598567c59000000008013c2f3dacd5d72b9ca32d23bf7ad7cfe3e46179775f0b2f5f0b2f5e47e9699d639f6f1
54000000000000601266c77d02a71b7b890000000070ea98646efd25dd92e55d371cb3aaf8e3b81d7ea90800000000000070361c695066bd8e30fbeb280300000000c049b5e7e5ec8ad40b811800000000000060ff8eada30ca11700000000c07171a93f7a699de7ec6319db36a159f6e4cdc45eda61c4005638719b51a767
fcb8a7cfc15f320000000070f295f1e3518ae6f2983fd6f2f1e3dd4eca31c63d7fca10427e9d95a7b4f6edcbe4d5e97e56c2bd876f3c28b34e6798fddeb7f770cde1ee7f78de8a70760900000000e0d47069edd4cb416b3cf6fffcbdb59461550a1cafe19ed5aa516d07edaa7c9cc567fc5d0300000000279f772fd75c421e
74add92dea1875c216942766f4d2265fdb9b08cb2157d3b8cbcd6427af20090000000030d05d92765771ab3aca6c6a1dbbea4df3cdb193b6e700e0cce06f170000000038754c321f74075db2bcebee811dcd3ed6fe6c2a05b2d1a04cf9c31b5e0eef5ff775d6bd7df13e971f4978256f422eeb4f04000000003891dcbac516
07ef1cb35c592fee75f4d2aa75e6f87d690f83f5297012acbb87b5b9aeca00000000001cbf3d2f67f7d6547963361294591690399ea08c1fe966c2494e530100000000c675eb1d56759439a876cdb8ceda715500a6d55bf35adb47c63d7d5dac52819385d00b00000000e0b8740bc4d6dd03dbcf32b6ddbfda6bb1d8deec32
e0696d473a7a6995b269606672f76633719d2a9be1fd31c6433a4b00000000c0a93508c774af2f5dc21fb038c2ccd26b58398555afb7ac6864c539b99a8eaaedcd446580a3b0ee9ed57eeedb7bb8e670c33865c8b9f3f70b000000009c1a2ead9d7a39688dc7fe9fbfb796329b5a951e3828d3ed1eb3898e32ab5e639da0cc
f0386c74940100000080d3a1b742dc404799ddd683ddfb2db7b059352678e9eba577a7019c2287b927d5db2b6b222c87bb3f65ee7233197f1901000000c089d75d92ae5b2cb6a975ecd1e4275697a2ade3c4759459f7faaafb638c47169401000000009c0ebe6405bddf8e32eb0465cc4c2184ddd7a7664b4b6f0ebef407b0
692763fcb894a23247b1ff95ff265af6172900000000e04472eb165b1cbc73cc7265bdb8d7d14babd699abc6941f6c7d3aeb2eaef792ee19db1038c826c1b2e7ee352873d41d6508e300000000c0e9d07d7fb7bbfe3deca0cc3acf294d63d65997f7dae6065350eaf2e06e792ccaded6a9744a05d6b7cefed5d8c7bbbddeba
b7f7ef3bda2231feae0000000080d3a7bb1fb6dfaecaeb68d78cebac1d5705605abd35afb5c564eee9eb3ac82a755f1d65968562d6d924287f40630197eec7ab2e97bd76b98c318e3ee63010940100000080d3e1308332ab1e37b65e1e3b07537fddbc2a54b3b07340d719e0d4287f0f98d9cabdb2755ea3ec810100000000
d0188463bad7f7b307b6d6a72c0563564e61d5eb2d2b1a59714ede8e346f6fdeff391ffae8a5558196ee6d7b0ddeac0ad31c65471900000000c0e9b0eee8a5fd8463c69e33d65166d9fd66b6b2a34c2f54d35bebb61d6488ca00876b535d95c75e6ff89c75823247bd0746471900000000381d7a2bc40d749459a7ab72733d
6fc0ad1a13bcf4f5f6de2879df7a4199bdb4855d37d8b26a5cd2bacf1d5bf40f6fdbcfa6c22610c60100000080d3a11794192cc84f4250a67b5bf758750e004e9f657b577b1d3f2ea58e32148b0100000000bad62d16ebdac4f8f110c2eeeb53b3c5d631e5ae232c039b2daf4adb9fb1c5f96e1d6196055e4afbd8ee28a575
9e27b5ed6b0f1b1b1100000000703a2c0bca0c5775c3c5ff3ae198554199b175f25830463299a5530be943b9f9686886b00cb077cb469fadfbbc4d7594d9cfc8f1b1fb8fbaa30c7b6000000000703a1ce6f8f165f7afda4febdd9ecf619d75b94b6da82698824c2697bbc9f7d87e66f8f966abeeec9dc42e0bfc658bf3b140
cbbadd63ba5531cb1e33f67a47b561b86c33040000000070f22ced28b3cbb8a3e1e5f0fe55f7958d825200b24e07193393772a71d66332f3e63a80cdd84b57e5e1f3caf7f9d83e59f7e35597cb5ebb5c768bcb0e1bfb5f00000000703a1c665066b74cc9d8ba76780ea6feba7955a86671df6e33fb5eb37517b9cb16f563a1
95dd2a5c567585190bca8c0566760bca1c455886a00c000000009c1edd4d021f0465c656901b0bca0453e8748c69efef87634208a36397761bc5d47c4d3a9c39d300d6b36e87e5bd066f5685698eb2a30c00000000e0745877f4d2718d1f5fd55166f944a4b683cc2676b266bb3f64334ae0a5845eca6d6341996140a67bd9
7dade541198d248b0ee58beab7fb01000000009c581b0dca94e7ac08d158b92c0198cef32ccf580add2e321e7a8f4fe19afee8250ba9c9ac35539b9be44d6e394be80558c75e0ac7d60db68cbde65e9fbb5b11dad86beee5eb3908c23800000000703a2cedaaac931194e9deb6aa38ec308bbbf61c94596704d2f0b1dd90cc
b2a0cc30fcd27dec58679955411959d3b067ff7f32ebfc59a44f7ac89f0500000000b051a6142a59b2d65e169019db14d8addb4c0821856172f8a5dc578233b184624250f4981eef3105674290e7a04cc80199103d6d7094f14c4ad7d3d4256b1e0f60d1f2aab4fd59b617367cfd550563e5b21487758bc4d6795ef9ba08ca
00000000008a654199e1aa6eddeec9eb0665c6d6c963c198d275d94c0ab9eecbcd35169a39ac7dae43eb28f395af7c451ffef0879b3f8861571869f7aa9a651d67c62a6b5a47195c719ac900000000c069b3b0beb6d10f6d70437f5ddebfed8ee7dda1d7ffe01bda7b3be394ca31b63110721719ef5c7a09cfe486b8d6e92c
a35e4799d241268566e82803ac6fb799eaabee5bb53f35b68fd57dcd65fb5c6363c7577dbe6e48e6288c0580000000000027d3d28e32bb8c3b3af0f871b3260fb24e07192b8560790f6d3d26336faeefd76cd502b79cf4aa0a9665b73df2c823fa955ff9957d9f180000000000a7c52bbfeb5efdafaf7b6df3713728535595
aaaa1add1870f7854b77ef6d0eacd59ad6822c782a1de98e98e24d6da0b1eef7c358f8a57b7d9da0ccaa3db4b1c78e7553deedf5a4dddb5b6f0a411900000000383d363a7e5c7b08ca84324adc9a4c4edb41c67afb65636397761bc5d47c4ddafb6ca1e1eb2ded28b3ce227bf81816cb000000008029f218b5bdbddd7c5c36
0766d52cbdb92da5114c4db0453259138a198663bacafdd2d8badb25a5114deebe50487354235900b44ae065d9f8f1eec7cbc68e774730ad1a3f9ef61b8fa0ab4cfe7b8cd6ca0000000070f26d3428539eb3224463e5b204603acfb33c63a9bb2f563a2b97c7874e37e5e6e8755596da16d09be9aabc342833dc481bdb585b
554533f4ea7fff2a5d7ac68d07385500000000004e8e3ffbf417f4e8fff8862429ba6b6767a7b9af6919db7d637b49b54c79fc6eba9b152554d389c9348f2318036cc63a23908a6bd7aee9c31ffeb024f5422e63a3c3578d675ae7fae02c9536070ff7fb9ebf5500000000e0145bbaed64838b8579e40bb7994c773cef0ebd
f1dfff50fa38ef5785105218666cfcb8a458423121287a4c8ff798823321ed6e35dd66640ad15338a78c6752ba9ea62e59f3f8fd9a759fbc6c336d6c31be5b70a66c0a14dff3ea7fa36fffeeff69df270a00000000c049f2b75f7ea409cab847cde7f35c5c53aa63ca9be56a3ac6a405bfc92c28845441e35e753abfa4c3ac
3caf3da4f1ce325efe296bf2918d82a318cd024cd9b56bd7f4abbffaabc77d1a00000000001cbaefbaefbbf4ba7ff73a49fdf1e3e5181ba514721719ef5c96a2b2d0ec87b59d65d4eb28533ac8a4d0cca1769491f61e8ce9b6951d0665000000000038abd23ab8ee748a31c51824cde51e55d7f3de86417b54aaaa12a291ca
527a2cd8921bd4c82ca8edefd02f7e8931a6b14e4be6391398c194adeab654be37761b95b47ea7170000000000cea66e67e56e50a6aa2a5555351a9471f785cbe128f2b111500bdd992dc842eeaedc1d31b5c775f9cad14bcb8232c3cd816e38a61c755defe944000000000038addc5d755dabaa82a4903bc244c528d5f55c
a5cb4c5595704c5055cd54552eb34a52d34d367790b1858e3231aae954533accf4bac4c6280fd6b4afed76b149afbf189c01b0b7d167c56e1b708c2007000000009c25dd11e41ea3b6b7b725e5fda6609a55b3dce958690453136c49e39aca3ed5301cd355ee97968d1e0e4d57e5614399b65bf37a56769419331698e95eef
8665000000000098821494994baa14425ab897dbcb61668ab1525545b957e5992aefbf9b2d56ce74a58e32655c536e49ebde8e5e92146354306b3acf94353b011960b9e146da6e5d9587c5656318410e00000000384bba23c8871d65426e83dc644772e1d658c7e3bd14ab34afad5e4ca679dc41babbce862752022eeb7494
197ebc970d030000000000ce0a8f513b3b3bb9ab4cd5ab8ce90665d459cc8f856256056552d02676ee77b9e735bc49ae906f53ee38e30464808e5e07a625fb5663956beb0467281803000000004c455b3056c62a958c897a1d8e4330990585500abfaa4ee7975c04d6745756674f6bbcb34c532c56d6e3237b5febee85edb9
a30c0000000000e88bd175fdfaf566167309ca7417e72104d5b549aa7bf775ab6bc6c618970d841863ef7a0852f490aa693a9d65d2cbba167ad002586a2fc1986e37e5721b23c8010000000093d1d9a7924c31064973b947d5f55c218491a3525595104d1a312eadeaaa9cba25b74567fde29718631aeb34d2b566d9eb76cd
76db0858fc9a77ef2443471900000000c094b8a7d9cc2184262853dac396c57aaaae2915338b4199f6ba16ee2f97dd8e32ee2e794cafe84ab39b08c8007bb64e57e56e486618968931129401000000004c465a234749217784898a51bd2e335555c2314155355355b9ccd228f2347ebc7490b1858e3231aad94b2b1d667a5d
6263940753f4a81042af8b4d7afdc5e0cc101d65000000000038a0184b50c67250a66a8232a5cd6c5585ce1beee979fd2293d20da61ab9bfdb29a6139e9135b9981042af05add4bef9dffd3c8c6302d6b36c0cf9b0b34c5dd78c5e02000000004c46e9ac1a824b0acd6dddf1e33156aaaa28f7aa3cab531cb67afc78ea2853
c635e5114d9d6ecaaeb41717cc9ace3365cdbe91d14ba5426db81130fc42e928030000000098b2327a2975944915332158d35a3684a018436f5c4b37c8d24a0bfcaa1a04644c525efc4b6a423341411edab5bbcb6928032c31dc2c2be196753aca0c3f661f0c000000003055eeaeedededdef8f1727b09cab42393c64331ab
8232c3aeca690f2dafe12ded88a5db729765f99e0bc3560665f6bbc8677300000000003025d1a3b6b7af77662eb73398abaa5255558ab1528cae18876faee7ca1853a76b4cd58c612af39e4d26857ed54d92ee73232403000000000080c3553a2b778332ddbdaa1082eada24d5bdfbca4824331b1d615c1ab9c4187bd74390
a20705b58562deebbebcf70db1d9aa36b263b7d1510600000000803e8fae9d9d9d1c8ea91563d504654a1799d46e36e60a98b61d6c39bab394cb7d5d219499cdb6e69a7c7cf4d2d86b0353b0ac6bccba8f670f0c0000000080543076fdfaf52628d3ddd74a0197b2f73518219eef6faf6be1fe72d9ed28e3ee92c7f48aae5c
69b6bf804cb1b2a3cc3ad82400000000004c9d7bd47c3e6fc231eedebbde3ffa0199a21b94499535b1f7b8b241108229c62033d6e1000000000000385a1e5367e51494a99aa04c0826b33496bcbb0f260d0b564a37986ae4fe6ea7984e7846d6e46242084d579955c562ab0ac5f61594196ec495eab8eec1061d0000000060
2adc7deda08ca45ec54cd94ca8ebba178a31ab15a335af11a38f86639ad75dd2512655deb49f13c0a252a1b6dfaecaec830100000000a62246d7f5ebdb79f478a5104a50a6cadd95c3203732b66e4efb55553508c898a4bc9725b563ca83823c74ba2ceb6023c8570665868bfd753706d82000000000004c89bbabaee7720f
720f4a1b0041eed5c263c7c62d95504d77545309cc94eb21c476ecd2d83f4b8232edf5f173670c13b0de28a665cf631f0c000000003025d153479910aa1c9649475555aaaa4a31568a31157d0df7aa4a20a6ed1a533563982c27654c2605756e2bd27d6e070bc9481bea284350060000000030652e695ed70aee0aee7249c1
5d55671360b81960c114625088a6e895a2c7e6702fa1987c5da9a56c693bdb5e765e1ac04addbdaa6161d8d86d749401000000006091c7a89d9d1d85502bc66aa1f8abaa62b3a7d51da1342c1c2b86455c21a48e324dc1d8aeebf1f1d14b63af5dac1d94d96b37193608000000000053e11e473bca4895548231f988d1f291
5bd17a90c75a1e437ebea54bb5f39687619b65e998ee9adc8c7539b049ec810100000000d01f41be6afc781a05de06648a6e50c6cc54d7b1f7b818637e5cda3f1b1b457e50fbea28b30c1b040000000080297297eabaeeaf89f3a5498a83c57ef4288fb9ba264645f7744497c7743d8cbd212fe5e04cf3999bc307c1995479
b3387a89514bc0fa86df83a53a6e78b0170600000000988a7583325219b1a45e3799baae7bfb6466b562b4e63562f4d1704cf3ba4b3aca98590ee7ecfe35344199e109efb57b4cd914e86e1200000000003009ee0b1d654a3799daa4e041e626734be3957258a609cd748ee851ae742cef2233d251c6d7eb28b36e0b5a604a
0eba2f465006000000003015ded9072b5d95ddab85c78d8d5b2aa19aeea8a6a6b02c5f0fa18c24778dfeb32428332c161b9e4bd7a18d5e0200000000602ad20641bdb82636350bff5e47994e178ad1f574cec1ecbec6364926d362d8655547995265036035f6c20000000000e87377cdeb3a75439614dc55f962b157338a3c
98420c0ad114bd4ac563de2d1eb3b6882c8f22ef178b75ae6e68f97de0d14bab2a6d00000000009802d77850c6cc14c37820662f6fbc37b7352396fa9d65866397c6ce5023611a008b0efafd0a00000000c05996f6c1fa1d654a6765eb1c315a3e423a3cc8632d8f2177a1b17499c331aec5b0cdb274cc3a5d9557e905654a
55d9a60e0000000000a6a0df72362db587dd63c63aca0cc72e2d3bda4fa4dc69261dddfccbb0fd6cbfedac162e01ec1ffb600000000080a9ea7656ce37484a5b54b1336ea9d9fb8a798f2b4645f7744497c7743d8ce54da44161581b9a19168cadeaaabcccbe3bca1094010000000020491b04312dc42d6d148490aa66dcab
4e1bd94e2bd9b2413018c5343e9669189ec9af23eb1cc3d6b400c60cf7aef65a1836fc5e2d1f03000000003005fd823157e926539b143cc8dc646e69bc520ecb8c158c458f72a56379179991bd2eefafe597759419767dee3af0e8a5ee2760530000000000305531d6925c162505efb4964d9b01218c04657a87772ec7c231
7170ffa058c53d6d14482b370900ac46676500000000005670f53bca4892492184a55d9597aea39beec9bbadad4d92c946468bafea2893f6c8169fb33228c3d8250000000000d6d0045b248f2697f22640f708bbaca5bb6199e581985e4799b1d76c462ef53719966d0c0058cf6e1d680000000000988285d14bca23c8c3aa
fdacf5f225bdfdad91ce32c3b14b2367278d84698666bdc794e7b0b60700000000606da58bcbee87763d163acbae3cba4f1c3bab915b09cc004d55d9a60e0000000000a6c295462f95be2cc3ee31631d65866397961d9d4f923bcd74f6cbacfdfc6da158e922d32f16eb5e8ed9c8e8a5de1f0a9b040000000080491a9fa5dc
0dc8f4e72a8f8455bccdbfac179459f87400368cb00c0000000000add451264a96baca84608ad1e45e753a210fc68f7743337914d3f858a6617826bf8eac738441b799bd9bc99bd84dfa978fb794315b52a0d6f9c368d23a6bb5bc0100000000e0ec18ef10b3cf8e32fb0dc2acd15d966e32c0fead53950600000000c099e6
ae186b5994145c319a620c4df0258491a04cefe88e201f0bc7ac1e4b9e36d1da0ecf667b5fa3f73aca346bfcbc015736cfd2e27f97994c960eb609000000000093b34ec789b86c71af5dc23125d862a9b86570583e52e1cbf0c8cfcc2d6f018c63fc120000000000eb490195288f2697725798ee1176594377c332cb0331bd
8e3263afd98c5cea3676596fecf8ac3ffbbcb48db1ce8d2530d3bed8ee1b6cf47c06000000004c47da147099b597ee4ae198982e15725866d9e19d2e154d40c63aeb752d7697d9e3d27bfd753d700675ff975fa3260c00000000008cdbbda064cdaecad29a23c7bb4f5c389ba5e7b86cff2b1ce48b3733d9424fe7834e8302
00000000e0b449552e31778d89cb3aca0c0ec54ec5cb928d04c99acbdec1c21b3856749401000000004cd3f8bcf0eebe56bfd26b24ace26dfe65bda0ccc2a73b9070182fca6e1d0000000060523a052d6581dfab8e595209b37af4d2f8a8a566e49206639772d719deaf0796e87eaf948f47ecd66ca90dc678f30f00000000
0053b2d821669f1d65f61b8459e331abba29cf16d33b9d1e3166bd7634b468060000000060bfc6ab67ca61837f56bd8a95e7eee5b3e7b57cf700a6aa099495efbffcfde0cd48f215df60347502000000004cd9683066d05579e4f6ddbbc494bdaa254563dd82b161e7e5f2cc35f7bc46462fb5a3934adbd836f1434b590000
000000d6375cb0b7d71782314d17198d6e060c37006cc986c032dd353e30490b1d9ba4f10db5c560d96e2f4a571900000000c054949149690479ee10135d1ed3a5968c206f0eefec4f75d7e6bdbdb1cea1cee59a766b02331b7fe58dcd6002000000000092d609b3acb481b9cca56b6c372c436719607766639d9ebcf32dc8
3e1a000000006022dc15a3cbcc15977594191c8a9d51c64bc63349d65cf68e435872cf36ff92000000000000c0093318b7b4998d363aca0000000000a6c9f3daba09ba2c3d761bbd343e6aa919b9a4c1d8a5dc75e6204d9309ca0000000000006002861d613a3d6272a7a56e6be67249d7250000000000f662641ddd09c62c
8c235ff12a569ebb97cf3e18a73cb6ae0f7b7b49000000000000e02cf04e715b1ea0e4edacf4ee01000000000056e98e4b52effa4230a6e922a3f12e3283d14b361cc5b48bee1a7f1982320000000000009880616f670dae030000000080833b6067d655639cd67d895e41cce21309ca000000000000000000000000601208
ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca0000000000000000000000006012
08ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca00000000000000000000000060
1208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000
601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca0000000000000000000000
00601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca00000000000000000000
0000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000
000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca0000000000000000
00000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca00000000000000
0000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000
000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601208ca000000000000000000000000601266c77d0200f6c6ddf7f884c3390f000070c8ec004fb5033c190000000000000080338ca00c708aac0cc92cb96bcfc11a00007022d8ba49
999187959fff04660000000000000000e82328039c30bb065b8677dbe273bcfba0cefb63eebc590600c0c9d4feec2ed9161ffcd05f08cef892dbac0d3a4c0000200049444154d38de921de7d5d7e0f000000000000000080a00c705ae4f7b9ba6f78b9792f38339ab1f1e65d3400007062757ebec77c65106c29c199e666cb
4f1bfcfc37b3741b3ffb01000070061db87b32cd970100c0a61c70ff8dc236e0f81094014eba5e10c6f34d9e3bc90c1feb0b8f6d7e48ef16a8010000c768d03dc624c5f1f149de5981dba0b39cc9e4ee84650000007026ed672cf99e5e030000600fd61e9d9e1ebc80f1e9c0f12128039c00a30bf4610719cb1d6494832eb1
737ff7f6c1f3fb6f92797e3d7ee002007072f8e0529287cebd83b14cf967790ac53437e6070c462d950f474635b200070000c049b634d0b2ece635ba2a97e2b3f4f8722bbf1703008055167ff9e88e4edf352ce3837dbade0be587b06f071c398232c011f1e88a318edfd7fd01b86cc492f202de73d8c5ac5dd0773bcda8f3
b3b6fbba96fe45d50c0000c7cca410c2c882b7ad2071c51c764d8be8a6415c2c0b65975bdb79a6b9ad3ca78c67ec2ec4079faee93c030000009c30ab8aca563dc66de4b665a3caf955180000ac65e4f78bcee874d730e4327870a7c6adffb87e915beff5d9b7030e1d4119e008c418f50f7ffb55fd8fbffdea6858a659d8b7
0997de879e1ed47cd43cbcf78375f09cc16b01008093215441575f7e5537df72b9b3202ed5afed6c4533cb21989273c96198fc70cbc1d9149ef5a6db4c7a94b5dd659ac2dacee2ba53adc2a21b00000027c94200664540a6f7c6d42e63ca9be78e8c29070000586ec52f0d71716fcd07a9172b1323067b74bdb14b238119f6
ed80c34550063802755deb2f3ef3dff407ffd7ffad9d9d9de50f64810e00c09977fee296fed32ffd275d7ae54d0a551ab164eaa4609bdead69316c4dc6362f8e634c0fb1f42c736fbbcf743ad094c88cccf398a6cee2bad3618645370000008ed33a2396ba01976ed798def8a4d88e23ed85697a2396d2efd38bdd64f87d18
00000c8d8c4b1fb9db3b2d63dab1e9a52bb4a5ee33cb46a72b77a4198e6762241370e808ca0047c1a57a5e6bfbfab676b65704650000c09967669ad773cd63ad60693e52a924b1f641f9e3f6d2cc25b7948789e9c1291b938330922c7a2f4093d6d723dd6506e39808cb00c0d96266774a7a97a487dcfd13c77d3e00b067a5
e87a306e3cdde4238fb1364c1387cf58ecd6dc7fbf6b644ee9c22b00008029693b33e7d9e6cd1ddd22b4723de6e7b4bf6e3401182b1f7b5314e7dde7e63dbb52e4963ec5f81875009b45500600000038422e57aca3ea3a361bf6a5438c5416c3dd26ad963bcba4108ce5c7984759089ddb4d21f40333252353a238de09e5e4
93212c03006790bb3f6266ff24e9e3f9f213223403e084d8bebeadc71ffb974e6e657cd4920f4232ed94716feeef4e1eef8f551a3c67f4d3746f18f93d7859a71b000070f6d94850c6a4f317ceebd2e54b3285deef0ac36630292493f7f89a4ed079ff4ddd4990fd9990bdaed0846580434550060000003862b547cdeb5a41
b159f8362115eb86653a3d65ccd298253385bc100f8a32b9ccd2e2bc8ea6504630495294dca4a01c9631f5dbb94a846500e0ec7abfa4fb25bd5cd24f48fa094233008e5b1d6bfdbf5ff82bfd1feff93f75fde9eb9b7be16193180000800dab6695ee7bd5bd7ae05d3fa2adadade676ebfe1ed214c2a92d84b3b6b0cdcce466
cb0333c311ea84658043435006382aacd60100403677d74e8c0a39bc22e5e04a9e57dc768dc95d61d4ed2423c5600a26c55a0ab9bb4cb014a689d165218563541e2f2994b5f55828864537009c39eefe4f66f636497fd9b9f999223403e038e5f1e44f3df9b4ae3fb5c1a00c0000c021ab6695b69fded67c1e15aaa8de38f5
668cba37fb6c56a6a1e73dbb2618539ae0e5314c65b4bad419a19e1bd98c8d4f2f2876030e86a00c00000070c4eabad64e5de7a04c5950773bbd58bb98ce2395a4128a918207c51c86710b3273b95913bc092ec5d404566e9e3f96425aae2f56a70000ce2477ffa299bd5fd2bb46ee263403000000007b105daaf348f5126e
297397cc4c8a2abb6fa9f0cd4c165ce6d684634a37e8343532a5604a16a694d0591ed334169601b01904650000008023368f513b310565a4dc29a69dbc942a4d94462d9985a6356bb0a020299a2b449357265354704921c863ad60410aa6a0a8a890c23126997bbecc3391452b57009888f74b7aa3a43b573c86d00c000000
00ecc2dd358fb542ac7b7b79cd965ad9d3b3147f3197e4694fcfcc650a8a9e36e142b0366423c94ba7696fc33272b177071c128232000000c01172493b5e6bbb9eab52a5b64d6bae36b1326849b9434c94e5c5b379541542ea1a63a6104b1026055e42506e2713a51014e4b9938c9a85775a61e72e349d16b1cdf9d1650600
ce943c82e9e7247d7ccda7109a017078bc3f32000000e03489f2347a6956e7fdb3bcb7666ac6a64b794f4f2e0b2115af355d6562d3395ab11dbb940ae5d27e9eac0dcba4ebe3856eece101074350060000003862f37aaeed7aaee06528b1e7c574eef822e54a13e5ae33de8462a2bb420ece047705335521a4d1c56ef2daa5
aaea8465f2d825b3e63673571e912c898535009c75eefe09337b48d2fd7b7cea3034f3a0a44fb8fb17377d8e00a6c145480600009c5e3146cd632dababdc21c6721799b2b7660a964634593059ac53bfe73c66c982c9eb3c8a3d982cdf174a6a26e6bdc2949769c23269e38f314cc0261194010000008e946b1ea3ae97a08c
4ac589b7b38bdd244585dc39c624058baaac6a8232954c41419599dc4d5515e5b5495590eaba1f9671a5de32dd908c3a95294d294aba83e00c009c496f93f4770778fe3325bd4bd2bbccec11a54e33846600ac8d4e320000e0b48beedaa9e7524c3d63f250f5d40826b7950965f452cca119790acb981414a4327129a6fd3e
3393ead47d2604499e03339db0ccb2314cece101fb4750060000003842eed276ac75bdae15dcf3cce2b655abe5ea9060e97ac80bec104cb5b92a0baa2c289aa972c9aba0ca6bc9833ce4fe3121b56bb59042341e4cee6a42326935de5f48b3b00680b3cddd1f31b34f487ae3065eee4e119a01b00784640000c059103d6aa7
8e525de7a04cee0c1d4d96c332a9e0adecef05057379ee22ed8af25cfc66e692a7c7c4600ad115650a21dd9ec2302bc6300138108232c011603300000074edc4a8ed7a2ef3209599c54a0be876411dd2a23aa6c575e59582b92a8baa4250a5200f2e77975741eed24c2e2948f955cd24c598623816528399ca649eaa52e49e
3f73a7ab0c00e02c7b509b09ca74119a0100000070e6b9524799ebf54e1a9f5442329606a787669cba0d3a44a7b04c30932bc8cd523799f4e0f41c0f8a26058f720fe9ce982be8ba61192d768606b03f04650000008023b65d473d5dcf53bbd52628932a4582a5ee31165d41de7494a982ab9229864a51ae98dbad7ae5f2da
532f5605cd54461a9b2c0629785a58579eb231d1e51652654a5e628b2a14009804777fc8cc1e9274ff217d0a42330056a3960c00009c62d15d3bb196e6b5a4b48fd78c4f8fa9682d15bfb56199185248a63253c8cfa924799acb94f7eea242a814cd2577852829587ff452e6722977a406b07f046580434637190000d0e592
7662ada7e35c41551a81946b41ac8c598a96dab37a9a655c490a316816822a77cdbc92579262ea1e9356d979911ca514be89a9aa249aacf21490094a952ba18c61b23285a90c3d66910d0067dffb757841992e4233009663bb0c00009c369e8232db71ae1853184631ede59531eac1521799540817726398d455c6aba02a4a
b2bc9fe7216dfa79ee1c136b0555a983741ec9ee96f60ddd95fbc92cd6bb318a09d81f8232000000c011db8e51d7eb5a212554dad14b9ebac904b31498c9d528c1a499a52e32b3e072e5ea91d07d8721c83ccaaaf47ad13d75a5092ef798dabaaaad3a714916f25ce3d02b4ba16d2b009c61b9abcc234a4196a34268064083
9a320000703ab96a775d9f47d561ae6021757f694232a910aeb2904232d15599a90a26cf856a1e3ce763f258f43a485594a2a5048c479907798c8a169a11ea9e2bddd285b5056f32f6f1807d2228031c05a7b30c000068edc45a4fd7b5825ce6ae148b49d51fa12ed527a64a69915db914cd35334f1d6134fcdd22076d420a
db58cc419b90aa56cc433be3589ede9c0869a1dd94a194b21400c0143c28e97dc7f4b909cd0013d3fcdecaef9a0000e094ab3d8d533f579b82a2cc5258a55219bb64aacc55297591891614f3be9ee77d3d49798f4e292c1383cca2e4260b95624c219a90c3302517d3dbc303706004650000008023b6edb5aec71c9491cb14
f365e926a3ceece2b4d89e992b86d429c6dd54d6d3e90d079359dd76a5515094a7908c8534ea388772d2f8a5ce9ada2475c630010026e13883325d84668089a1900c00009c66d15ddb75ad58a7b14a66792fced416bc85a0ca832a93aae08a963bca942ed1ee3a5749f33abfa89954472904598c323379ee56e32520538add
ca98250ade80032328031c15de780200004aa38f76dc3b4119354730c9a29a99c6958266668a96bbc8c4349b3899e5e70405af15ea2acd4056506d318f6eca5d651455a9927b1ec3a4d054a4c8db804c8ecb307e0900ce3877ff27337b50d24f1cf7b9748c85661e74f7478ef7b4006c046fe400008033a076d7f5ba565da7
314b4165dc9235456f955c954b95b9661ee4214865649224a99259d42c487534994559300537b952b0c63c8572e45295472fa5ced06a0bde8eef8f013813c2ee0f01000000b049738fdaf6a8eb5eebbac7a6c3ccf518b523d78e47edb86b27d6da8e51dbb1d676acb5136bedc4a89d586b1ee7aa63d4bcae35af5db547d59e
5ac0464f9d67a2a45847799462f4661e728ac4e4f72bdc7b95bd54f902c0643c74dc27b04209cdfc9d99fda599bdcbccee3cee9302b029fcbe0900004e1f570ecac4793e6a5d8ff3b46fe7b5b6eb5adb71aeedbad64e9c377b78e9986beeb5e6316a1e6bd5b5ab8e6a3a42c7e8e99037856ea9ca2dede9b5e7609debfc4e05
1c041d65000000802336570ac9584ca3954ac7d4e0a6e0a91aa5ca2d5b2be5ea9354a622a9ed3a53dab10637d53255755494295a4c339063540c55b370f6d24546963bb6766a4f4a0b5700c0549ce4a04cd7cbf3f13e33fba2daf14c749a0100000070a46a8fba1ee7a9138c7746a7d7e5523a175237985970b9825c9ebaca
c4b41797c6a647999b2c5a1ac75eb96ab92cba427045a5d76fb6ea3c7599b6664f2fdf5c463101d8338232000000c011db8ea9834c0841665288292c139482325548a3892b059d0b41b99e448a924cb220596db22aa6704d545a9057a6e04195a76a148f411ed2a8a5e87969ee92b7abe91ca1b176dcf1f1fdb100a7da3f7d
f3317de68fff54324b1b5fca9766f97bdd168e10828285f631c1d2c7e5d24c6641215873dd723be7f479d47c2e755e57d2c2f5b1cbe24ffee44ffeeb11fe51e164f986a46f39ee93d8034233c069659d4b7ee1040000a75494eb7a3d08ca2815c2cd4250254b21194b856b5eba3abb4b954b31afdfa3b5a119976234054bdd
a0a35ce6790f4fcad75db290c62f05c6a6039b40500600000038422ea956aa12898aa93ac4f35ce3dc45264653a5dc4235c63487589582a28249730faaac8c590a69c4528ed394b14beecaf11a4b63974299851ce59ede70a7ea04d89ceded1d3dfaf5ffefb84f63bfee3fee1300f681d00c709af12b2800003885a2bbb615
15634c056f72d56eaa8229c6b4af37b320553185621425491642ee241d156250902b5854b0a068cafb7951d14dc1ab1c9271797479b05e2e86a6d0c0661094018e0c3fb500004032976b2735514d4119a5b04c2553eaff22c5dc4ab5cc5b32c5549f12a510a2e69e472ec5a83a842620134bd798de4ce35469e29e16d7e985
cbaa3a1d0ba3980000383d08cd000000003874b5a4ed181555e7e04bea08335350545454254f1b7ba9222ee65d3eb3345629f57d5665a6da4d21d6aaf2be9ec7345ec9bd73947dbef4af149861ff0ed8088232000000c011ab3de6a04c1ebd94c332d1d3f52a77504de996a8349429559984b414579d2731d5b98b4ced52ed
d2cc5dd1a2dc2b79cec47417d4c3f06e69e14a290a00e08c203403000000e05044b9b6dd5347194b41994a528cae99a5b08cbb7223199382641e64b174894e639a6a4fe3d3637e2db7723d87654a37992aed102a076708c9009b138efb0400000080a9a92d55a0cc15358f5173b96a45d51ef3a537e399e6cdedd2dc6bd552
be3fb6a39614e59e062d45298f5d8a69412de5a3cc44ce791995514cd6cbce788ee800007006bc5cd2fb24fd9d99fde5073ef87e5dbb465e06382ea52a3a7d70bce7020000b01feeae1dd5da71d78e47cd3d6a479eba47bbb77b7deee988799f2f1f317aea0e1d5340a6e9101d63fe5d29e6c2b7fc7b93f77f69f27412f97e
000741500638025ec61b000000281595a4004c2734e3ca8119a9b6b4789e2ba6c08c95ce316ac62bc5b2c056270c93472ec5bc5876935416d56e9d104c9a6dac3279090080b3efe5ef7ecfbbf5e2bb5fac7bef7ba53ef8a10fe8dab56bc77d4ec024395b640000e0948a2514a35a3bb963742a82cb87c7b4afa7a8daeb4e58
2685634a67e898f7f9dc5dd1a3dcca1e9f2946cf4da12d4f53b7bcefc72f51c0261194010000008e58ea0863aa83549be5304c1b8899978e329e16cd75ae2ea9e59d2e3269211d952a51a2dace32525b79e266f22610639decee4842262fb859780300ceb2871f7e58eff9cfefd6957beed67dffe63e7de8973f4468060000
00c0aea2522799d23d265dcf1f7bd4dc725799bcbf1773e7e8767f2f361d64a2622e76cbc118b545f7a59b8c97fdbbe1369e69fc76006b2328030000001cb1684a95254a0becd255267aea26139517cfa67c78ff7695104cb92ca395d2023add2e4996422f9dfba52555bc2cac010013f4dffffbc37aef7bffb35efad297ea
477ee447f45bbff55b7aecb1c78efbb480b3c50962030080b3214ab9e02d6a1edbd1e9a933b4b723d53d36b7a7cbce98a55c08e7658fcf950334528cf9f726b376947a1eb524a919bbd40bd400d8178232000000c0112a4bd968962a47ac2c927348268f57f2a091f14ae95a7a5e0ad634af17f3842577794ace340be7d4ae
359fc092400cef5d0000a6ee0ffee00ff4f6b7bf5d77dcf13cfde88ffea83ef2918f109a0136a8a996e6174f0000700a953db8b9e76ed096bb465b3b52a98eca21995224578231b9582eef017afe5826b9a58dbb6e119c7c3104d38c5197f89d0ad8008232000000c01173f314909154bbf2f5b6e78b07cbad57d3a2b8ad38
511b9a69eecfeb624b0199b250762b1527ea549ba809cd34d528795413000068fde11ffea1def18e77e8452f7a91defce637eba31ffda8fef99ffff9b84f0b000000c0317295aecfb9538ca5bdbd66acba728768e56238a9ed2093c7a37b0ece78b708ce4a955b19b934e820b36a943a807d2128030000001cb1588e5c3512
f3b8a4e8dee93063f9fe5265129b6a93eea8a5e8b9934c7971b3a62d6bc3fa4526651c53ef63000030ea939ffca4def9ce77eacad52bfac99ffc497dec631fd3e38f3f7edca70500384666a6d96ca6adad2d5db8704155551df7291d9ae1d71a026f2bed570841e7ce9dd3f9f3e775fefcf9e33e1d6c405555cd7fd3adadad
e33e1d1c81b43727d5390c93462f7546aabb37c199324ebdec01b6a3d4cbbe5e7b194bd19b593b42ddbb9f556a36f3c8ca001b313bee1300000000a6a69d249c8230f2a8e8260ba9234c09c7e44eabb90b8cb5cf296d584d9dc5731b9071cf77a8d339a630753e3b0000d88b4f7dea53fad4a73ea5f7bcfb3d7af5abbf4fdf
75df7dbaff55fff3719f1600e090989942080a21a8aaaa26e870db6db7e9eebbefd6d5ab57f58217bc401ffbd8c7f4852f7c41319ede8e9de56b2d5f670900dc7efbedba72e58aeebefb6ebde0052fd06ffcc66fe8affeeaaf4ef5d77ad886ffcfcc66335dba74492f7ef18b75f5ea55dd75d75dfa977ff9177df0831fd4f6
f6f6719f2ed630fcdea8aa4a37df7c73efbfe957bef2153df8e083fc373de35c2914d3ecbcb9144ad84552305334cffb7bde8c57f76eb7e866efcf9baecfcda5badd65da3dc1d46cc69b8fc9ca00074750060000003862de993f1ce50ad609b55868aa46d2c2d99ae08c9bcb157a211ae5eb4dd718eb1c254c531e933f8782
a5914be1ec563d020070d83efde93fd6a73ffdc7fa2ffffb7fd177befc3b8ffb7400001b6666bae38e3bf4d297beb409c55cbd7a552f79c94b74f3cd37376f963ffdf4d3faec673fab10c2a90d8f8410f4fce73f5f2f7de94b75e5ca155db9724557af5ed58b5ffc623de319cfd06c365308414f3df5947eeff77e4f66bc45
bbcc4d37ddd4fcf95dbd7ab5f9f3bce38e3bb4b5b5a5aaaa1463d4e73ef739cd66334215a7c0e5cb9775cf3df7e89e7bee69fe7bde7df7ddbafdf6db75eedc39851054d7b53efef18fd37169029a31e96dfd5aea16d38c4c8f720ff2903e2e856fb179aeda7f97b14bdedee9e5f9e5135a273013443719608308ca00585052
d1a58aa05c4a6a1641ddcbf28ba0d4af5a8f312ac6a8baae9beb000020496197b42276cb57ad8465badd63caa5e7c5b1c965b9fdaa75c62879a7bb4cee2a53c232c5b09b8c47c908cb0000b05fcf78c633f4aa7ffb2add7df74bf4f0171f3eeed301006cd0a54b97f4e77ffee7bae5965b16ba4974d575ddeca19e56b7dd76
9b3efff9cfebf2e5cb2bbfd6f97c7eaabfcec376fefc79fddccffd9c7eeaa77eaa19c9d5dd6b2fe6f3f9c26d38992e5cb8a00f7ef0837ae31bdfa8f3e7cf2ffd6fbab3b3c37fd38928a1177397e5ad3a73e5b1ea6d182605637247198f52086d0719e562b8f27e5aa7ab8cdcd30bf6b49da3db13f1264403607f08ca009099
35bfe45dbc785177df7db7ae5cb9a25b6fbd55b7de7aab6ebffd763dfbd9cfd6b973e774d34d37e9dcb973baf1c61b75fefc795db8704152fa45f089279ed0e38f3fae7ffdd77fd5534f3da5af7ef5abfaca57bea2bff99bbfd197bef4255dbb764ddbdbdb9acfe79acfe7c7fc550300707cbaa3975263991c8ec96199460e
b6b82479480be8d0b6612d0bec76b19c5fb5549b0c3e6e4f80c534000007f1b297bd4c3ff4436fd4fdfff67edd78e38dfafce73f7fdca70400d83033d3a54b9774c30d371cf7a91caa52083985aff5b0957df61b6fbc515b5b5bc77d3ad80033d3c58b1775e9d225cd668b6fa9ba3be198a969c6a05b1ea9d48e4f8f4afb7a
4d5719b3dc51c672e798bcf7e79d0e3159d359a6fd04cd6d4ea322e05010940126cecc74db6db7e9ddef7eb7eebdf75edd79e79dba78f1623347b5db55a61ce57943cf7ad6b324b55d65dcbde928339fcff5b5af7d4d7ff6677fa6cf7ce6337ae8a187f4f8e38f6b7b7bbbe9400300c0e4781b90494b66eb549158bb481e16
8e343f3b7387994e47b79caae93cb47dac1390010060df2e5fbeacd7bce635fa0fffdb7fd03df7dca3f97c47f37ade745805009c3d537d03fcacbef93fdcebeeeaee676f6abfba74591f0b58e0f458167a72777df39bdf6cde17c13434e392d48e472f1d64aaa65b4cb9bff34f0ec6746f2bd572ded9c76bbbca1cf557064c
0f3f9d01e8d65b6fd59bdef4a6a6b566d15d10acb330ea3ea65cafaaaaf945f2ca952bbaebaebbf4c33ffcc3fafad7bfae4f7ce213fae8473faa6bd7aee9faf5eb0466000093d28dbaf46614bb5248c6db904c0accb8dcf28d41fd19c5e585baafee51d2d8582556da0000ecc59d77dea99ffee99fd66bfe97d7e8c64b376a
5ed32515988aee3ed9985e60fd988cbde13f7412cef3b43a8b6191759c95afdbcc74eedc395555a5d96ca65b6eb945cf7ffef375db6db7e9861b6ed0c58b17e5ee7afae9a7f5f4d34feb9bdffca6bef6b5afe9d1471fd5534f3da5baae9b22d0fd7c0f9562549c5e66b6b23bd0f5ebd78ff06c7052b82917bea5d1e7de3481
f1def5128b497b78de8c606f2ae2acecfd0ddb4b8fff1dcc4f7260b308ca00135752f4e7ce9debfdd25ed7b51e7ffc71d575add96ca6aaaa9a63f8d8627b7b5b3b3b3bdad9d9d1934f3ea9f97cae1b6eb841b7dc728b2cffd2309bcd74eedc39dd79e79dfa999ff919fdd88ffd987ef7777f57bff66bbfa6471f7d94cd4600
c084a4521297cb725cc69b91496ad6c43e5c069739c55eaedbd22e316523cf7bad690000c06e6ebcf1467dcff77c8f1e78e0017ddff77d5fea963aaf35af59b302536066bae5965bf49297bc64e99bdceeae6f7ce31bba76ed9a628c477c868999e979cf7b9e6ebffdf6a5e71963d4dffffddfebeb5fff3a61194cc6b973e7
74fefc79bdf0852fd4fdf7dfaf57bef2957ac52b5ea1db6ebbad175eb1a600c59bcb18a3767676f4e52f7f595ffce217f5f0c30febe1871fd63ffcc33fe8faf5eb9acfe92687a4db591f13626db19b2be4a630b92bb4da314b0a964234f991cde874b31c98f1412799e1fe5ed918e4ff2fe0b010940130aaaa2add7cf3cdcd
c7eb54116c6d6d696b6b4beeaecb972ff7ee7bf2c927f5e8a38feaa69b6ed2b39ffd6cb9bbb6b6b674ebadb7eaed6f7fbb5efdea57eb5def7a973efbd9cfeae9a79fdef8d70300c04992222be567abe5b63279fe70b3c0ce5528a92f6b27e332f8996ce5150100c0417dc7777c877efcc77f5c3ff0033fa0cb972f37231300
4c4b55557aed6b5fab0f7ce003ba70e1c2e863628cfaebbffe6bbdf6b5afd5a38f3e7a2c6f943ef399cfd46ffff66feb15af7885aa6aac9b64ea76f0a10f7d48bffccbbfacededed233e43e0686d6d6de999cf7ca65ef7bad7e9077ff00775efbdf7eafcf9f34d21e85e3ae57cf7777fb7eebdf7dea6a3ccd7bef635fdd11f
fd913ef9c94feae1871f6e3ace00981ef74191dbd8a8f3662fcf9acbd1df15aca994ebdf4fad1b70e808ca00586abf2d36c79e77c30d37e8852f7ca124e989279ed03ffee33fea452f7a9166b3992e5cb8a06ffdd66fd5effcceefe8977ee997f4e0830fea89279e38c8a9030070f2b9cb438ecbc4362093ef4c0be5d209c6
42ae32c923997ac19852c134d27d060000eceae69b6fd61bdef006bdf9cd6fd6b77ffbb7cb3d2a46aa838129abaa4acf7bdef374e9d2259d3f7f7ee9e35ef6b297e96d6f7b9bdef7bef71d79e1d7f9f3e7f5a637bd49f7dd779f6eb8e186a58fdbdada5ad97106380bce9d3ba7673ffbd97ae08107f4c0030fe8052f7881b6
b6b69606c88a9d9d9da60bfaf07ba48c6d2a6377ae5cb9a23befbc536f79cb5bf4a77ffaa7facddffc4d7dee739fd3134f3c41a81698947680ba729fe83242a9d997eb7689cec571ae344abd8c6b6ac7ae9767e5de33ee14c5014784a00c802353161b972e5dd25d77dda5c71e7b4c4f3cf1849efbdce76a369be939cf798e
7ee1177e41210456d0aa870000200049444154fdfaafffba9e7cf2c9633e6300000ed14237d5b6c2a4590b77c3a7bd1c6ab73d340b670000f6e33bbfe33bf51fdff216bde1f56fd0e59b9f41eb7c000d33d3adb7deba6bb8e4fcf9f37aeb5bdfaadffffddfd797bffce5237bb3dccc74c71d77e89def7ca72e5ebc38fa98f9
7caed96c2633d3739ef39c7d17c401279999e9c61b6fd4fdf7dfaf9ffff99fd7d5ab5775e1c285b5ff7f3f77eedce8eddbdbdb7aecb1c774eedcb9a6eb7ae990beb5b5a5effffeefd7f77eeff7eaa1871ed22ffee22fea4b5ffa1261196032daf14a9ea6aa773aca98ca18a6669492a7804cb3e7d7dbd35b78e92624d3ac4d
f8f10d1c1a62e4008e4555557ad6b39ea5e73ef7b97ae49147f4d4534f49922e5fbeacf7bef7bd7afdeb5fdfa4f50100389b56ac74cd7a77a7c5332b6300000eeae69b6fd65bdff256fdc517fe9bfe9f2ffc85def21fdfd21b3b0c00522af6fa966ff996956fb6bb7b1342f9d99ffdd9a58195c370f1e245bde31defd06db7
dd367a8ef3f95c9ff9cc67349fcf9b73a4a30cce9aaaaaf4dce73e571ff8c007f4918f7c44dff66ddfa68b172f6e2414b6b5b5a5ff9fbdf38e8fa2eabbf899d999add94d0fa4918440080804028412aa40681a41a9a252a4ab8fa2888aa2520415111fe409bd59500111441045105001815003088440127a7ad96cdf79ffe0
bde326d9dd4c2aa0f7fbf9ac0692ecdcbd736798fbbbe79ee3efef2f3e23e4e6e6e2c2850b282e2e86cd66834c268356abc5800103b068d1a23abdfe2914ca7d00e3f012cd654a0b5f44214ca97b9283f08596f928947b0e7d3aa65028958664b4dbed76d86c36f155d9ec768661c0711c222222909999594a2c3377ee5c34
69d2844ee229140a85f2ef804e8e29140a8542a96d92972d5d86cb972e6369d232c4c6c6deebf6502894fb18298e32a406c6f33c121313d1a143870a635e6a029665d1b2654b8c1c39d2e526334110909d9d5d4acc431d6528ff24388ec3430f3d846fbef90663c78e85a7a7678dd7911986115f3e3e3e68d2a409388e434a
4a8a78fd0b82803ffef80356abb5468f4da150ee5feebac538f83b33f8db3d060e5f337fab68c4c874417c070a85721f40a39728148a640441404e4e0eae5fbf0e8bc502b3d92ce62f731c079ee7a156abe1e7e7070f0f0ff1ef9c65bc3ac2f33c1a366c886bd7ae212424041cc721282808d3a64dc3942953a0d7ebebea23
5228140a85523738db7942be76fc3b0a8542a15028d5210fc026002b044148b65bffbf344de39528144a0548719491c964a2b384878707a64e9d8aa3478fa2b0b0b056dba656ab316dda34e8743a973f2308022c164b29a10cdd8c46f9a7c0711cdab56b87e5cb97a369d3a6e0b8da5fe6228219b95c0e1f1f1ff1ef4d2613
befffe7b582c965a6f038542b90f718c50ffff4786bf9d64eefea76c7c52a9b908d5b05228f7142a94a1502892319bcd58b264093efdf453984c26007fffa34e0a0764d2a05028d0bc79733cf2c823e8ddbb37222222a0d1685c4eca398e434848082e5cb880e8e868f03c8f471f7d14494949387af428cd78a5502814ca3f
97b262190a8542a15028d52519c00a009b0441c8bbd78da150280f1e0a8502bebebe15bab0903a17c771e8dab52b7af4e8811d3b76d49abb844c26437c7c3c7af7ee2d591cc0300cd46a35b45a2d8a8a8aa85890f2402393c910131383b56bd7a271e3c6752e00631806369b4dfcffe9d3a771fefc795abba650fe6d10510c
11c280bdfb97ccffef8aaba8be47eb7f14ca7d0115ca502814c908820093c904bd5e2f0a655c51545484df7efb0d870e1dc2ac59b3d0b2654b7cf4d147888d8d75690b2b93c9101e1e0eb3d90c954a058d4683112346e0d4a953a2734d5520132622e229fb996c365b95dfdb1d0cc3806559b02c5beeb88ef155f702c73639
2bfa088200bbdd7e5f144f1c6d4ec99f1da9cd7e6418063299cce9a4fb5e9f436790f1e6acbde49cd6f679bd1fc7bd637b9cdd03c87da036fb856559d182dbb10de49875716e9cb5c9d57821d17af7fa1ee0eefe7dbf5d7f140a8542a150ee39a5dc63ee75632814ca830bc3300808089014a3c4300cac562b388e835aadc6
d4a953b16fdf3e141414d44adb341a0da64f9f0e8d465361bb643259a95a8a9f9f1f6edebc79cfe779144a5561180611111158ba74291a356a5465918ccd6683cd662b578721352d994ce6f2fa671806212121601806168b05dbb66dabb04e4ea150fec1302ebea650280f04542843a1506a0d32e930994c3874e810121313
b164c9123cf6d863502814e57e9e6118a8542a5cbd7a15111111e0791efdfaf5c3bbefbe2b4928c3300c388e13850dc4fa363838184aa5123a9d0e4aa5124aa5120cc3c06eb7e3c68d1b484b4b437e7ebed85ef2aa4ae1806559f03c0f9ee711101080c68d1b233232125aad1632990c76bb1d168b05b76fdf467a7a3ace9f
3f8f92921258ad56d112b726719cdc917ef1f0f040686828fcfcfcc43e97cbe5601846140de4e4e4e0dab56bb879f3264c2613ac562bac566bad2f4a976dab4c2643404000020202a05028a052a9a0d3e9c0711cec763b4c26132e5fbe8c6bd7aec16834963b8755819c43b95c8ea0a020444747232c2c0c6ab55ab455b6d9
6cb875eb16ae5cb952ee1cd6250cc388e3cdc3c303111111888c8c44505090d88f642ce7e6e6222d2d0d57af5ec59d3b7760b55a61b3d96a64dc398efb7af5eaa151a3462ec7fdd5ab57f1d75f7fd5eab807eeeee693cbe590cbe5080b0bc3430f3d044f4f4f787878402e978bf72683c1809b376f22353515376edc80d96c
16cfb1d56aad72db1ccf8d46a34193264d101515258a00398e83d56a158587a9a9a9484b4b436e6e6ea9315cd3bb1049249e42a14093264d10191989c0c040f03c2f8e1793c984f4f4745cba7409e9e9e9309bcdb0582cb5262a049cdfab743a1d828383a15028a0d56aa152a9a0542a45d1d7b56bd790969686a2a2a21ab9
7f5328140a85427960a1ee31140aa546615916f5ebd797bc084f9c5d643219dab46983fefdfb63f3e6cd355e23e0380ebd7bf7465c5c9c24118f52a914bf665916fefefe153ae45028f7335e5e5ef8e8a38f10131323e91a70c466b3c16c36a3b0b01067ce9cc1e9d3a771f5ea55e4e4e4947aff264d9a202626060f3df410
d46ab5584771bc76c8355f5252821f7ef881c62e5128ff56e83fa914ca030f15ca5028943ac16eb7232b2b0b53a64c814ea743efdebd9d4e68188681a7a7a7f8756060209a3469e2327e49269389a286b0b030b46bd70eeddab54393264dd0a04103f8fbfb97727170e64860b3d9909b9b8b73e7ce21252505274e9cc09f7f
fe899b376f4a76b291c96450a95468d2a409121313d1bf7f7f44454581e338b7ce1a2525253875ea1476ecd8812d5bb6e0ce9d3b30994c555ae425bb85c84b2e97a351a34668d9b2255ab56a85e6cd9b232c2c0c7e7e7ee576159585386ce4e5e521252505870f1fc6cf3fff8c73e7cec16834d6d80490889b8898a079f3e6
888b8b439b366d101e1e8e060d1a40ad56bb7595200bfb999999387bf62cce9c3983a3478fe2c48913282c2c94bcb8cf711c542a151e7ae8210c1e3c18ddbb7747e3c68ddd9e439bcd86fcfc7c1c397204df7fff3d7efae927e4e7e757f91c4a85655928140a04060662d0a041e8d6ad1bdab56b07ad565ba1a38ccd66c3ed
dbb7919c9c8c43870e61f7eeddc8c8c880c964aaf47925e3be69d3a678f4d147d1bf7fff0afb8c8cfb93274f8ae33e2b2babc6fa4ca150c0d3d313bd7bf7c6e0c183d1b66d5b787a7a82e3b872e3a7ac9b4b494909ae5cb922de038e1e3d8a8c8c0c582c1698cd664942319665a1542a111a1a8a4183062131311151515150
2a956e1d6588c023373717a9a9a9e2f18f1d3b86fcfc7cb10d558164687b7878a0478f1e183468103a76ec28de1fcb8e172298b3582cc8ccccc4fefdfbb165cb161c3d7a541438d5041cc78982a6860d1ba25dbb7668dfbe3d1a356a84060d1ac0d7d757d2fdfbce9d3b387ffe3c525252909c9c8c23478e88f7520a8542a1
5028ff58a87b0c8542a935188641bd7af52a252a21ae322a950a93274fc6ce9d3b6bdc5546a3d1e0a5975e824aa5aaf067198629e53a435c72a85086f2a0a252a93069d224f4ead5cba55bb93348bde7cf3fffc4860d1bf0f3cf3f232f2f4fdc1058d65186d455552a155ab468819e3d7be289279e40686868a9da8ed56ac5
c183079199994937eb5028140a85f280428532140aa54ec9cdcdc5e4c99371f8f061d4ab57afdcf71986818f8f0f6c369bb888dabc79731c3f7ebcd422b552a9848787073a74e880be7dfba267cf9e080e0e165d115c45bfb842abd522343414bd7af582cd6643616121162f5e8c8f3efac8ede234293c74edda1593274f46
972e5da0542ac1f3bca49d471a8d063d7af440e7ce9df1d24b2f61c3860d58b16205ae5fbf5e29d102c330080b0b43a74e9dd0ba756bc4c4c4a059b366a240a02a7d024074e4e9d9b3275e7df555a4a4a460f5ead5f8fefbefc549655590c964502a95e27bf7eddb17717171d0e974a51c25a4eedef2f0f080b7b7379a376f
8ec18307c36ab5e2ca952b183d7a344e9c38e156e0c0b22cb45a2d1213133161c204b46cd9124aa552147b483976fdfaf5d1b76f5fdcb97307ebd7afc7ba75eb4477929a84611828954a346dda1413264cc0638f3d066f6f6ff11c4bc5c3c303e1e1e178ecb1c7f0eebbefe2e4c993d8b87123366fde8cececec0a27f80cc3
c0c3c303ddba75c3e4c993111f1f0f954a25b9cf341a0d1e7ef86171dc7ff9e59758b97225ae5fbf5ee531c5711cfcfdfd3165ca148c18310281818190cbe59233db81bbfde2e7e787d8d8588c1a350a168b05972f5fc6810307f0bffffd0fa9a9a96efb46a954a279f3e678e59557d0bb776f78787848be1710c8bda86bd7
aeb05aad282929c1891327f0ebafbfe2e38f3faeb4f88338238d1e3d1a23478e44505010e4727929b19c2b542a159a356b86a8a8283cf3cc33484949415252127ef8e1874a89d01c216358a7d3213e3e1efdfaf543b76edd10181858e57b9556ab45444404faf4e9230afce6cd9b87152b56d05d5d140a8542a1fcf3a0ee31
140aa5d66159b6d24219475799d6ad5ba34f9f3ed8b2654b8d6e3478f8e187d1aa552bc991505e5e5ec8cfcf171d85fdfcfcaa1c552315c74d5964fe7c3f8b081cdb793ff3a0f56b4dc3b22c626262f0d24b2f55183be688d96cc6f9f3e7317bf66cfcf2cb2f30180c15d609c8f7f57a3d0e1c388083070f62c18205888d8d
c5cb2fbf8c0e1d3ac0cbcb4b8c5daae9dadf83c28332261f9476d63565fb85f6098542f9b7428532140aa54e11040177eedcc18103073068d020978bd8454545f0f2f202cbb2888c8c2c3591d7e97458b87021faf4e9031f1f1f71315c4a018338a5901d0204c71d03c0dd0958450bec1cc721222202efbefb2e1e79e41168
341aa7c50a1203425c2b80d2f6b7e4b80d1a34c0cb2fbf8c810307e2cd37dfc4ae5dbb6030182afc4ce4fd3ef8e003f4ebd70f0a85c26d96ae331c7750b8ea17854281f6eddb23262606cf3df71ce6ce9d8b9f7ffe197abdbe520fd332990c5dba74c18c1933d0b66d5b51602155d040fab3ac9086fc99e33828140a848686
a2a0a0c06ddb140a055ab76e8db7df7e1b5dbb76854aa572ebc642e26788d0877c4f269341ad56232c2c0cafbffe3a468d1a854f3ef9049f7df619f2f3f36b64b22193c91018188869d3a6e1a9a79e824ea703cff34e7f964cea49bbc967759c04913e572a95e8d2a50b5ab76e0d854281a4a424b7937c8ee3d0b06143cc9a
350b03060c1023a9ca2265dcab542a84858561dab4691838702066cc9881ddbb774b1ef704a55289871f7e1873e6cc41b366cd4a7d5647cc66b33876ec767bb9eb1ef87b1cf13c0f954a85989818848585e1f3cf3f775b40f3f6f6c6e4c993f1fcf3cfc3dfdfdfe97826f71fc7fe718c8c034a5f7372b91c6ab51addbb7787
46a3c1e2c58b2b2594d16ab578e28927f0da6baf212222428c582b0b3947a4804b0487a43d24422a2e2e0e2d5ab4c0f8f1e3317bf66cfcf1c71f953a576457e6071f7c805ebd7ac1cbcb0b3ccf57fafe0da054ff963d8fcedc6728140a8542a13cd050f7180a8552a7300c53a9e82582c56211e792cf3df71c7efae9a71a73
9551abd592dd6480bb9fc1d7d717d9d9d9f0f5f505cbb2b5e228436a0ba41643e6c324dad76834e2ce9d3b62b4308981ae6b48bd886cf0512a9550a95490c964b05aad282a2a12e7c6a4adf7a29d04994c26b697c4922b954ab19e61341a919d9d2dd6a948dffe53d16834983e7d3a7c7c7c24ff4e494909b66edd8a37de78
03376fdeacd2461ae2fe6b329970e0c0011c3d7a14e1e1e198316306dab56b875dbb7655b9df49ed82d47fca6e1c22e71af8bb6e4b6a37d5890aaf2aa45646ea2fbebebe622d9cd44cb3b3b3613299c4eba7aedbe958ef24d779404040b978fa3b77eec0603094bbe6ef9558849cefca50d60da92248fd8dd4f8030202c47a
9ccd66434141010a0b0b4b9dbbdabc0792cfec38ee1d1de50188630bb87b2d92f345ce9914e76f0a8542a9082a94a15028758ec562c1debd7bf1e8a38fba1447180c06512813101050ea61912cfe7a7979b95cf475f570491e982bc26eb7e3dcb9732e1fb8944a257af6ec890f3ef8005151512e050b00dc0a56044180d168
844aa502c330502814888e8ec6ca952b317ffe7c2c5bb60c7abdbec2f6129706223aa92cee1ec6f57abd682dcab22cd46a35626262b076ed5a6cdebc19efbcf30e6edebc29f9e1592693a16ddbb6e8d4a953a5768138febe2b8888451004646565e1ce9d3b2e270d1a8d06c3860dc39c397350af5e3db7efeb4c5041282828
80dd6e87b7b73704418042a140585818de7bef3d74eedc19d3a64d43666666b51ede799e476c6c2c162f5e8c98981828148a0a7fde1dc47696c45a91024c7272b2dbf3a8542ad1ab572f7cf8e18768d4a8518d8efb66cd9a61f5ead578efbdf7b072e54a49e31eb8eb7a3274e8507cf8e18715ee8e936acd6bb1584a453519
0c06a4a5a5b93c877e7e7e58b06001860c19e2764c3bde7fdc5da72525250020f60f009c3d7b56f21822829459b36661c48811f0f0f0705b0c75149995a5a8a8083ccf8be2238d4683f8f8787cfdf5d778fffdf7b17cf972141515496a1700f8fbfb233131115e5e5e927fc7f173b9ea37529006eede07ce9f3f4f27cc140a
8542a13cf850f7180a85724fa88aa30cf0f75c5c269321363616bd7bf7c6d6ad5bab2d60e0380e3d7af4406c6cace44d51c4b1f9fcf9f3888a8a02c330f0f7f7af11a10c8983f6f6f6468f1e3dd0a54b17c4c5c5a14183064eeb157abd1e172e5cc0c18307b17fff7e1c3e7c18252525b0582cb5be304de6b3d1d1d1e8d6ad
1be2e3e3111d1d8dc0c0c0527d69b7db515858886bd7aee1e8d1a33872e4080e1f3e0cbd5e5f671b31486cb24aa542870e1dd0ab572fc4c5c5a161c386d0e974e5da61341a71e5ca151c3e7c18478f1ec5eeddbbeb240ebcae21e3bf57af5e926b9e25252558b76e1d66ce9c89bcbcbc1ae90f9bcd86e2e2629c3d7b161326
4c40e3c68d71ebd6ad2abf37c330d0e9744848484093264d10151585860d1ba251a346a5ea41822020272707191919e2f9debf7f3fae5dbb268a526a1322fe6bd6ac19faf7ef8f0e1d3aa071e3c6f0f5f52d37262d160bae5dbb8623478e203939193ffdf4136edebc0993c954ab351ab2a131242404f1f1f1e8dab52b9a37
6f8eb0b0b0529bf60866b319b76fdf466666262e5dba8463c78e89f1eb249abeaeae21966511161686e8e868c9f71a93c98413274e203737d7edcf11518c8f8f0f121212d0b97367b46edd1aa1a1a1e5eed576bb1d7abd1e274f9ec4b163c7b07fff7e1c3d7a54920b93541c8595f5ead543d3a64dc5311f191989a0a02028
954a68341a78787888f768bbdd8e2b57ae202d2d0d6969693877ee1c525252909a9a0a93c954ebe38b42a1fcb3a142190a8552e7088250e144c2d119a06ca632592c250f8f441c41a8091b59abd5ea72619a2ccc7ff0c107d5de8dc3308cb81ba8b8b8181a8d46dcf53373e64cd86c362c5fbebcd20e1b3509e97f41106030
1844d7159d4e87912347a259b3669832650ace9c39236972e64e74525dc87bda6c369c3d7bd6657bb45a2d5e79e515bcf4d24bf0f4f4acd6313d3d3d2108024a4a4a70e3c60d44444440269341a3d12031311141414118376e1c2e5cb850a587768542818484042c5ebc18a1a1a135d26f2ccbc2c3c343fc331116a5a4a4b8
14caa8542a3cf9e49398376f5eb58b6b8ee35eafd743ad568b36d0efbefb2e6c361b56ad5a55e1b897cbe5183a7428162e5c085f5fdf2ab7a72c8e02209bcd86d3a74fbb74d9f1f4f4c4c2850b3164c810c93bfb2a42ad560380e87a63b3d970f2e4494962349665d1a041032c5bb60cddba75735a10a80c5aad168220c064
32a1a4a404dedede605916bebebe78fbedb7d1a04103bcfdf6dbc8cfcfaff0bd1cefdf358de339b3582c542843a1502814ca830b758fa15028f71cb2f9a02af525abd50a8ee34457999f7ffe19858585d56a8f5aadc6d4a9532b35e7248bf0b9b9b9e2dcb2bad14b642effd0430f61f4e8d178f4d147e1ebeb5b2a06dd1924
e6b843870e78fef9e7919696868d1b37e2b3cf3ec39d3b772a1d312c05994c064f4f4f24262662e4c891888b8b2be5c0ecaca6e1e9e989e0e060b469d306e3c78f875eafc79f7ffe5963737d7728140a848484e0e9a79fc6e0c183111616263a68bbeb571f1f1fb46ad50acf3efb2cb2b2b2b079f366ac5dbb16972f5f86d1
68acf576d7052a950a93264d927c1ecc6633b66edd8a993367562824a80a8220a0b8b818a74e9daa56dd816559b46bd70e9f7df699b881c9d575a4d3e910161686f8f8788c183102068301bffffe3bbefcf24bfcf4d34f282a2aaa71f70fb95c0e1f1f1f0c193244acff926bc85d5cb6979717a2a3a33172e44814161662c7
8e1d58b56a154e9e3c0983c150a30214e2f0dda953278c193306bd7af5125d6edcdd9380bbced0515151e8d1a307c68e1d0bb3d98cd3a74fe3c71f7fc4b66ddb90969656ebd710c330080b0bc3175f7c81962d5b4aba3f9b4c267cf7dd77387cf8b0cb9f211b5d636363f1ecb3cfa257af5ef0f6f62e1579ee0c9d4e878080
00f4ecd91353a74ec5f9f3e7b16edd3a6cdebc19393939551a63c4a5dacbcb0bddbb7747b76eddd0ae5d3b4446468af737c731e5ca253a2626062d5ab410dd646c361b727272b077ef5e7cfae9a7d5be1e2914cabf172a94a15028f7848a1eac1c173d2b7a48ac69c1852008c8cecec6f5ebd7cb3d6029140a3cf1c413f8f8
e38f2b65f729050f0f0f58ad567172e4e9e989b7df7e1bd7af5fc7d6ad5b6b4cbd5d551886815aad1617cd150a05140a05dab56b87cf3fff1c63c68cc1f1e3c7efa9352dc16eb7bb147d10bbd6175f7c115aadb6dac7220ff01a8d060d1b361427e124162c2e2e0e6bd7aec5a851a370f1e2c54a4d08e572397af7ee8da54b
97223030b0d6b2c46d361b0e1f3eecb238a550283064c8107cf8e187353eee351a0d6c369b3821f2f4f4c43befbc836bd7aee1871f7e7039ee599645d3a64d3177eedc1a6f9323369b0d274e9c702aba522814183d7a341e7ffcf15a299c91f34dda50d1b5c5300c424343b17af56a74eedc59b2834e4510c72ab95c8ea2a2
22a8542af03c0fad568bb163c7826118cc9831a352ce32350d89b1b2dbed484b4b436161e13f6a071d85427930a857df1f3dfb76874cf677c18fe338f01c0f392fbf5b2494f190717f5be9cb79f9dd97fcef17cfcb2197f3e0b9bb5f93e222c7717fffffff8b9c9c4c069614826532c864a4f8f97771d8d9ab6c119265599a
59f72f856198f701bc76afdb01ea1e43a150ee235896859f9f5f953688908d01c44db767cf9ed8be7d7b955d1f388e43b76eddd0a64d1b97f52f321f724671713100884299aa6e7ae1791e8d1a35c26bafbd86c4c444787878488ed105fe8e1d97cbe568debc39a2a2a2f0ecb3cf62e5ca9558bd7a35b2b3b36b6c9153ad56
a373e7ce983d7b365ab468212eee4b816559712ead52a9d0b76fdf5ad9e8e5783c5f5f5f8c1f3f1e53a64c819f9f9fcbd86457bf4f22711a346880e79f7f1ec3860d4352521256ac5881dcdcdc077a6e2c93c9d0b2654bc4c7c74b76083f7bf62cde7cf34de4e5d5eee3444d8c57124b5e118e9b0e799e8752a944fffefdf1
f0c30fe3d4a95378fbedb771f0e0c11ad968c9300c3c3c3c3064c8104c9b360de1e1e1502814926b928e11de4aa5124f3df514121313f1c5175f60d1a245b876ed5a8dd48e89f3d2f4e9d3111f1f5f6997f5b27daa52a9101f1f8fb8b8384c9d3a1573e7cec5b265cbdcc6d35797faf5eb63c9922568d7ae5d85eee0c0dd8d
61bffffe3b66ce9c29ba5197452e97232a2a0a6fbcf106060c1800b55a2de9bd098ef7ea366ddae0a1871ec2a851a33077ee5cecd9b3c7e571cbc2300cbcbdbd3178f060d1cd46a7d35528d6718563341341a3d160f0e0c1d8b56b17ce9c39438532140aa54ad4ce8a1b8542a1b881611897b149043209254e1d7589cd66c3
b973e7ca15316432193a76ec582b62010279a02713062f2f2fbcfffefb68d8b0619d59bd5604b1822d2e2e86200890c964888e8ec6d2a54b111e1e7e5fb49338ca949d7829140a8c1c3912fff9cf7f6a4424531692d1cb711c525353c5089fd8d8582c5ab4087e7e7e92df8b6559c4c4c4e0bffffd2f8282826a4d2403dcdd
f1f6c71f7f382ddcc96432c4c7c7e3830f3ea8b5714fe2b2c8f9f2f1f1c1071f7ce0763ca9d56abcf3ce3ba85fbf7ead8e39576e2e2ccb22323212afbcf24a9522c4a42208020a0b0b71e1c2850a0b095e5e5ef8f0c30f6b5424e308cbb2d06ab5309bcde2f5afd168306ad4284c9a34a9daee35d581f48dab6b9f42a15028
148a4b86dcc363e7e1ae38a6ad20086d054158414532140ae57e8038fd5675ae49e6d6c45586b8865605b55a8d975e7ac9e5623a11c2b8c26c368b429aaa7e268d4683a1438762e7ce9d78f2c927e1eded0d9ee72bfd5e641193655928954a84878763e6cc99d8b2650b6263632bb598eb0cf219df7aeb2d7cf5d55768d7ae
1dd46a75a5852e8ec292da14c9f03c8f9898186cd8b0016fbef926828383c5d8e3cae0b8c148a150203838186fbef926d6ac5983860d1bd66a3da9b691cbe5183972a4e47a835eafc7ecd9b371fdfaf5075a202405e266dda143076cdcb8113366cca8b66bb64c2643787838fef7bfffe1934f3e417474b4e82c5e1988138b
2008e0791ebebebe98346912366edc88366dda54cb69980830de78e30d6cdab409bd7bf78656abadd27b926878f2358995f3f0f040616161ad0a2f7c7d7db170e142f4ecd953d2bdcf66b321393919cf3df71c5f4dfb8400002000494441546edebce9747c13e1c8b66ddb3064c810787a7a56e9beea78af56abd568dbb62d
d6ad5b87a953a74a1e632ccba253a74e983f7f3e1e7bec31d4ab574fdc785753f724b2f1a3aa2eee140a850250a10c8542b907b02c8ba8a828970f456442c8300c0441404141419d3eecb87223f1f7f7c7bc79f350af5ebd2abda7cd6693f4391ced2b198641484848a52d766b1be2a062341a45b14c8b162df0d1471f41a7
d3ddebe6c166b3212525a5547fcb6432c4c5c561d6ac59b5da469665e1e5e585e0e060a4a6a6c26ab582e77974efde1dafbcf28ae40259404000fefbdfff222c2cacd6c547168bc5a95086611804040460fefcf9080808a8f4fb5667dc3768d0c06531502693212626063d7bf6acd444988871ac562bac56aba4b659ad56a7
42199ee7f1d4534f553a7e8df4096983dd6e775bbc21f7a38aaca84901f691471ea915910c815cfb3ccf8b6219ad568be9d3a7a34b972eb55a447407190776bb1d67ce9ca142190a8542a15024c0304c1b000defc1a193014c04102908c2441ab144a150ee37388e83b7b77795e7e28eae32eddbb7478f1e3daab488cb711c
ba74e98276eddab99c6b9128635790b911595caeec67d2e97478f5d557b164c912848585554bcce2e89a4ada445c21bef9e61bf4e9d3070a85a24aefcd300c828383b162c50abcf8e28bf0f1f1a9f262ac631fd596bbb35c2e47af5ebdb071e34674efdebd5a622a724e0a0a0ac4bed56834e8d7af1fd6af5f8f888888fb62
535b55d06834e8d3a78fa47167b55af1ebafbf62cf9e3df7dc95bb2e20e79a6559f8f8f860ead4a958b06001bcbcbcaaf47e1cc7a1458b16f8faebaf316cd83068b5da2a8f1b226ccac9c981c96482dd6e8742a1409b366df0f9e79fa36ddbb655aa1fb12c8b9090102c5bb60cafbcf20a7c7d7dab5587220eca8220e0ce9d
3b627dce62b1e0f0e1c3b5b61ea1d3e9f0eebbefe2b1c71e9374cfb3dbedf8ebafbf3071e2445cb972c5691d91dcab9392921011115123f76a52f72763ecf5d75fc7cc9933256d3e25d1eb4aa5b25622d881bb75defcfc7c5cbd7a950a6528144a95a1d14b140aa5ce91cbe5e8dab5abdb0759b2386eb7db919e9e5ee55d00
6431dc66b3411004f1a189288ec9e23cb1fd6318c6a9c842a954e2b9e79e43ab56ad244fb4ed763bcc6633f47a3d323232909d9d0d7f7f7f84868642ad5643a954ba9c70300c83e2e26268341ac8e5720c1932046bd6acc1b163c7aafde067b7dbc505fab28bf4a44f5896759b834c7e56a954a2a4a4046ab55a8c091a356a
14962f5f5e2319d38220c062b188e2024110c4f63a9e43d25ee24c929797878c8c8c527de5e5e5853973e6c0dfdfbfd2c727e3c86834422e978b510a72b9dc691f113141404000d2d3d311111101954a8571e3c661f7eeddd8b76f9fdb857ca55289c99327a355ab56959af0951560188d4658ad56710795630c04795fbbdd
8ecccc4c5cbe7cb9dcd8522a9578e1851724e7e492f7238e23191919c8c9c9a9d4b8d7ebf550abd5502814183e7c38d6ae5d8be3c78f976a1bc771e8d7af9fe41d45168b05269309d9d9d9b874e912f2f2f244672b7f7f7f848484883b6448ac05f92cd7ae5dc3eddbb7cbdd83140a05faf5eb2769e2290802cc66330c0603
32323290919181a2a22268341af8fafaa25ebd7af0f7f71763381c775748895d92c96468ddba355e78e1854a15d7ec767bb9f1ad542a45db59773b04e57239cc66332c168b985b3d67ce1c9c3e7d1ab76fdf96dc0677388e65c77b55d96bdf31639e3aca5028140a855229ead24d260fc026002ba8308642a1dccf90b96275
17f6ac562b388e133735fcfaebaf282c2cacd47ba8542a4c9d3ad5e53cafb0b0b0c2054bc70d291e1e1e502814926373b55a2d66ce9c89499326c1c3c3a3526d7707a947903e92c964888888c0f2e5cbf1dc73cf61e7ce9d958e3ba95fbf3e9292929090905065b18d33aaeb72e30cb95c8e3e7dfa60d9b265080c0cac3111
8ba7a7272c160bf2f3f345d79fb8b838fcef7fffc333cf3c833b77eed4c871ea0a8ee3d0a14307c94ec246a3114b972ead7367f27b85635d8f655968341a3cf9e493b873e70ee6cd9b57a97e201b20bff8e20b3469d2a4c63641f9fafac26432e1ead5ab68d0a001388e4364642456ac5881a14387e2c2850b926bfe440cb7
7cf9723cfcf0c3357a9d0b8220d62f0541c0c58b1771fdfaf55a115f787878e0c5175fc4e8d1a325d5f00441407a7a3a264e9c8873e7ce39ad77d5d6bd5aa954c26ab58a31551e1e1e98306102b2b2b2f0e9a79fdeb36bcd317efdfcf9f3558e36a4502814800a6528144a1dc3711ce2e3e3d1ba756bb70fddc411c16eb7e3
e2c58b555af4b45aadd8b56b17f6eddb878b172fe2dab56b6236af5aad864ea743484808424343d1a64d1b74ecd811818181309bcda5165a49c4cab3cf3e2bd9d5c56030e0f8f1e358bf7e3d7efcf147e4e7e78b13179d4e87848404bcfaeaab888a8a725a7c21050c5234d06ab5183b762cce9c3953adbc59a240fffefbef
919a9a8aecec6ce4e4e4880f983a9d0ef5ebd747b366cdd0bd7b773469d2042a95cae5b96218066ab51a0683016ab51a6ab51a2fbffc3276ecd881b4b4b46ad99c12c1cbe79f7f8ed3a74f232d2d0db76edd424949891801e3e7e787e0e060346ad408f1f1f1888989814aa5424a4a4aa9dd2372b91cc3870f77bb0bab2c16
8b05d7ae5dc3d6ad5bb173e74e9c3f7f1e454545e0380ec1c1c1e8d1a307c68d1b87c68d1b3b156c90e2daf5ebd7613018a0d168e0e5e58537de7803c78e1d43414181d3e392f13661c204c9e3cd6eb7a3a4a404870e1dc24f3ffd8483070f22333313858585a2f23f3030100d1b3644f3e6cdd1a3470f74e8d0419c901d3c
78b0dc6e1b9665d1a851238c1d3b56b220c5603020393919ebd7afc7ae5dbb4a8d7b4f4f4f71dc376edcd8e5b8d76834e2b8f7f0f0c0e8d1a3919292225aa10277ef23bd7af59254b8d4ebf5f8faebafb176ed5a715c380a2e88ad6a7878389a376f8eeeddbb23212141dc7d76f2e449a77dd3b871634446465628202213da
65cb96e1db6fbfc5eddbb745d197a3e043a7d3a171e3c668dbb62d121313d1b2654ba8d56a58add60a85326ab51aafbdf65aa5a2b14a4a4a70ead4297cf7dd77d8b3670f32323260369ba156ab11151585be7dfbe2a9a79e42fdfaf59d1606c9b9ba71e306020303c5dcf051a346e1934f3ea97686b3c562c1d6ad5bf1fbef
bf23353515376edc406e6e2e80bb3bca3c3d3d11141484888808c4c5c5212e2e0efefefe30180c387bf62cdd4942a15028148a34ea4228938cbbf14a9b68ac1285427910a86eec12c1d155a663c78ee8debd3b76eedc2979418fb8c9c4c5c5b9ac6348717c709c37135700520772875aadc6f3cf3f5fe30baf65db66369b21
97cbc1300c020303b164c9128c183102870e1d92dc575aad1673e7ce45efdebd6b74f1bc36605916ad5ab5c2279f7c52a32219e0efa874ad568bebd7af232828083ccfa35bb76e78fdf5d7f1d65b6f3d502212994c86eeddbb4baafdd8ed765cbe7c19870e1dfad76d9c615956bc8e341a0da64c9922d607a55c430cc32034
3414494949352a9221efad542a1114148473e7ce213a3a1a72b91c4d9b36c5471f7d84a79e7a0af9f9f992decbc7c7079f7cf2498d8b64483bfdfcfcc0300c2c168bd33a694da056abf1cc33cfe095575e717b5f25354300b875eb165e78e1051c3d7ad4e9f9542a95183b762c264e9c582bf76a8ee360b7db613299a05028
a0d56af1eaabaf22252545f218ab696c361b388e13373bffdbae790a8552b350a10c8542a93348cee9dcb973a1d16824fd8e5eafc7c99327abb4e869369bb17cf972ecddbb172693a9941b0970f721f8f8f1e3a223815c2e47ebd6ad919090808b172f8ac794cbe5183d7a347c7d7d251db7b0b0101f7ffc31929292909f9f
5feec1bab8b8181b366cc0be7dfbb06ad52a74ebd6cde5a4cf62b1882e1303060cc0bbefbe2bda1e56059bcd8603070ee0fdf7df4749494929971dd227c4a541a150a07dfbf698397326dab56be7522c41c432e4ebc0c0404c9a34093367ce2c256ea80a1919199833678e980b5b761c104720e292e2e9e9895ebd7a01286d
8febe9e9892953a6544ae8b479f366cc993307999999b0582ca51ebaf3f2f270e1c2057cf9e59778edb5d73071e244a7714e32990cd1d1d13876ec18e2e2e2c0711cdab76f8f8484047cf7dd774e271372b91ce3c78f972c7ab05aad3877ee1ce6cd9b871f7ffc51749129db57858585b874e9127ef9e517242525213c3c1c
4f3ef924060d1a84fdfbf7976b8b5c2ec7d8b163e1eded2da91d05050558b87021962e5d8a828202a7e3fecb2fbf14c77dd7ae5d5d8e7b2294e1791e8f3cf20866cf9e5d4e28232567db62b160e9d2a578efbdf7dc660b171717232f2f0fa74f9fc6c68d1b11101080e1c38763d4a8513876ec58b9be615916111111928a07
c5c5c518376e1c0e1e3ce8f6da2d2a2ac2ad5bb770f0e0412c5fbe1ccd9a35c3f8f1e3d1bb776fb742198ee3d0b97367c9c52300c8cecec6bc79f3b07efd7a141717971a2f858585c8cacac2912347b062c50a7cf4d147e8dfbfbfd36b8708b0b2b3b311101000a5528989132762c3860dd5ce03379bcdf8e4934f909c9c0c
abd5eaf4feede828a3542ad1b66d5bc4c7c73b7500a25028140a85521a86617aa1f66297a87b0c85427960210ba652364590055e2f2f2fa7820732b7552a9518376e1cf6eedd8be2e26249ed204eb3aeea18454545a29b0c71242edb06229c707495f1f5f5c5e5cb97dd2e2cf23c8ffefdfb63dab469b5269221c8e572d86c
36d125343030108b172fc6a0418324394c2b140a3cfdf4d3183a74a8e44d3ef7127f7f7f2c5cb8b05663b6e5723902020290919181b0b03028954a8c1e3d1a3ffcf003f6efdfffc02c2a731c87366ddab8adbd104181d56ac58e1d3baa5d877c5071bc8e3c3d3d3163c60c1c3c78107979156b943d3c3c307bf6ec0a37b556
07a55289c68d1be3f8f1e368d3a68d18513f7cf870ac59b3a6c2cd566ab51ad3a64d43dfbe7d6b450cc7300cfcfdfdc5b1f4db6fbfd5b80044a15020313111b367cf86a7a7a7cb9f231b0e81bbd155d3a74fc79e3d7b9cf6914c2643a74e9df0e69b6f4a8a43aa2ac481db62b180e779787b7be39d77dec191234790959555
6bc77505a97f5257690a855213542da89342a1502a814c26835aad466c6c2c56af5e5d618c0b79b8b15aad3876ec18f2f3f3abb4e849e24ecc66336c369b18dd415e24828844a2141414e0b7df7ec3ac59b3a0d7eb01fc5d441832648824bb55bd5e8fb973e762e1c285c8caca72a93e379bcdc8c8c8c0b3cf3e8bf3e7cfbb
5cc02705118661e0e3e35361645545088200abd50a93c92446ae10010a8937223135858585d8bb772f060d1a84a4a4a40a8b39a4cf789ec7b061c344257e75da4a14eb44a8e278fe044110a3864c2613f47a3d6edcb881afbefa0a5f7df595d8f73ccfa36fdfbe080f0f976cd5fae5975f62ead4a9484d4d85d1682cf7c04d
c6564e4e0e66cf9e8d575f7dd5a5430ccff3888c8c4476763604418052a9c49831635cbad0d4ab574ff278b35aad3874e810860f1f8e2d5bb6a0b0b01066b3d9e97822fd456291ce9e3d8bd9b367a3478f1ed8be7d7ba9092099203ef1c41392c7fdac59b3b068d122646767bb1df7e9e9e918376e1c2e5cb8e072dc93be21
ed7014d5300c034f4f4f4905308bc5829d3b77a2a8a8a842b11d892122f1489f7cf209121212b079f3e672e79f6118040404482a9c5ebb760d478f1e85c160a8f03e46ce4f5151118e1e3d8a175f7c1183060d721a8b4550281478eaa9a7248bc07272723075ea542c5fbe1cb9b9b94ec70b89614a4f4fc7f8f1e3f1f9e79f
bb8c52635956cc7366180641414118387060b5eda9c93546aefd8aeedf797979d8bb772fe6cf9fffaf2d8c5128140a8552496ac34d2619c044009182204ca422190a85f220c2b2ac24471941109091918175ebd6b95ce425f3588ee3d0ad5b37c90bd12ccba279f3e6e8d2a58bcb0d1164039ad96cc637df7ce3324ec971a3
1aa92db9fb6cc45d62f6ecd99237ce106c361b4c26130c06034a4a4a60341a5dd6281c615956dc58c2b22c9a356b86d75f7fbdc258128661101e1e8e575f7d55f2863c0289da36994c301a8d30994c309bcdb5ea8ea052a9f09ffffca742f1475948ad42afd7a3b8b8187abd1e46a3d16dbff23c0f4110505454044110a0d3
e9f0da6baf552aaef95ea352a9d0ac5933b77d45c6b2c562c1be7dfb1ed8081652b3b3582c309bcd30994ca5c66465eae22ccb2226260603060ca8b036c3f33c060d1a84810307564a8062b55ac53159545404bd5e0f83c1e056b0a05028e0e5e5858c8c0cd8ed76a8d56a4c9d3a5514a8b8422693a143870e183f7e7ca5c7
2fa9b3198d46f1be64301860341acb6d8a246d301a8d3872e4488d8a2f789e478f1e3db068d122b71b716d369b586bcccfcfc75b6fbd856fbffdd6659dcbc7c707f3e6cd93bcb917b85bff349bcd282929417171318a8b8b51525202b3d9ec769cb12c5bca39bc79f3e678fae9a7c55480eae258b726f7e5b2f76667f5cb33
67ce50a10c8542a916d4518642a14886c4849097abef13970fb26b262626064f3ffd341e7df451787b7b57381924df379bcdd8b46953b5233c2a83cd662bf570c5711cfaf5eb878080800a8b2456ab15bb77efc6ca952b25ed10b2dbedb87efd3a66ce9c892fbffcd2e5a4bea4a4046ab55a748ef8fefbefeb6ce267b3d990
93938359b366c16030e0e5975f76b9204fda4fc40d8f3df61856ae5c59a7e70f4039918642a1c0881123243db8db6c36fcfefbef98316306727272241d8f3804356dda1453a64c29771c5288dab76f1f7c7d7dc1f33c3a75ea84264d9ae0c48913a51ef2799e4762626285852be0ee042233331393274f762b3a71f7fb46a3
11b76edd2af73d8ee3d0bf7f7f4962271271b666cd1ac9e33e3333136fbffd363efbec3397e3de603040a55289716d8e621e0f0f0fc9222c954a5569c196200830994cb87efdbaf8674748349a14140a4585821a67d8edf60a1db5483e7342428224614a494909162c5880efbefb4e92dd32893f9b316306a2a2a2d0a54b97
72f76f8661a0d56a71ebd62d04060682e7798c183102ebd7afaff36bbfecfd9b42a15028148a731886690860420dbd1d758fa15028ff28a4462fd9ed76dcbc79136bd7aec5b061c35cc6e8109707954a8571e3c6213939b9c2f99852a9c4a449935c2e0a13071900c8cdcdc5ca952bd1a74f9f72514c24629bcc29198681b7
b7b7dbcfa6542af1d24b2fa161c38692e7d256ab157abd1ec78e1dc3afbffe8acccc4c141414c0cfcf0f4d9b3645efdebd11191909b55aedb29ea8502844971cb95c8e61c38661ebd6add8bd7bb7cb799e4aa5c2cb2fbf8ce0e060c96db5dbed30180c484f4fc79f7ffe89cccc4ce4e4e4402e978b91d51d3a7480a7a727e4
72798d396c9078ebcac4ba5b2c16646565e1a79f7ec2ce9d3b71f9f265e4e7e7c3dfdf1f71717178e69967d0a2450ba71b89589645686828929393d1b66d5b701c878e1d3b223e3e1ebffcf2cb7d2f286159160d1a34902c8c30180c3879f2e4035713b0d96c30180cc8c9c9c1850b1770f5ea5564656541afd783e779f8f8
f8203434146ddbb685bfbf3f944aa5cbb1ceb2ac584b53281418366c18befbee3bb711423e3e3e98366d9a64a199cd66437e7e3ef6efdf8feddbb7e3ecd9b3c8caca828f8f0f5ab46881679e7906eddbb777fa7e2ccba261c386d8b56b17424242a05028101a1a8a214386202929c9650d49abd562d6ac59f0f2f292d446e0
ee3da9b8b818a74f9fc6e1c387919e9e8edbb76fc3683442abd52230301091919168debcb9187d4ec46567ce9c91144f27159ee7d1b973672c5bb60cf5ead573f973e4df0ae0aedbf3bc79f3f0d9679fc1603038fd79b95c8e91234756b821d91183c180d4d4546cdbb60d070e1c406666260441407070307af6ec89112346
202424c46504bbafaf2f727272e0efef0f854281b163c7e2b3cf3e437676b6a4e3bb82084f53525270f9f265dcb87143147fea743a78797921383818e1e1e168d6ac99582fd6ebf5484d4da5f1eb140aa55a50a10c8542910c71bb68d6ac99d38757b95c0e7f7f7f04060622242404b1b1b168dbb62d7c7c7c2097cb2be530
401e9076ecd8512b99a0522176b352da5e5c5c8c0f3ffc1085858592dfdf6ab562dfbe7d3877ee1cdab469e3f4c1961c5b2693a15dbb7692e3556a92c2c2422c5ab4089d3a7572eb6ae328ea19306080db9d557501b1ededd0a183a47e2b2828c0ecd9b3919b9b5ba9e3141717e3bdf7dec3e0c1839d16686432191a376e0c
93c9049ee7a1542ad1af5f3f9c3973a654fff03c8f471f7d54d27833180c983f7f3e2e5dba54e31382ca8cfba2a2222c58b0c0e5ee356758ad56ecd9b307172e5c40ab56ad248f7be26a5250502069c2caf33c1e7ffc711c3c785072e6b123ae8e210882a436300c83faf5eba367cf9e55b60076776e398e4342428224d18e
dd6ec7c99327b17af56ad1fd492a79797998366d1a7ef9e517a7850962e70ddc3d5fcd9b3747a3468d70ead4293a59a55028140ae5fea4264432c9005600d8240842c5befe140a85f28040a297a46c5ec9c9c9c1f5ebd7b161c306fce73fff71ba4187bc0fcff31830600022232371f6ec599773259665111e1eeeb6364036
8498cd666cdcb81157ae5c713a27271b770a0b0bc5cfe46e630ecbb268dab429860f1f2ed95dc2603060f7eedd9833670efefaeb2fd19580b88eb22c8bb973e7a24f9f3e983d7b362223239dd69488a8c76c36432e9743abd5e2e5975fc61f7ffce1f4b311e1c9e38f3f2eb9de68329990929282f9f3e763cf9e3d30994ca2
7b2969834c26834ea743f7eedd317af468c4c7c7d748fc9442a1c073cf3d2739665bafd7e3db6fbfc5bc79f3909191018bc522b6353d3d1d274e9cc0860d1bf0fcf3cfe395575e711a07ce711cc2c3c3919797073f3f3f28954a8c1831c269fcf6fd06cbb2080909912400b0dbed484d4d752928b85fb1dbed3871e204a64c
99820b172e888e198ed70f7979787860d8b06178edb5d7101414e4b45f88e00cb87bee3b75ea84a0a020a4a6a63aad5fc9e5720c1f3e1c8d1a3592d4cf269309070e1cc0cc9933919292223ab8931afe993367b075eb560c1d3a14f3e7cf77ea72c2f33c62636371faf469c4c6c68a9b1b5dc52f913a696562a18a8a8af0c3
0f3f60c18205b874e952a96bc7f1be44e284fcfcfcf0c4134f60d8b061888c8cc4efbfff5e63d707cff3888f8fc79a356b101a1aeaf2de4b62fa80bb35e6c58b1763e9d2a52e4595e45e3e65ca14498edb8220e0ce9d3b58b06001d6af5f8fa2a2a2520e2da9a9a93878f020d6ac5983050b16a07ffffe4eff0d60591672b9
5c7495090f0f478f1e3df0dd77df55abcf8a8b8bd1b56b576467678baef78ef76572ce643219bcbdbd111717877efdfac1c7c787ba4a5328946a43a39728148a64e47239264f9e8c03070ee0d0a143e55e070e1cc0962d5b90949484b7de7a0b8f3efa28424343a1d1682a1dc3a1d7ebb178f1e22a2d6ed714c429213e3ebe
429185d56ac5efbfff8e3367ce547a61d8683462e7ce9d2e1f281d0503515151f72c73392f2f0fafbffeba5bd710b2d383e338c4c5c555689f59db701c87ae5dbb4a8ee9f9e1871f70fcf8f12aed40292a2ac2aa55ab9c4eec5896457070b0989bca711c7af6ec59eaba204e3cb1b1b1154efeec763b2e5fbe8c6fbffdb6c6
85480cc3c0cbcb0b9d3a759234eef7efdfefb6c8e70aa3d1881f7ffcd1e5b827c796c96468d2a489384123d6c17abdbe42a10a713799376f1e828383ab1d07441004015959596e8f4fc6904aa5c27ffffb5f8c1831023a9dae4aee32aee0791e0f3ffcb0241198d168c4a79f7eea3222cc1d76bb1d7ffdf5974b1b63b2ab84
881ae572b9e4765128140a8542a95b1886f146d5853279b82b8e692b08425b41105650910c8542f9a721259e08b83b2fcccfcf87d168c4ead5ab5dceb5589615e7cb5aad1663c68c71eb782b97cb3166cc1897e28ce2e262715e5950508055ab56c16030a0b8b8b8dc1c95c448e5e6e68a0bc4eedc72e47239468d1a054f4f
4fb79f9d50525282d5ab5763cc9831387efc388a8b8bc5085dabd52a461be5e7e763cb962d183870204e9f3eedb6e642626648dc8aab9a9c5c2ec7934f3ee95420e2aaad6bd6ac41626222befffe7be4e7e7c3603088b11e24eea3a4a404b76eddc2e6cd9b3174e8508c1d3bb6da020ce2063b68d020c96eb09f7efa295e7c
f1455cbc78110683a19488824447e7e6e662d1a24558b870a1d3c56272be499d8be338f4ead50b5e5e5ef7b456270586612a2594494b4b7be0dc640441406e6e2ece9f3f8fc2c24231ae8c8c49123f6330189095958555ab5661d4a851b879f3a6cb7a14cbb2e2f7542a15e2e3e35dd618351a0dc68c1923491467b158b07d
fb768c1a350a478f1e855eaf2f25402163b2a0a0005f7cf105a64f9fee749316a97d9e3a750a56ab5514e73df4d0434edba952a93061c204b7755dc7bec8cecec6d4a9533171e2449c3a750ac5c5c530994ce23dc966b38931de46a311c5c5c5484f4fc7a79f7e8a3e7dfa60e2c489d8ba756b8d086588a3f89a356bd0a041
039763d9512443eea90b162c705b7fe7791e03070e94e4a62508026eddba85f1e3c723292909d9d9d930994ca2c889441e198d46a4a5a561f2e4c9f8e5975f5c5e4f3a9d4e74dc91cbe5484c4cac91f87512014522fb2c164ba92832f2ef5c666626b66ddb86e79f7f1ecf3cf38c24c76c0a8542710715ca5028944a2197cb
a1d168e0e1e151eea5d168a056ab458bc7aa2e925a2c16ecddbb175f7ffdf53d752321799b52ec276d361b0e1c38009ee7a1d1682af5522a95f8ebafbf244de8e47239c2c2c26a74b15d2a76bb1d67cf9e95acac57a95468dbb66d8dd9d45605e24622a50d168b059b366d125d4b2a8bc964425252924b47218661c489844c
26438b162d4ad922cb6432b469d3469205afd56ac5e6cd9b2bed0c220532eea5b6a32ec6bd52a92c35a9b45aad3877ee9c24718e5aadc6d8b163b17dfb768c183102bebebe558e432210e1883bb72b32e6188641505010162f5e8c952b57a263c78ed06ab53522dae1795e52b6b92008b879f3267ef9e5972a3b74198d462c
5ebcd8edf571e3c60d0882008ee3d0a143877b7aed5328140a854271c96b00bc2bf93bc900260288140461228d58a25028ff6488a34c457346411050585808bbdd8e8c8c0cb7d1e1642197e7790c1d3a144141412e2388ead5ab87912347ba14d328140a300c038bc5826ddbb6e1f2e5cbb0dbed282a2a721a1beceded8dfc
fc7c5128e34a0444441503070e94345f359bcdf8f6db6ff1ce3bef203737b7c2e26b4d060000200049444154f9b9c562c1c58b17316ad428a4a7a7bb5ce857a954a2e88338a0386b8f52a9446262a2a4daa3d56ac5f6eddbf1d65b6fe1c68d1b92e6c556ab15858585d59a4713789ec7902143240990ac562b7efef9677cf8
e187e2797347515111962c59828b172f3a3d072ccb42abd58ae7dfcbcb0b717171f7fd7c9d65d90a9d9dc8e72531683515955357109182d4761b8d461c3c78108b162d725b9b21c201994c8656ad5a393dd76463a13b3719d22ebbdd8ef3e7cf63faf4e9b875eb5685d7bac160c0962d5b909c9cecb4e62793c9d0a0410318
0c06516cd1bd7bf772ed94c964888d8d454c4c8cdbf14ac648515111a64f9f8e0d1b36a0a8a848f2863e411060369b91979787ad5bb7567903a5233ccfa363c78e58bd7ab5db3abea348c66030e0f3cf3fc7ac59b32a74ab27b14b52444e068301efbfff3e7ef9e5970a457fc47966dab4696ee394888887e33874ebd6adce
37f55aad5651e844a15028d5856ef5a55028f71576bb1d172f5ec4f4e9d3efa99b0c707752d6a2450b4993479ee73166cc180c1c38b0d21333622f2be5e19638939c3c79b252c7a829cc6633bef9e61bf4ecd9d36531c2683442a95442269321262606dbb76fbf6796ae2406468a9020272707070f1eac565b4b4a4a70e2c4
09f4ecd9b3dc3149d189a0542ad1ac59336465658939b452c79bc562c1afbffe5a2bfd5a9976c8e5728c1b370e83070faed2b8f7f4f4acd4b83f73e60c80bb13a21d3b76a053a74e92daa9502810131383a54b97223d3d1d5bb66cc1a64d9b70f9f265188dc64af7232984262727a35bb76e15b681d8e43efef8e3e8dbb72f
8e1d3b866fbef9063b76ec406e6eae68f75c1948deb8949d8e369b0dbffefa6bb58455369b0dc78f1f474e4e8ecb5c7932066432195ab66c491d6528140a8542b9cfa8a49b4c1e804d005650610c8542f9372165819e50585808411060341ab16ad52a0c1f3edc69b48ee3460a3f3f3f3cf9e49358b06041b9c56e1285e2ed
ed5ccf585252226e6a292e2ec6ca952bc51a0c694b59e472b928a221c219679f8de3383cfcf0c3929c81054140666626e6cc9983bc3ce9c662369b0d172e5cc0ecd9b391949424ba123bc2308c3847e7791e090909f0f6f686d1682c35e78c8d8d456868a8244153565616e6ce9d5ba53a23715da80e0a85028f3cf288a439
727e7e3e66cd9a552937d8c2c242cc9d3b17ebd6ad2bd7a72ccb8ab5a7c0c0407143d9ae5dbbeefbf8251231e60a725e8833cb832694a90a46a3115f7ef925a64f9f5ea13881c4c03bab5991482377ee56a4ef4b4a4af0de7befe1dab56b92fbb8a8a8083366ccc0ae5dbbcab963918d82c78f1f176b6a717171e038ae5c3c
fda04183243bde6cdbb60d9b376fae96035475af098661c0f33cdab76f8fa4a4244444444812c9188d466cdab4096fbef96685f754966511151585962d5b56588fb4d96c3874e8103efbec33c9fd42e2ddbef9e61b4c9a34c9e918a957af1e80bf1dd8a2a3a371e4c89107ced58942a150002a94a15028f71156ab15972e5d
c2f8f1e35de6a7d6253299cced03ad232ccba2499326d53a9ebbe33866d392f8967bf1f069b55af1e79f7fc262b15438216359168d1b37be27ee3704a9e7d06eb7232525a5ca6e3204abd58a93274f3add09c1b22ca2a3a361369b2193c9c428addf7efb0d369b4d9ce848e9af9292129c3f7fbe56c600cbb2951af7d1d1d1
d53e5e4510510d19f7c4f2f5e5975f76b913cfd971d46a35a2a3a3f1eaabafe2b9e79ec3efbfff8ef5ebd763cf9e3da26dacd4fb8ec964c2a64d9bd0be7dfb0a5da7c8f5cb711c743a1dba75eb868e1d3b62e6cc99d8b66d1bd6af5f8f73e7cec16432499e94b32c8b860d1b4aea3f322eab3b5e2c160b2e5fbe8ce0e060a7
93f1faf5eb03b87bbeead7af0f2f2f2fa7f6df140a8542a150ee1952dc649271375e69138d55a25028ff462a13bd44c42976bb1d172e5cc00f3ffce0d201c562b180e779c8e5723cf3cc3358b56a156eddba55ea673c3d3d317efc78970bc33ccf8b6e32bb76ed126390490c94abb91759207517bd446279a488394c261396
2c59828c8c8c4acff7cc66b3189b111b1beb744eabd56ac5af753a1d3a77ee8c2d5bb688f365994c864e9d3a4972beb1582cf8fcf3cf45e79dba86ccdddd6de2b2dbed6059568c0477e50ee30aabd58addbb77232f2faf9cb8846cdc397efc38ead5ab07994c86d6ad5bdff78e320cc354e874ec38f61c8554ff740a0b0b71
f8f061f4efdfdfe9f54aee1fa4cee82ad2282121c1e5f56e3299a05028c47ae9cf3fff5c2967259bcd86949414dcb871038d1b372e3726b55a2d2e5fbe8c2e5dba80e338c4c4c4946b8b5c2e47424282a4ebbcb0b0101f7cf041ad386f5706224c5bb3660d8282822489644c2613b66fdf8e69d3a6212727a7c263701c8784
840449022293c984152b5654da79c5643261ddba75183b766c39a10cc33050abd5309bcd90cbe5e246d963c78e51a10c85427920a1d14b140ae5bec06030e08f3ffec0534f3d85a3478fde170f56244358aad08365d96abddc41fa830865ee559630c935251142ce709c9049d9dd535b104b59c7782357d86c369c3d7bb6da
e3ce66b3e1cf3fff74fa3e642278e7ce1d08820096654be52d97fdb32bec763b2e5dba54ed8c6c57dcafe3deb1504676af2d59b2a4d2fdc0300ce47239bcbcbcd0af5f3fac5bb70e7bf6ecc194295310121202a55229e9fab2582cd8b871a3a41d13e4fd1c77bfa9542a84848460c28409f8f9e79ff1c5175f60c08001f0f2
f2925404a8cc7922858dea8e6fbbdd8e3367ce382dd891229663949894ac640a8542a150287503c3300de1da4d260f77c5316d0541682b08c20a2a92a15028ff56a4d65d1c8532c0df0b9224f6a42c649ec7300c424242f0c4134f945a80e4791e8f3df698cbcd202693497c0f83c180e5cb978b11458220202f2fcf699d86
c48a3846ef389b4792a810a9ae275bb66ca9725cba5eafc78a152b5c6e5612040105050562b46fe7ce9d4bb58be338c931db269309df7efb6db537465515e2e0e26e9eef1833bd6bd72e007745029579b12c8b9b376fba3c06d9c4e2ce65e47ea3322eb5f7420475afb0d96c3878f0a0cb1a0fe9378661101010004f4fcf52
f714994c86e8e868b78240f21e240acc66b355694ca6a7a7bb3c378ef7253f3fbf524e5e64f3a5bbba1211ee58ad56ecdbb70f57ae5cb9e7e380b8d3bbabd79515c9ecdebd1b2fbdf492dba82347388e43fbf6ed25b9a7e7e5e5e18f3ffe00cbb2953a771cc7e1faf5eb2eff3d234e5da4befda0dc5328140ac519d4518642
a1dc532c160bf2f3f3b176ed5a7cfcf1c7c8cacabae70fb5047796b4750de993b282817b81cd66c3eddbb7d1a0410397b9d6c0ddc941bd7af5ee59ff91899694e33b3ee05707bbddee567043229e424343c1304c294b6392452e4528e34ea8545d589695b47bae2eb0dbede244abace0c9683462f5ead5e8d1a3077af4e821
495c5216994c068d4683989818cc9f3f1f53a74ec5b7df7e8b65cb96213d3dbdc2425a414101de7efb6d7cf5d557924421cebecff33cbcbcbcf0c8238fa077efde387ffe3cd6ac59836fbef9060505052ec792bb9d8065b1dbedc8ceceae91f19d969626e91e4dc637cbb2f7cd3d9d42a15028947f39cb51de4d86bac75028
144a1988a3a914a10c117300776b25a74e9dc29e3d7b909898e874919fecc05728141833660c366cd8208a4d341a0d264f9eecd425401004f13856ab15fbf7ef477272b2385faca84e409c58c86773f699ebd7af2fa98663b55ab177efde6ad550ac562b76eedc89f7df7fdfa56b48494909743a1d6432195ab56a556a1196
2cf457b4304be2ddfffaebaf7b362f256e0b52169149244d444444a58fc3f3bc5b071647a156404000341acd7def005b91838963db3d3c3cee8b3a565d60b7db71e5ca15499ba15896859797176edcb821f617cbb2158e49c7b8b8f0f070bcf0c20b95be86388e737b2f75bc17b12c8bf0f0705cbd7a551474b568f17fecdd
777c5455da07f0df9d923e29841620d27b47015d5c04155c0456916644404559c445047471555e41c1b2ab02222ea814414051042ca034912a5d7aef104a486f536e79ff08e7320953eea4a3bfaf9f7cc064923973e7dc4bce739ff33ccd7d264bb927f37cfffdf7854edc2b6ebee2ba8aa2e8e376b95cd8b06103860f1f8e
4b972e193e1745051e23d7949c9c1c0c1932a450c7c657c51a4dd3909b9bab27cad4aa55eb4f73fe11d11f0f136588a8d4a9aa0a97cb85acac2cfcf0c30ff8e8a38f70f0e0c112ab905158922419ae2e51d2dc7f59365221a5a4c722129a7cfdf22f4a3196e558fdf53316344dd37b761785aaaab87af5aacfc5a358e84b92
84f0f0f07c893246c65b70d75a49286ff35e2488151cd3b56bd7f0ecb3cf62ce9c3968dfbebda1b2a39e984c26848484203e3e1ec3870f47efdebd316dda34cc9a35cb67f96a4551b07dfb760c1f3e1c3367ce3494e8e4e9358ab64c168b056ddab44193264d3070e0408c1f3f1e1b376ef4786d343a5fc47314c79cd134cd
effc761f9fbf9654444444543a2449ea0be0feebff9b0ae06b009f689ab6abec464544543e858484dcd46ac2134febacdcdc5c7cf2c927e8d2a58bc74d4ee2e78a36c6f7dd771f962d5b0600e8d8b1a3d776cc8aa2e8edaf7373733163c60cbd9a8c188ba85eeb897bb5564f37ae453b7123153c64592e728b0d916474eedc
398f156edc37ae89a498a0a020646767ebafa16ad5aa7ed7c3aaaa62dfbe7d01b58c296ebedadf1414141484912347167aed2e5a7379121616966f4c515151b872e54aa19ea734689a966f8efbe22d66f447a5aa2ace9e3d6b689e78da7029aa0a19895f59ad56242424143ad1cc62b1787c9e8295bbdcab5d89787393264d
7c9e37e27b6559c69e3d7bcaac3abd2449fa872f8aa2e8afc7e57261ebd6ad18366c182e5ebc68f89cf7547dc7d763ebd6ad8b575e79c5d80bf1c0c8bf85be2a951111dd0a78f522a212a5691a144581cbe582dd6e477a7a3ab66cd982b7de7a0b9d3a75c2f0e1c3b17bf7ee7297242318f985b034b867f217a672467112bd
af8d28cb848b408f55767676b1249f288a6278015930b1c368a24749f6dc15ad89ca03f74596a731699a863367cee0a9a79ec2f7df7f5fe4f7509224040707233e3e1ee3c78fc79c3973d0b061439f8b3da7d3899f7ffe194f3df5140e1d3a147039e7826d994c2613c2c2c2d0be7d7b2c58b00063c68c417474b4c7ef0de4
7dcac9c9299644197f73cf3d30111414f4a7095411111195579224c520af9acc2e00ff005057d3b47f30498688e86681b4bbf69428235aa2f86a292e76f6070707e389279e40686828424242f08f7ffcc36b35199130a0280a76eedc894d9b36e95562c463ae5cb9e2311621c6273669848787df142b09a475b668c95b1cad
ab0f1c38e0357e221283c4df4545de406eca2a8a82e3c78f9769955393c914507b6b5171a8301fde9e43c4c7dc93126e85c41251b1c21bf17acb43f5edd2e4abd55a410537e989cf193ddf81bc6499c2ce496f892e62736ac196ebeeedbc6bd6ace9778c9aa6212525c5678ba7d2e02f9eeb9e2423920d9f79e6199c397326
a07107d2861dc83b470afbde050707fbbc46b89f7f46ffdd24222a8f585186880222cbb2c7c5b0fbc21bc85b383b9d4e242626e2f4e9d3387dfa34f6eedd8bdf7efb0de7ce9d83d3e9d47b9196670e87a35c8cd17d574f5965c8bb33da27585194323b7e9aa6e50b1c797b8cf845de3d085354be1607eec7ae60e94b7fe315
4a329145d3b432ebdd5d90fbb1f2766c443ba0679e79064f3ef924468c18816ad5aa1529494304121e7cf04154af5e1d83060dc2d1a3477df6555eb3660d1e7ef861bcf2ca2be8d5ab176c365b40fdb4dd77c2881d37152b56c4d8b16311171787575f7df5a60435a3f305b891b456d4f3d1df79e2be589765b95c5c3f8988
88fee46e07d08589314444fe196dbb0478afdc999b9b8b993367a27dfbf61eab6c8af5bcc562c1dd77df8d56ad5ac1e572a143870e1ed7909aa621222202405e8c6af6ecd9376d3653551557ae5cf1b8fe2a58edc0643221323232df8df6405a67abaa8af3e7cf174b45de23478ee46b45e28dc964425c5c1c4e9e3c090001
25335db870a1cc1365cab22db9e07e23ff56b8b16da4edb8fb8d7aa3e7ed1f817bdb1b230a5e87c4f95496c74b9224444444202b2b4b4fc8704f94912409356ad4305475fbd2a54b651a2b9724c9670b7bf724194dd370e2c4090c1b360c274e9c08f8da64329950b972e57231d7dd37f5fe9912d588e88f8789324464982c
cb58bb76adc79d2b76bb1d4ea71399999970381c3879f2242e5cb8809c9c1ca8aa0a5555a128ca2d75e3b460bfe9f2c048458792261633fe045226b5a404b2702c8e208148b0f0b58bc76432419224a8aa9a6f7ce278b927ef78fb1925bdf3a73cce7b5fbdb34595a38f3ffe184b972ec5902143f0d8638f212e2e0e414141
864a1c7b62b55ad1b2654bcc983103fdfbf7f71a7804f2ae8fa74e9dc2f3cf3f8fd9b367e3b9e79e43d7ae5d61b3d97c963f2e480408c5423a22220283070fc6b56bd7f0ce3befe40b888af9e28ffb9c296ac51d7fe7897b859c9c9c9c423f17111111150f4dd3d694f51888886e15815694f1b476966519ab57afc6912347
d0ba756bafad94cc6633c2c2c23074e850a8aa9aaf358ebb8c8c0c4447474355559c3c79122b57aebca99590b859eceda6ab7b228a7b5281fbd80b569df0f5ba8babb56f525252c06b5ac078fc4655559fb184d260369bcbbc6a6fc1d6e8b74245197f731a40bed763a4fac81f85489431ca62b1dc5451262222a2ccdf7f9b
cd86acac2c3dc924323252ff9abfe427d19ea934dad31be1eb58161c5b6c6c2c1a376e8ce3c78f17aac2bed136ec25a96095aaf27e3d2122f2858932446498a228d8b871233efcf0438f1527344dcb5751a62c776c1407f1cbb651c5d5bac71787c381ab57af96e9b1952409b1b1b186ca5f1a2d055a1244f284afe777df51
25fa5f178591129862e127ca83ba8f4f04d9fc95b6f4b553a1a8025d6496c6bcb7dbed86e6bdc3e1c0d9b3673171e2447cf4d147e8debd3b060c1880b66ddb222424a4506dcbac562bdab66d8ba79f7e1aefbdf79ecfe42f91c8b675eb56fcfefbefa859b3261e7df451f4ebd70ff1f1f13ecbce16643299909d9d8db0b030
84878763f8f0e158b1620576ecd8a15f5f0329b55b1cf3db6432a16ad5aa86824f627edfeaff0e1011111111d19f472089322e97eba62ab1425656163ef9e4134c9e3cd963028cf8f956ab158f3cf288d7d6d19aa6212a2a0a405e25d3cf3fff1c9999991e1fe72b21c45ba28cfbe78cb6829665b9d85afb6666661afe39a1
a1a1fadf03a95e501a310b5ffcb52f290d9e1265dc8f6779a4aa2a2e5ebc6828a660329950b76e5d04070797f9e6c2d2e272b98a34afcb3ad9c26432213c3c3c5f8cade0984465644fec76bb7e6d0de43a52162c160b9c4ea75ef9ba62c58a98366d1a6c361b162e5c18d02633d1b2aa3c100980e2fa424474ab62a20c1119
a6691a1445d1db26fdd1055251263333133d7bf644727272898f29313131a0962bc5cd62b1a066cd9a86ca5f7aeb915d1a344d437272321c0e87df208ac96442c3860d0b5d7944309bcdb8ebaebb7cf6e0152532555545626262bee4b2cb972fa3458b163e9f439224d4af5f3fa0b63e815055d5f0bccfc8c8408f1e3d909a
9a5a226311344dc3c58b170d955215ada3ae5cb982f9f3e7e3ebafbf46ab56adf0e4934fa267cf9e888c8c345ce145ec50090909c1d0a143f1e5975fe2e4c9937e8f8daaaac8cecec6e1c3873169d2247cf8e187e8d6ad1b860c1982366dda203434d4effb274a63cbb20cabd58ae8e8688c1933064f3cf1841e94f4b7bb4a
10f37be7ce9d452a476b369bd1aa552bc37debdde737111111111151791748a28caf0ab62e970bcb962dc3e8d1a3d1a041839b7e9ea884e0ef06637a7a3aa2a3a3a1691a2e5fbe8cc58b17df544d46f056c1b960128cb74a0d46d76ec579733d900a20858d2d15aca651dadc37159615499250ad5ab57cc7a1acc7e48fa669
3873e68cd7f9ee4e54c869dab429b66cd9522e5ad6977765fdfe8bd64a9aa6e9d78182633252a5a53c9c5fc08d36eade040505c1e572e9f1c84a952ae13ffff90fc2c3c3f1d9679f194ef02a2fafb7e086bcf2302622a2c262a20c11911781dc88369bcd902449efaf5cd2e32a2ba28fadaf928aa284b0aaaa3877ee5c9956
94906519172e5c40850a157c0660cc66339a356b56a88a23ee2c160bdab66deb315146b4a211c74e55559c3a754a9f2fa2cfb7aaaa3e13762449427474346ad5aa85fdfbf717fbf10d74de0328b7f3dee572c1e57261f3e6cdd8b56b173ef8e0030c1e3c18fdfbf747e5ca95fdee9873ef775da952253cf0c003f8e4934f0c
056ac4981d0e071c0e07162d5a84e5cb97a343870e78fae9a771df7df7212222c2e77b1d1a1a8a6bd7aea152a54ab0582cb8efbefb1017178753a74e05747e592c16b468d1025f7ef9a5e1b17bfb394d9a34f17a2e891d32a22ad1b56bd7b8582622222222a25b86bf761f82687de26bbd93969686d9b36763c284091e2b00
288ae2770385d8f4e372b9b078f162bfad8abc7d2d2c2c4c5f3b7a7a8d62ed6a8468115cd4762781b6ff716f556d74ac81243e9594dcdc5c9feb707f55858b8b7bbceb5668952c2af69e387102b7df7ebbd73884d8e064b158d0a143076cdfbe9d893206882a2c9ee69e38a625ad604bb28295aa7c557416f13cd146aa2c89
367255ab56f5792e5bad563d660e003131319830610200e0d34f3f357c4e96875653c08d98f0ad703d2122f2e5cfd1b89188a8101445c1b163c70cdf88eed4a913cc66b39edd5d521f65c96c36a343870e86124a1445c1912347ca34514651141c3c78d0ef2259ecae69d8b061911683168b05ad5bb7f69a2873eedc39fd3d
946519070e1cd08f8faaaa86134eac562b3a75ea542255651445c1d1a3470dbd6f621ce57ddeabaa8a9c9c1c1c3c7810e3c68d43c78e1d317dfa745cbb76cd7000c562b1e0de7bef2df43197651919191958b56a15060f1e8cbffffdef58b3668dcf32d0a224abf87a6868283a76eca827a29d3871c2d062d46c36e3af7ffd
6b91faa29b4c26c4c7c7fb6c2d265ad5298a8203070e142929878888888888a8b4194dac108932beb85c2e7cf9e59737b55c16fcad2d333232f4b557464606e6cd9be7b7bab3a7f5ad2449080f0fd75b3389cd37055fa3d1f625c5957c2236a418f939ee6d9afcb5992af81c9e5e6b69f2375ef7d88bfb669b92fcb0dbed48
4d4d2df7ad926559c6debd7b7dc66dc47b6bb158d0ad5bb722c53dfe2c34cd77abfa8255cc4b6b4eba5f2b8db6932b0fc9709aa641555543d724f7e41200888a8ac2ebafbf8e84840443edd0c4c634a364592e95f72e2929a9dc5f4f8888bc61451922222f5455c58103070cb539b2582ce8debd3ba64e9d6a7867cbad2828
2808ddba75f319d011bff42b8a827dfbf695e94e0e5996b167cf1ef4eedddb6b728f0814050707a36fdfbed8bf7fbfdf8097272693094d9a3441cd9a35bd261288c401514de6ead5abfae2485114ecdfbfdfd0f1b2582c78e491473067ce9c626f83a6aa2a0e1e3c6878de3ff8e08398366dda2d31ef354d83dd6ec7d9b367
316edc387cfbedb7983061023a76ece837f9cb6c36a34d9b36454e4e521405595959d8bc7933faf7ef8f3e7dfa60fcf8f1a85ebdbad785fdf9f3e7111f1f0fb3d98cd6ad5b63e1c28590651976bb1d070f1e446c6caccfca342693098d1a3542dbb66db17efdfa429d9356ab158f3cf288cf2a3ce1e1e1fa6bdcb9736799b6
882322222222220a5420375d0b563f2848d3345cbd7a155f7df5159e7bee398f37f0ddab0b14fcdea0a02048920497cb85952b57e2f4e9d33e6f446a9ae63551263232121919197aab8c8215655455c5952b570cdde835994ca855ab168e1f3f5ea41ba32693098d1b3736d402dbbdb5af68436574acf5ead52b95ea18de68
da8db6ee9ee695fb8df33367ce60eedcb925deeedee974e2f8f1e365be19cf1f4551b079f3660c1830c06bcc461c53b3d98c962d5ba2499326d8b163076fdafba0aa2a929393bdbeffeed7aaacac2cbcfffefb3eabbb14075996b179f366fd1ae65eeddad7f92b49126ebbedb62257082f4ee235f8bab6896b99c964424c4c
0cde79e71d64656561e9d2a57ecf7f713d31328e55ab5695783b324dd390989858e2d72d22a292c2441922222f5455c5d9b36771e1c205bf9546c402ffc1071ff4d933fa56663299d0b06143c3954cb2b2b2f0fbefbf9769a28ca228f8f5d75fe172b93c963a066e2caaad562bfaf4e9834f3ef904274e9c08386010161686
7ffdeb5f3e7700c4c7c7eb81aef5ebd7e74b245014057bf7ee457a7a3ac2c2c27c06e644d246a74e9db062c58a624d4810493c972e5d42444484cf71984c26346bd60c0f3cf000962c5972cb244688b2a05bb76ec5e0c183b168d122fce52f7ff1dbf22a2626a6d87627298a82f4f4742c58b000a74f9fc6d2a54b111919e9
71aca2acaac96442e5ca95f56b912ccb58bf7ebddfb103404848089e79e6196cdfbe1d999999018d5554b6193c78b0cfd72fe6bea7f94d4444444444742bf0b42e2bc8484519202f2161debc7978e289273caea5bcade3ec76bb1ec3b0dbed9833678ea1cd299e6251a2358968dbe42d51e6c2850b865b30376bd60c6bd7ae
f5fb587f3fa769d3a67e5bfb02794949eead7daf5cb962e8a6acd86c622419a7a4a8aa9a6f93942f9aa661c68c19484b4b2bf171b95cae729f2823cb32366cd880dcdc5c9fb13631afc3c2c23064c810ecdfbf9fad607cd0340d57ae5c319c4cf4f5d75f172a4e1a285996f355dd36724d12d7b3dab56b63efdebd659e20a5
280a366edc08b3d98c76edda79dd6c663299f49899c964426c6c2cde7fff7d24252561c3860d5ee36922c9c9c8eb54551567ce9cc1b469d34a3cd149d3b43fe4bd1022fa7360eb2522221f9c4e277efdf55743377c434343f1e28b2fa2468d1ac5ba5ba52c77beb8b3d96c1833668ccfa091f8455d96656cdbb62de01bf2c5
4d55551c3d7a14274e9c30b4b8aa56ad1a5e7ae9a580fbdb5a2c16dc75d75db8fffefb3d261189b2a6a2e4afcbe5c2aa55ab6e9a57d9d9d9d8b46993a1e4a2b0b0304c9830a1d8e71b9037ef7d2dcc0a8ee3a5975e428d1a358ab5d4a991d754d4609708587dfef9e786167462a787789d922415f935dbed76ecdcb913870f
1ff63a47c5ce184992101b1bab3fa72ccb58bb76ada100a1a8fef3b7bffd2de0649fb0b0303cfffcf33edf63b1e816bb7e76efdecdbee04444444444744b29ce8a3240de9af3f8f1e358bd7ab5e18d049aa64196654892044551b07dfb76ecdcb9d3d0fa4a96e59bc62449121dc2be5300002000494441546c369bbe01c35b
a2ccb163c70c8d51dc002e4a0507499250a14205c4c7c77b5dfb8b6411455170f8f0e17c6b7687c38163c78ef93d2666b319cd9b3747c58a15cbac358baaaa3879f2a4a19854a54a9550a74e1d288a02a7d359a21fe53d4906b891d0b16bd72e43ed974425dce6cd9b979b586a79a4288aa1382990770eb56fdf1eaaaa96f8
9c741f8fa2283876ec98df2a5a405ebcab5dbb76659a1027689a860b172e60f0e0c1f8faebaf7d26549acd66381c0efdba1c17178769d3a6a14993265e5f8ba85466a4aa8cd96cc69d77de094dd34afcbd63920c11ddcaf81b0311910fb22ce3bbefbe3374235ab4de79efbdf750bd7af522b568912409212121a856ad9adf
6a3681fedca0a020bd84af51919191183162041e7ae8219fc110314e97cb8565cb96958b5f941d0e07962c5962682c414141e8dfbf3f060c1880b0b030433fdf6c36a3418306983a752a6c369bc7c7883ed3c08d00d4d6ad5b6f0a42399d4e2c59b2c4d04e3193c984a64d9b62c68c19a859b366a1e79bc56241686828a2a2
a2f4cfb95cae80e67df3e6cd8b7dde3768d0c0e7bc0f0e0e46870e1d10151585e0e0e0429f23629169344824ce1b93c9843a75eaa041830688888880d56a2d74e04d9665bd8cb427eee79cfb7388f666fe7a760b11111178e38d37d0b2654bc3ef534848087af4e881679e79c667db25917c23e630776f1111111111d1ad46
545ff1b7b6136d7d8dac231d0e07e6cc9963b8c5b3a2287a6cc1e17060eedcb986aa01889ba19e848686222b2b0bc08dc49982df7be5ca159feb52c162b1e09e7bee41d5aa550bbd06b65aade8d1a387cf2a21a2a28ea228f8fdf7dff3c54f6459365cc1d866b3a14f9f3e65d69a4555551c3a74c8e758c5310f0e0e46d7ae
5d8bdcf2f98fc4e572e19b6fbe31dcd6253a3a1a13264c404c4c4c098fecd6a5aa2a0e1f3eec734e8aeb95d56a45d7ae5d8badbab251a22dbcaf318a6b82c562c1430f3de43366555a344d83aaaab87cf932468d1a852fbef8c26b7c4cc440737373f52ad20d1b36c4c71f7f8cb8b838afd757599671e4c811bf894e269309
f5ebd72fd6fb0a44447f44bc421211f920cb32b66edd8a43870e19cab40f0a0a428f1e3df0f5d75fe39e7bee81cd6643505090df5f48254982c56241707030222222d0a85123bcf2ca2b58bf7e3d860d1b566c0b128bc582471e7904a3468d42cd9a35111616e6f506bfc96442505010e2e2e2f0faebaf63ecd8b1080f0ff7
fb1ca2a2c4cf3fff5c2e5aafb85c2e2c5ebc18292929861e1f191989b7de7a0b4f3df514a2a2a2bc06284c2613424343d1aa552bcc9e3d1b0d1a34f0ba88c9cdcd45952a552049121c0e07e6cf9fef71a124cb32d6ad5be7b7f7b860b55a71efbdf762d1a245e8dab52b6c369bdf840d93c904abd58a90901054a850013d7a
f4c0ac59b3f0c1071fe8412a5996b169d326430b2f206fdef7ecd9138b172f46c78e1d0b35ef6d361b1a376e8cd75e7b0dbffefa2b860e1dea3590259273befaea2bac5bb70eafbefa2a5ab4688188880843cfebfefca1a1a1b8e38e3b0ced3c511405292929d0340d168b058f3ffe387efdf5577cf5d55778e2892750a346
0d848686c262b1180e189acd66d86c363469d2c4ebf7888090a6697ab96cc16eb763fefcf98692ab244942fdfaf5317bf66cdc79e79d080d0df57aaccc6633222323f1c8238f60ead4a93e834c2e974bff3919191958b870217b131311111111d12d293c3cdc704519236459c6962d5bb06fdf3e43891d191919006eb4455e
b972a5e14d48bed685a2720190973c52f035ba5c2e6cdebcd9501cc766b3e191471e2974ac2a3c3c1c43860cf1f9fda29ab12ccbd8bc7973be63a728ca4d9ff32628280803070e446c6c6ca1c65a548aa218ae0864b55af1f8e38fa342850a655601a7bc71b95cf8e1871f6e8a857863369bd1b163473cf7dc7301578bfeb3
505515070e1cf099bc27924e2c160bba74e982468d1a956ab285a228d8bf7fbf9ee0e78988198a2adfbe5ab995856bd7aee15ffffa17e6cc99e3335926343454af5066369b71c71d77e0edb7dff65ad15d9665ecd8b1c3d0352538381843860cd1130f8988e866e5e75f0e22a2722a3b3b1b3366cc30bcfb272828086ddbb6
c5d2a54bf1f5d75f63f8f0e1b8ebaebb101b1b0b9bcd86888808fdc366b3a142850a68dab4291e7cf0418c1b370e3ffef823366fde8cb163c7a276edda68dab469b1958f942409152b56c4cb2fbf8c4d9b36e17ffffb1f12121250ab562d444646eae3aa50a1029a356b86679f7d163ffcf003860f1f6e7881e97038306fde
3c242727978b52aea2ece5bc79f30c251300404c4c0cde79e71dcc9f3f1f7ffffbdf51b97265848787232c2c0ce1e1e1888c8c44cb962df1ca2bafe0c71f7f44dbb66d7d96c55455152693490f747df9e5975e035d19191998356b96e1b15aad56b46ddb165f7ef92566cf9e8d010306a051a346888a8aca37df6c361b6262
62d0bc79733cfef8e3f8e8a38fb075eb562c58b000bd7bf7469b366df2bd86acac2ccc9c39d3701fdba0a020b46fdf1e4b972ec5e2c58bf1ecb3cfe2ce3bef44850a153ccefbd8d858346bd60cddbb77c7fffddfffe1c71f7fc4a64d9bf0d24b2fa166cd9a3e4b8d9acd66b469d30651515168d5aa15c68e1d8bf5ebd763e9
d2a518366c185ab46881c8c84884858521343414a1a1a1080909d13fc2c2c210111181faf5eb63f4e8d118316284df009fa669484e4ed613402c160bdab66d8bd8d8583cf0c003983a752ab66ddb868f3ffe187dfbf6457c7c3c6c369b3e06f7e70f0d0d45585818a2a3a3d1a143077cfcf1c7a853a78ed705bd08628a5d29
eec94b2e970b4b972ef5d9baa9e0b16bd2a409962c5982891327a27dfbf6888a8aca37bf2b54a880071e78003367cec48c193350a54a159f3f532493399d4e7cf5d557864bf812111111111195279224212c2ccc5045195105c088dcdc5c7cfae9a77ed7f99aa6e99b149c4e27e6cd9b67b8a5b5a864eb6d4c2206214992c7
6420d1dad748a24c707030860f1f8e3a75ea049cd0111414843e7dfaf8bcf19e9d9dadff3d2323035bb66cc97753589665fcfaebaf3e6fa20b2693098d1a352a549bede2205a475db972c5eb7be3dede393e3e1e4f3df594cf6a3b2525904abba5d5e646d334a4a4a460d1a2458613c6424343317af4683cf9e49325f69e9b
4c2684848418da5058de689a86cccc4c9f2daddccf4d9bcd8691234796faf993959585eddbb71b4ede2b8f9584d2d2d2306edc382c5ab4c8eb7d05f1ef4e666626344d437070307af5ea8511234678ac762e12058d564eefddbb375ab468512e5a5311119547ace34744e487cbe5c2f2e5cb3164c810dc75d75d86b2d34d26
136c361beebfff7edc73cf3d5014058aa220272707e9e9e970b95cb0582cfacd69d13ac662b1c06c36ebbfbc6a9a86faf5eb17fb2fb3212121a85ebd3a121212d0b76f5fc8b28ccccc4ca4a7a7eb9546cc66332c168ba10a1da29faaa669387ffe3ce6ce9d5bae2a4ad8ed76cc9c3913bd7af542fdfaf50d0572c2c3c3f1e0
830fe2befbee436a6a2a2e5ebc88d4d454040707a372e5ca888f8f477070b0cf040b4dd3909191a1ef02c8c9c9c194295370edda35af0108a7d389458b1661c0800168d3a64d40f3ede1871f46f7eedda1280a1c0e07323333919d9dad975616491ae2bd75af7c222a0c89409348c078eaa9a7d0ae5d3bc3e3888c8c44972e
5dd0a953277dde67676723232323dfbc0f0f0fd7e796188b780e31efbd55f3b1582c68d3a68dfe3da29d58e7ce9d71f7dd774396655cbd7a15a74f9f467a7a3a727272909595a55782a954a9126ebbed36d4ad5b1721212186cab32a8a825dbb76e90bf4a0a020b46cd91266b359df01121a1a8a010306a07ffffeb0dbed38
7ffe3c2e5ebc888c8c0c646767c3e170e46b2f55bb766dc4c5c5212424c4eb6bd5340dd5aa55d3fbd37b0a64a4a5a5e1fdf7dfc7cc9933bdb6ff2af83e55ae5c19fffce73f3174e850242626e2f2e5cbc8cece46747434aa55ab868a152b223838d86fc967599661b158a0691a121313317dfa74c3c955444444444444e589
4822f14724ca18e572b9f0e38f3fe2fcf9f33eabd1a6a5a5212626466f11fcd5575f05d4d2dad798c45a56c4073c25caac5fbf1e494949888f8ff71937912409d5ab57c71b6fbc81e1c387232929c9d0f8cc66339a366d8a575f7dd56b2288a8aa00e41db7952b57223535355f0c456c6459b76e1d7af7eeed77dd1a1c1c8c
a79e7a0a478f1ec5175f7c912f11a734e4e6e662e5ca9578e69967fc6ed2090909c1a851a3b077ef5eac5dbb36a079e68988eb893891379aa619aa5001789f4325c5e170e0b3cf3ec3e38f3faec747fc898a8ac2c4891351b56a554c9e3c19a9a9a9865f9f2fa22a72e3c68d3178f060848686e2f9e79fbfe5da4f8b96ebf7
dc738fdf98b3d56a45af5ebdb06bd72ecc9a35cb50829a2f2693498fc3f99adf222e79fffdf7fb3dc74525a1975f7e1993264d427a7a7aa1376f8a586371c5b5535353f1f2cb2feb715b4fd700714ee5e4e4e89bd8468d1a85e3c78fe3db6fbfcdf7ef80a87e9f9898887af5eaf93d1f6263633165ca14242424e0dcb97345
3e0f828282101c1c6c38899388a8bc63a20c119101e9e9e9183f7e3c162d5a848a152b1afe3ef7a41720af74ac7b75067fbfcc4a928498981854a95245cf2c2f4e56ab552f5569b3d910171767685c9ec609e4edfa993c79322e5dba542eaac9089aa6e1e2c58b983469123efae82343c90440defb17161686b0b030c4c5c5
e9afc96432193a462e970b515151fadf57ad5a85c58b17fb0d7425272763fcf8f1983f7f7e40bb2144c20900bd3290e06fbc56ab1575ead4c1b56bd7f46a20a9a9a978fdf5d7b170e1c280ca147b9af755ab56353c1651f9a852a54a1ee7bda828537031effebce1e1e1a859b3a6febdee3f439224984ca6804ab2ba5c2e7c
fffdf7906519269309f5ead5437474f44daf459c53a1a1a1888a8a42d3a64da169da4daf413cbfaf632176f944474743d334a4a5a561ddba75372d6a4529e2e5cb97a35fbf7e86cb5f8b04a3faf5eba36eddba00f28e8df8f04755557dbe656565e1dd77dfc5e9d3a7cbd5b94f44444444446494244988888830dc7a2990b5
4f666626e6cf9f8f71e3c679ddac2136d98816d257af5e35fc1cbeaadc884ab7629393a764204dd3909a9a8a6fbffd16c3870ff7bbaeb45aade8d1a3073233333176ec58a4a4a4f8bc012bd69eb367cf468d1a35bc1e6387c391ef26fa175f7ce1f186b5d3e9c4175f7c81eeddbb1baa741115158577df7d17717171983e7d
3ad2d2d2024a422a0a97cb85254b9660e0c08186d6eb152a54c0cc9933317efc782c5ebc18d9d9d901b536179ba342424270efbdf762d0a041983f7f3ebefbee3b9f3f272727c7e7d7154581d96c86c9644283060d60b1584aa5e5baa814fdd9679fe15ffffa97e16a3b91919118356a143a74e88077de79079b376f86dd6e
872ccb0155cf11b1b6c8c84874eedc19fdfaf543e7ce9d11161686e4e4648c1b372ea00a53e581cbe5c28a152bf0da6bafe9b1605f222222307efc7854aa540953a64c417a7a7a40c7516c920b0e0e46ab56adf0e4934fe2e8d1a3983c79b2d784145996f1d34f3fe1ead5abb8edb6dbbc5e334415efd0d0500c1f3e1c369b
0d6fbdf5162e5fbe0c97cb65b86597d8d8d7a54b17dc76db6d983a756ab125cb5cbb760d2fbcf0022a57ae8cbbefbedb63e28f2449080e0e862ccbb05aad888989c1a4499370e8d0211c3c78305fe5e69c9c1c2c5fbe1ccf3fffbcdf6b8ac964c2edb7df8e850b1762f4e8d1d8bb772f1c0e4740897166b3591f534242021e
7ae8213cfcf0c348494909ec40101195436cbd44446480286bf8c1071f1479e7492037a281bc5fd61b366c582a7d56031957414ea7132b56acc0c2850bcb553519c1e97462e9d2a558b46891e1b646ee4c26939e88613489402c56344dc3f1e3c7316edc384319f7b22ce3975f7ec1f4e9d38bb42b2590b966369b6faa5ea4
280a366edc882953a694fabcb7582ca85fbffe4df35e92244447477bfc5ac1c7b957ce11092c56ab355ff51a23344dc3e5cb97f532d4de12750a1273a6e0f35bad5643f34896e57c7dd93deda413b2b2b2307efc781c3a7428e0dd21e258898097d1f7481c4387c38165cb9661e1c285853ab7888888888888ca83405b2f05
42b4aa4d4f4ff7fa18b1c6ccc8c82854a5deecec6c433785bd5503713a9d98356b165253530d3d5f4848081e7bec312c5ab4087ffdeb5f11191989909010040505c16ab522282808212121a858b122060e1c881f7ef801cd9b37f7b996166b65d15e69fbf6ed1ed7b8b22c63c3860d5ebfee49545414c68e1d8b952b5762d0
a041a85ebd3ac2c3c3f54ab3e2c3bd65b2a73655815214053b77eec4860d1b0c2596489284b8b8384c9e3c19df7cf30dfaf5eb87f8f878444444e8ad9d3d8d373c3c1c952a55c2fdf7df8f71e3c661eddab5983f7f3eba76ed6aa8adbbaaaac8c8c8f03a87440cc06ab5222121010d1b36444444845e8db624e39676bb1dff
fbdfffb07ffffe805a3d878686e2eebbefc6e2c58bf1edb7dfe2c9279f44fdfaf5f563e9e9388af7de66b3a16eddba484848c0f4e9d3b173e74ecc9a350b3d7bf64474743482828210151585bffce52fb75c5b1b11e75ab06081e1eb4c747434c68c19839f7ffe1943870e45bd7af560b3d9fccec9989818dc75d75d183366
0c962d5b861f7ffc118f3efa285ab76eedf3b889b65bf3e6cdf33946f77917161686279f7c123ffffc33860c19821a356a783c6fc4f822222250b56a5574ebd60d93264dc2d6ad5bf1d9679f61c080018637a11975f9f2650c1b360cc78f1ff77a8e99cd66d8ed76a8aa0a499250b3664dbcf3ce3b888e8ecef738a7d38939
73e618be565b2c16b46bd70ecb972fc7d4a953d1b16347c4c6c6e66b17ef7e6c44db7a9bcd865ab56aa17ffffef8f0c30fb165cb164c9c38112d5bb644eddab54be55e05115149634519222283727373f1f1c71fa37efdfa78f4d1474bbc5fb0d8e923766aac5ab5aa58ca8496045996b167cf1efcfbdfff46464646590fc7
abcccc4cbcfefaeba85dbb36eeb9e79e625ff40862978d70f9f2658c1a350ac78e1d33bcdb2227270793274f46fdfaf5f1d0430f212424a444c62a784bc8cacdcdc5b469d350af5e3df4ebd7afd4e77dc10a2a66b3192d5bb62cb1f7ce939c9c1c4c9f3e1dc9c9c97afb26d1faa9a4689aa6579d1165b73ffae823af89289a
a6e1ecd9b378e18517f0f9e79f233e3ebec416ace23d02f2cefd1d3b76e0dffffe37cbae1211111111d12dcd6432212c2cccd06303ad2021dad52e5bb60c4f3cf1845eddb7205131f4f4e9d3012504689a6668838ba828e369bda8aa2a4e9e3c89f9f3e763c4881186da14070707a353a74e68dfbe3d0e1f3e8c4d9b362131
3111b9b9b988898941ad5ab5d0b97367bdedb0b7a413917c24620e191919983c79b2cf84241137b9e38e3bf44d26fe848484a075ebd6f8e8a38f909e9e8eddbb7723313151af30235a2b57aa5409b1b1b1a85dbbb6e1aac4be88b8c25ffffa57bdf2b02fe27deadcb9333a74e800bbdd8ea3478fea2da6333232f40d5a6161
61a858b1226ad5aa859a356b223c3c3c5f8b6b59960d6dc0531405e7cf9f478d1a353c263088f7ce6432a149932658b3660d7efbed37ecdebd1bfbf7efc799336770f8f0e1126b6d75edda358c1b370e0b162c08b8dab7cd66d3db753b9d4e9c387102c78f1fc7850b17f4f73d3c3c1c111111888c8c44585818e2e3e351a3
460d040505e91ba0041117b15aadb8efbefbb062c58a52a9ae539c1c0e0766cd9a85848404c32dad424242d0aa552bbcf7de7b703a9d387dfa348e1d3b86b4b434646464e8edb9c3c2c2101515a5cfc9a8a8287de39ad96c86aaaa68d0a081df0423a7d389b973e7e2f1c71f47ad5ab50c8d312828080d1b36c4071f7c80f1
e3c7e3f0e1c3387ffe3cd2d3d3f5b651e23dae5bb72e1a366ca89f3356ab554f50b1d96c86930f8dd0340d274e9cc0902143b064c9128f957c4455b3e4e464c4c6c6c262b1a053a74e18397224de7df75d7d33a5aaaa387dfa34befcf24b0c1b36ccd0b5da6432a152a54a183c7830121212909e9e8efdfbf7e3ca952b7acb
78007af28c68195fad5a35fd1cb0582c9024099aa6a17efdfad8bb776f40ff4e111195474c9421220a407a7a3a5e7ae925689a86fefdfb1bea5d5d58e2977fb3d98c060d1a94db2c6d599671f0e0413cf3cc33387bf66cb92f357ae5ca150c1d3a143367ce44c78e1d8b3d01c5bd9fb6aaaab87cf9329e7ffe79fcfaebaf01
2f9a5352523072e4480040cf9e3d0d07ec0ac3643279add2929e9e8e175f7c11aaaaa25fbf7e653aefcd66b3df5d27c5c96eb763c58a15983d7bb6be83c5684599a210555e80bce3ffc61b6fdc546ab5205996b165cb160c1d3a143366ccc06db7dd56226314ef91d3e9c4ae5dbbf0f4d34f97bb766b444444444444810a0d
0d35147bf1d5e6c81787c381cf3fff1cad5bb7f6ba09c56eb763f6ecd90157eb1489329ec62436a3b8afb74343433d56b7b1dbedf8f0c30fd1a54b17346fdedcd0f1309bcd888888c0edb7df8e962d5beaed87c5f38a9babbec8b2acc73c1c0e07e6cd9b876ddbb6f9dc3026cb32d6af5f8f2fbffc1283070f3674b318c88b
7f88aa095dbb76d5db52157c4cc1e35614a262ef37df7c63b8051370e3bd0a0d0d45bb76ed70c71d77dcd4de5954eff5d6625a6c4432525166cf9e3d68d7ae9da10aba152b5644b76eddd0a54b17a8aa8aacac2c3cf6d863f8e5975f4a64a39f38866fbef926264e9c18700293a8a42b923d5ab468912fc622de67f7e3e9e9
bd17496fd5aa5583c562c1bdf7de8be0e0e080ab4c95354dd370faf4694c9d3a15afbffebae1589ffbf9d3bc79738f2dc78dccc99a356b222c2c4c4f5ef136c68b172fe23ffff90ffefbdfff1a6ab3269e5f8c313636561f9f18a3fbb5d0d3f8ac562bead6ad8bab57af16eb5c561405bb77efc6d8b163f1d1471f794cf093
2409152a54405a5a1aa2a3a3111616867ffef39fd8ba752b56af5ead8fc76eb763ead4a9e8dab52b1a356a64f83a252a5d878787a34a952afa3950f0d8f86a19ef7e4db9d512c488880a2a9f775d8988cab1e4e4648c1933066fbffd36ae5dbb56e2555e7c25309435bbdd8edf7efb0d03070e2c54cb97b2202a6f0c1e3c18
f3e7cf47565656b1dee0774f223874e8101e7ffc71fcf0c30f856e4973e5ca153cf7dc73983c79325253534b2c53df5fe0e4dab56b183d7a34de7df75d24272797cabcf794286332994a2d5126373717cb962dc3c8912391969606e046eba77af5ea95f839a9691a929393f1eaabaf7aedcb5e90cbe5c22fbffc82fefdfb63
e7ce9d25d60a29272707cb962d434242028e1f3fce1d244444444444744b1315258cdc6c2c4ceb2520ef26e9b66ddbd0b97367dc75d75d1e3f3a75ea842d5bb6146acd9d9999e9b3a58720aa16784b02b874e9125e7bed35c36d3d0493c984a0a020bd7d477070b05ea1c1175555f56a1daaaa62dfbe7d78efbdf70c1de3ec
ec6cbcf5d65bd8b76f5fa18e99d96cd6db44b97f88ca17c5912423e4e4e460d2a4493874e850a1d6d022e9a8e0783db598d6344d9f0f269309b56bd7f69b4824cb32b66edd1ad08d6fb3d98ce0e060bd7dcb9933674a343e909b9b8b3973e660d6ac5945aa5c238e65c1e3e85ef5c457f5a3e4e464bd3d4ef5ead5fdb6142b
af445599b56bd7c2e57205fcfd81cec9b4b434fd1a151414843a75eaf88dad391c0e2c5ab4083ffef863c0ede800e46b895ef0bd2e383e31f7bdc5248b83c3e1c0d2a54b3177ee5cd8ed768f8f31994cb0d96cfa7b121d1d8d891327a26ad5aafabcd4340d172e5c28d4b55a10d73f4fc7c6d33920628ce57d532f11512078
2523222a84b4b4347cf0c107e8d3a70f366cd880ececec1259086a9a06a7d3e9b33c6d59501405a9a9a9983e7d3afaf5eb8783070fde12493282e8c5fbe28b2f62ecd8b1387dfa74a1165b9ea8aa8acccc4c2c59b2047dfaf4c1c68d1b8b9cac909c9c8cb7de7a0b83070fc68e1d3b0ab573cd1f4dd350a952259fbb9ad2d2
d2f0de7befa16fdfbed8b8716389cffbe0e0e09be6bdc96442952a55e0743a4b6ccec9b28c949414cc9c391323468cc0e5cb97f3edaca85ebd3a1c0e071c0e478905801c0e074e9c388111234660eedcb97a7955235c2e1776efde8d7efdfa61ce9c39484f4f2fb663e572b970e9d2254c9a3409c3860dc3b973e798244344
44444444b73c912863544e4e4ea1d6e58aa2203b3b1b5959591e3fb2b3b30bb57ed3340de9e9e95ec7e4de3ad857a20c90b7265eb76e1dde7befbd126fb1ab288a7eb35554ea183d7a74be75b82fe266f1b3cf3e8b93274f96ebf5a9a669387ffe3c5e78e10524262696f858dd134942424250bb766d9f37b66559c6dab56b
71fefc79c3735bcc554dd390929282ab57af9678b5d9cccc4cbcf1c61b9833678ecf6a2425c56432a15ebd7a7a928368bf5492edb94b526a6a2a5e7ae9a552d900999999a9277f88640b23094619191978f9e597b177efde12ab6022ae25a25278496e5acdcacac2a44993b07bf76eafd70193c984b4b434fd1ad9ac59338c
1d3b365fb57197cb859f7efa0953a64c29957341c4ce4d26131a366c784b2687111115c444192282a6695014c5d087a772a4e579bc054b3f16a7dcdc5c6cdab409bd7bf7c6f0e1c3b17dfb76646565c1e57215e939154581c3e1405656160e1f3e8c891327a26fdfbe01dd28f7459665381c8e80173f9aa6c1e57221333313
6bd6ac41dfbe7df17ffff77fb874e952c07db355550de83d2c29191919f8ecb3cfd0ad5b37cc993307494949854a7e10c7262b2b0b9b376fc6e0c183f18f7ffc03c78e1d2bb6055c4e4e0e56ac58819e3d7be2d5575fc5810307909d9d5da49faf280a9c4e27323333b171e3460c1b360c1919193ebf273737171b366c40ef
debdf1cf7ffe133b76ec28f6797fe8d0214c9c381109090937cdfb9c9c1cf4e9d307a3468dc2ca952b919c9c0cbbdd5ee4c5bc78fef4f4747cf7dd77fa71be76ed5abed7a5aa2a76efde8d071e7800efbefb2ef6ecd983cccc4c389dce2207b96459466e6e2e2e5ebc88f7df7f1f5dba74c137df7c53a8735ff4167ff1c517
f1e8a38fe2975f7ed1031281be4faaaac2e974222525055f7cf105ba75eb860f3ef800a9a9a901fd2c713d2e0fe73e11111111115141255d51a624699a868c8c0cafad97dc3760f94b9401f2d6ded3a74fc7c71f7f5c6237601545c9d7ba3a313111cf3df71cb66fdf1ed01a5f5114ecdbb70f4f3ffd348e1d3b56ae377289
aa2dc3860d2bd16419499250a95225fdff8d5680484f4fc7bc79f3bc56ba284854df555515c78f1f2fb5362ca9a9a978edb5d73065ca947c558bae967100002000494441544a4a4b6868a8be29ce62b1e0befbeed3ab22dd6a344dc3c993273164c8101c3c78b0c4de43499250b56a555cb972454f46315a954424993dfdf4
d3d8b76f5fa1aadf18919494a45761329ac423da4c05bac1f5dab56b183972249292923c7edd6432213636563f5ec1c1c1183468103a77ee9c2f292b27270753a74e2dd16bb5205a5f19ad524544742bb835d35c89a8d8881d276bd6acf1da1f59703a9d387dfa7499eeced0340d76bb1d6bd6acc99741ed89dd6ebfe92677
71139555162d5a84e5cb97a37dfbf6e8d1a307ba74e982ead5abebbd4e454f4ff75f9addfba3aaaa0a5555919d9d8dddbb77e3b7df7ec36fbffda627211457b5135996b174e952ecdab50bddba7543f3e6cd111212e2718ceee3926519172e5cc0860d1bf0f5d75f63fbf6edc8c9c92954f04155559c3e7d1aab57aff659bd
443caea4031c4ea713c78f1fc7e8d1a33175ea54f4ead50b3d7bf644e3c68d111414a41f9b82e538c5b151140529292958b56a15befbee3b6cd8b00159595925b2b0541405494949983e7d3ae6cd9b878e1d3ba257af5ee8d4a913626262f4f956709156709ea9aa8a9c9c1cecdbb70fdbb66dc3aa55abb067cf1ec3efa978
cd0b162cc0b265cbd0be7d7bf4ecd913f7df7fbfdea3d9bd9fb39179bf6bd72e7ddeefdcb9d3ebbc17d580e6cc9983050b16a06ad5aa78e08107f0e0830fa24d9b36b0d96cf97a0c7b3b16ee491b0e8703fbf6edc39a356bb066cd1a1c387000b9b9b95eaf752e970b070e1cc0d1a347f1fefbefa3499326e8debd3bba76ed
8a060d1ae8f3a6e0737b1a839843e9e9e9d8b4691356af5e8d75ebd6e1d2a54b70381c45ba7e891ef5ab57afc6e6cd9bd1ae5d3bf4ead50b7ffbdbdf50a54a15bd0c6ec19ec3e2b88873ffe4c993f8f1c71fb174e9521c3e7c1876bbbdd0ff0e88443b7fffdee4e6e6fadc0d494444444444549c244942585898e19b9d85ad
2853527c559431994ca851a346be75b2b8e1e94b666626264d9a84ecec6cbcf0c20b88898929966ac79aa6419224fd26b42ccb3871e204468e1c89f5ebd7172a06e672b9b075eb560c1c38101f7ef8215ab76e8d909090228fb524389d4eac5ebd1a4f3ef924a64c9982faf5ebfb8c8f15967b1ccbfdc6bfaf7895c3e1c0a7
9f7e8ace9d3be39e7bee319cfca1aa2a8e1d3b56aa31e3f4f474bcfdf6dbd8bb772fde7efb6ddc76db6d25721c0b12095e31313100f292901a366c88aa55abe2e4c99325fefc25415114ecddbb1703070ec4d4a953d1be7d7bbf719bc2309bcd888d8d059037271b356a64b86a8ba2283878f020060d1a842953a6a043870e
c53a464992101717a7c73303692d549884115555b17fff7ebcfbeebb983871a2c7fb1c66b3395fc29bcd66c3b871e3b063c70e5cb97245ff7c464606264e9c88d4d454bcf8e28b88898929916a38eed7ffe0e060d4ae5d1ba9a9a9e5ba921711913f4c9421fa93d3340da74e9dc2c081030d2d769d4e67a9ed0ef026252505
83060df23b5e4dd34ab4358a3b97cb85f4f474ac5dbb161b366c40505010aa57af8e468d1aa1468d1aa85ab52a62626210111101b3d90c455190959585cccc4c646666e2d4a953387af428ce9c3983dcdc5c288a0259968b3d4944d3345cbd7a15fffbdfff307dfa74444747a355ab56a85fbf3e62636351b16245d86c3628
8a828c8c0c242525e1ecd9b3d8b3678fde9ec8e57215695cb22c63d9b26558b16285dfc7aaaa6a78174b51689a869c9c1c1c397204efbdf71ea64d9b866ad5aae1f6db6f479d3a7550af5e3d54ac58519f730e8703274f9ec4e9d3a771f8f061ecdbb74fafee521ae787d3e944727232befffe7bfcf4d34f08090941c3860d
51b76e5dc4c7c7a372e5ca888c8c446868a8beab2c3d3d1d57af5ec599336770f2e4495cbc78b1c873cde572212d2d0d6bd6acc1afbffeaacffbc68d1ba3468d1aa852a58adf797fe4c8119c3d7b36e0b1b85c2eb85c2e9c3a750a9f7efa29e6ce9dab1f87dab56b232e2e0e369b0d111111fa9f405e303333331319191938
7ffe3c8e1e3d8a13274ee8d55664593674cd5055556fbfb47dfb76ecd9b307efbefb2e626262d0b87163c4c7c7a352a54ab0d96cfaf3070707ebef47666626d2d2d2f473ffecd9b3b0dbedfa1c2ace80aba228c8ccccc4faf5ebb179f3668c1b370e8d1a3542f3e6cd51bb766dd4ad5b570f088be0ea89132770f2e449ecdd
bb17a74e9dd2cffda25c4f354dc3d9b3670dfd7b23aedfe529f04c44444444447f5c469347801b1565cad37a4555552427277b4d9469debc79be1ba7fe2aca0899999978fffdf771e0c0014c9a340975ebd62d723282fb26929c9c1c6cdebc1963c68cc1d1a3478b5429429665ecd9b3077dfaf4c19831633068d020444747
974a4b1cb111c6e89c703a9d58bf7e3d7af7ee8d975f7e198f3cf208c2c3c38bb59589fbfbabaa2a6ebbed364337cf939393317af468cc9e3d1b2d5ab4f0f97e47464602c88b3b9476a20c9017e359be7c390e1e3c88975e7a09bd7af54244444489bee7eeef91d3e9446a6a2a3efdf4d352693b55926459c6810307909090
80175e78014f3df5146262628af5589a4c263d2144d334c4c7c70794d0a1280a0e1f3e8cc71e7b0c2fbef822860c1982a8a8a86219a368b52e36bc55a95205111111c8cacaf2f9be4a92840a152a142a89d0e17060eedcb9e8d6addb4d956204f76435712d7ffae9a7f1fefbefe78b9967666662ead4a9f8fdf7dff1faebaf
a365cb96f92a891537455150bb766dfcfefbef4c9421a25b1a13658808aaaa96bb92b1be94c712b782681962b7db91999989e3c78f075459a3a47fb114cfe7743a61b7db919595854b972e61d5aa553eab9088ea12c5a5b4124a02258e8dd3e9c4b163c770f2e449984c2698cde69b1616e29888e35316c471cccdcdc5f6ed
dbb173e7ce7cd56fbc553029eeb9e669de7baaa8521263116daf5c2e17727272b06ddb36ecd8b1235f959482f35afc595c73db3d69262b2b0b89898937bdfeb23ef781fcefd3b66ddbf2cd9782e3739fdbc539b6f27cfd2622222222a23f37a3ad970094caa69e40a8aa8a03070e785dbfb9df8c36d27ac95d4e4e0e7ef8e1
07ecd9b30763c68c414242026c361bac566ba16ec28af6be67cf9ec5b469d3b070e142a4a7a717cbda535114242626e2b5d75ec337df7c83975f7e19f7dc730fc2c2c2f4eab7c5c1bd0aabcbe5c2912347026e4d2ecb328e1d3b8611234660e9d2a518397224dab56b87e0e0e06269e323620039393958bb762d66cc9861a8
5a8faaaa3874e810faf6ed8b499326a17bf7ee080b0bf33826f139d17aa92ce263e2f88f1831020b172ec4d0a14371fffdf7233c3cbcd073d41b4dd3f4f73c3939198b162dc2dcb97371faf4e972774d280c555571f9f2654c983001cb972fc70b2fbc80071e7800a1a1a1c5722cc539e37038b06bd72e7cf0c1077a0bab40
7e46525212264c9880952b5762d4a851e8d4a9134243438be51c773a9dc8cecec6f7df7f9fef7cc9cecef6fa3d4579ceb4b4348c1a350acb972f479d3a75fcfeac9090103cfbecb358b66c190e1f3e9cef9a939b9b8bd5ab5763f7eedd183468109e79e619c4c7c7232828a8c84978a2fab498fb5f7cf105366edc58ae5bdd
111119c1441922a21222164fe59d5838537eb7cafb279456b2853f657ddccac371b815cea9f2709c888888888888ca138bc562a89572767676b96cbd949595858c8c0cbfe372381c012762b85c2e9c3d7b1663c78ec5ecd9b33178f06074efde1d717171b05aadf95a4117e4be11c3e974e2f0e1c358b26409162c5880a4a4
a4626b37ee2e373717dbb66dc3800103d0bc7973242424a0478f1ea85cb972be36c4dec6ec6d838ba8947be4c811ecdfbf1fdbb76fc7f6eddb919898e8b385b337e27d5bb16205d6af5f8f8e1d3ba24f9f3eb8fffefbf56a3862f396a7b1ba6f0612c93b223966fffefdd8b2650b962e5d8a23478e04343e455170f6ec59fc
e31fff40dbb66df1f8e38fa3478f1e7ac5e0822ddc45d24f59c51944ebe95f7ef9055bb76e45e3c68dd1b76f5ff4e8d103f1f1f1b05aadf9de77233fafe0062b59969194948475ebd661e5ca95d8b46913d2d3d3e1743af39d73a2426e565696cff34c6c7c2bcc7544cc1b7f4915b9b9b970b95c013f87387f860c1982162d
5aa07ffffe78f0c10711171717d0f9e37efc9c4e278e1e3d8a2d5bb6e0871f7ec0f6eddb919b9b5be818624e4e0e366edc889d3b77a275ebd648484840b76edd50a952a57ce78da7049182e7b5aaaa70b95c3877ee1cd6ac5983458b16e96dd9c5e3737373919191e1f33d75b95cb0dbed011d6f4dd370fcf871bcf9e69bf8
ef7fff6ba8655c686828860f1f8e3163c6dc94a0a5280aae5ebdaa27213efcf0c378e8a187d0b66d5b848484e43b7f3d9d0b05dbd58bb99f929282eddbb763fdfaf5f8eebbef909494e4b312b4880f676565f98d91faabda43445492982843444444444444444444447f5ab22ce39b6fbec19a356bfcde485755b55cb65949
4e4e46bb76edfc8e5fd334a4a5a505dce648b44adabb772f5e7ef965bcf9e69bb8f3ce3b71f7dd77a359b366a85dbb36aa55ab96af7d88dd6ec7d9b36771ead429ecdab50b1b366cc0a1438760b7db4b2441c69daaaac8cacac2b66ddbb067cf1ebcf9e69b68d6ac19dab66d8ba64d9b223e3e1e75ead4417474b47eb3df6e
b7c3e17020232303b9b9b9b87cf932ce9d3b8773e7cee1fcf9f33876ec184e9d3a0587c391af7d7451e7822ccbc8c8c8c0ca952bb16edd3a444646a25dbb767abbf4ead5aba366cd9a888d8dd5c7ea72b9f4f6d6a9a9a93871e2048e1c398283070f62cf9e3d484f4fd7ab9f1426814524636cd8b001bffdf61bde7cf34db4
6edd1a2d5bb644ad5ab550b9726554ac5811d1d1d1484d4dc5e5cb97cbfc9c501405d9d9d9d8bd7b37f6efdf8fb7df7e1b8d1a3542fbf6edd1ae5d3bd4af5f1ff1f1f17af5a882d57581bc7993969686ab57afe2c48913387cf8b0fe71eedc39389d4e9f95b29d4e27fef39fff60c68c197ec76bb7db0b5575373333d3d0b9
aeaa2a5252520ab5994b9c3fbffdf61b76efde8d091326a04d9b3668ddba351a356a84f8f878d4a85103717171fa38dc5bae676464e82dd78f1c39829d3b77222929499f93c5b1c14c3cdfe6cd9bb163c70ebcfefaeb68d7ae1deeb8e30e3468d000356ad440eddab5111919a9b71bcfcccc447a7a3a92929270e6cc19bdf5
f8efbfff8ec4c444bdd2b8fb39e370383076ec58bcf1c61b7ec7949d9d1d70951ca7d389458b1619faf7c7fd7b7c3d8fc3e1406262223efdf453cc9b370f356ad440bb76edd0a2450bfd5a5dab562d848686eac726373717d9d9d9c8ccccc4a54b9770fcf8711c3972047bf7eec5e1c387036a19af280ad6ac5983366dda18
9aa7696969865e3711517163a20c11111111111111111111fda9656767fb6caf51dea9aa8a8b172f96caf3d8ed76d8ed76fcf4d34f58b3660dcc6633cc6633c2c2c210141404e0461506bbddae57969065b9d4ab8eb88f77c3860dd8bc79f34d555104f70a2d9e2aca94747556510d262727072b56acc0cf3fffac8fb16005
88826315c7b8b8abdc2a8a82dcdc5c9c3d7b16172e5cc08a152b6e6a372d2aba9417ee2db2b76fdf8eddbb77e3934f3ed1dbab57a85001111111b0d96c30994c7a0285dd6e475a5a9a3e67dd2b09194d88d2340de9e9e9484f4f2fb1d7a7695aa99ceb40fef3e7975f7ec1860d1bf25524313227c59f259548e5e99ae4adea
4dc173dbc8f8344d434a4a0a5252524a64fc405ee24b49bca7a25dfdd1a34771f2e4497cf5d5577e8f0d809be67e61ae7b76bbbdd4e629115161315186888888888888888888888802523029233333b30c47e3dfadd02a59f055b5a42c88562ae5694c4688b63feec43cf59624459edd0ae7cfad30c6b2a0695ac055c48888
fe0c9828434444444444444444444444447f784c8a212222220030d6f08e88888888888888888888888888888888e816c7441922222222222222222222222222222222fa5360a20c11111111111111111111111111111111fd2930518688888888888888888888888888888888fe1498284344444444444444444444444444
4444447f0a96b21e001111159da6699065192e970b9aa6797d9ccbe582a2283e1f4344444444444444444444444444f447c5441922a23f005996b17af56a5cba74092693f762618aa260ebd6ad5014a514474744444444444444444444444444543e30518688e80fc0e57261d6ac59309bcd7e1f2bcb3264592e8551111111
1111111111111111111111952f4c942122fa8370b95c70b95c653d0c22222222222222222222222222a272cb7b7f0e22222222222222222222222222222222a23f1026ca10111111111111111111111111111111d19f0213658888888888ca84e6fb531ebe4c444444444444444444444445c3441922222222a2d2a6c14352
8c76f3d734009a04499298384344444444444444444444540c2c653d0022222222a23f1d09802441d26efcbfa401d0c4274c3712632409d0a4bcefd1ae7f2f1111111111111111111111150a2bca101111111195b2bc5c17b7b231a2a28c74bd7a0c00091224ed46c28ca431438688888888888888888888a8a89828434444
444454da447b2509d04bc448928762316e2567c41f6e6d9a4452cdf56f47be9f20e5ff3a111111111111111111150f09daf5d85b817ee96c9f4e744b60a20c111111115159904c90b41bc92dee292d922432690a24bfe4159db99e68732389e646428c74fdc30448a61b9f222222222222222222a2a2732b12adc7e734edc6
c638f7c7316986a8dc62a20c11111111511990dc17caee955ff25589117f775b596b6e9fcfb7d896f2fd71d3df898888888888888888a8d0f4ad6aee49307a7cce2d505730618688ca1d26ca10111111119505d176491349336ec92fa2d28c96f73f797562a4eb39345abe8e4ce253525eaf25cf4fc5841922222222222222
22a262963f9e972f6ee7214146922426ce1095134c9421222222222a0392a6e525bfe07a4f63352f6126eff3809e20a3697ac20cdc126a2448fa025cef872c1e871b8fd71fc785381111111111111111519148d7ab3d8b8acf92e8842e5d8ff489b6e9ee31bb027d9824f158778cdb11952a26ca101111111195b21bcb604d
4f95119f17d5656eeaa0a489c499eb956534edc6a25af3b09216bb58e09e64a37f8188888888888888888802a279f870fb9afb86b7eb4932794935052b3e8b249b9bd26588a89430518688888888a80c4890f276a0402b504946cafbbb265268a41b9561a04192ae57a2110b69b7f578ded7e05659c69da6ef742122222222
22222222a240e5cf78c9176acb17a3f3522de646fe0c444b76f163fdfe0c222a564c9421222222222a65ee8931f93e34dc488e8176fd319aa8de0a49bbf1553d49e67a551949ba518746dfa9a2dd48b2c9b7b616ff2399f4c7131111111111111111916f925b337568f9637b107f6adaf5aad140dee635dc4892c18dcf7b7d
063d76c7981d514961a20c11111111512933e91f7955654cd06092c4123b2f41c6a44990f21e91f7352def4f9324e9bb4ef2fe1309376e4931e2ffa59b9360c4e344920c11111111111111111119a501222627ba2c017a7b253d16e75ef0d93d4926efdb6f6abc2e49a6bcef15d5660a60ca0c51f1b294f50088fe1424c012
64414858082c563380eb1d11bcd0c4bf9c9a7b3ea906b7e4d3eb7fd7f2e59bdedc60c1f393f8786a2222222a6941164826d3f52499bc2417913093f777c0240192a6428209263d59c604b825c1dcd8ad72bd5a8ca6e969f079c930528105b97b2d57b705bb49549529f9974e4444444444444444742bbb51295aba91eca25d
aff0ac3756bfbe190e79edd5215d8fd57973f30d3e222a614c94212a0556ab150f26fc0df7f4f82b344d83a6019aa64255015553a1a82afe9fbdbb8b952fbdea3bff5b6b57a3241e62b747569062637042263148a38c35224680b8308809ca049b98208d40c0d88d10480846e0300c37331ac92441dc21ba2361718164f3bf
0109a1603abc636491c6d1dc58f28cdb9607244648343657ee3efb5973f1bcec67efdabb4e9dd73aff53df4fabbacea9da55b5cfb14f57ed67ffd65a631a7511a194925e1bc77cb9b8d06b29e9d5f142af8ea35e4da3be388e7a35e5efbf18177a3585be98ca7631ead548ba88a40b45b9964625a5721d9292492956ce9fd5
eb95598844550100b886c57baa499299fc4bff96dc73971893e4910f9ebdf490f1b0d675a66fdf9a3bcbe46630ad9d6bab5cb1d695a68d636a23976acbd6bc716bf7eabcc103000000000000c768456b5d657b2d726bf747d7e9b916bbd5494a658dae16bd4d856b918bdcca98f5a94b74ee3ccd393ae0f6119401eec9dff9
affeb6fef6dff95b0ae5a04c8aa494422942631a735026852ec651af5d8c2d2cf3c5f142af8e17fa62b97c49b9ed8be3a8218ddaa50b79bad02e923c25798c7a4d214fa33c42aed0a81c98b1fcea4a664a8a95a04ceefd16a6edb42a6fc600005c4d69a7aaee98d64bc7975a7de2f5a03a421eb9a34c0ecb58fe5ae5122177
979b699069b03a8ea954ad4409d3b4404c397c9f8edebb90cccabed60370dacb0000000000000073a17957e865c76895b539533766bdbb58ed3433a9c11a2b0199d6153a56e635b507b17607dc144119e03e99756f6ce544547fb7d64729d4375437972b9537579baebbcb60a614522a81971439cf3a9437d6d43d6f0dc9cc
3bca5837fed00ecf8802000087b52e2edda16c6bc5aa3c7b58214fe53a3c875f92ba808c6928b5296ee5fdbe768b2907e2b5334d0db8e4efe707ccedb690bab217000000e05eb9bb765fb2534a63bb6df6e974e5a36a6cdc192b376f6cc104030000703383cb765d1767752197aea34c3df757cff3a916cc951373b5238db9
d49d909b9fb48bf999bbd9fd6464805b41500638892827c9a4a86f76354453ef686faad349ad1a9aa989d4a19e30ab27cd4c1a531edf30c89562d4509ea5be7bba49a3f2c9b2f67e6b91dfb6cbc9bc7936c656bf04000047881a9299577cd4f9c47dfb554fe5fdbc749419c234986b88d255c634759b915a70c662baaf7e46
282fd33e37e459c85ddbd7035527cb800d000000705bdc5c6ffe077f5fffeab96fd7c5c528859422f288f20845e4eecb2992c608a5147964791d5d1e4917e5b68b48ba88d0458ce5fbd0582e17114a4a1a559e4fa124b5eb7e3d2cca6dd574be6a11b961443900008fcb22453b5f2eaba196f69dcc4cbbbfff060d83e5353a
591b9bde8f50af9d65ac9cd7cbb797c2f8ee19fb62f95cbb5e3b444f21192b699a36bac958b9036e0b4119e09e999922c5de6d4add8c429b2e53ab36c992a60e322679920649834c2972b5f96052b25191a414f54459b437cf1426f7bc4810a57b4c1ec154bbdd781ec1d4275879db0500e0ea6c9ab9d41fc24e1526d33f5e
c61d59440ec7481accdafbfc20cbc1199fbacb0caed64dcecde5de759b732fcf57dbb62e7bd82ddedd6bab39def20100007087cc4d5ff696bfa76ffb9fbe5511b9586b4ca19472d825c5a8d7c6a48b34ea22255d8c49af8ea32ed2855e1d93be7871a157d3a857c7515f4c794cf9ab69d417eb6d91b77f35925e2b978b1875
61d2859246252549a3f258f2b175630e85d5a1e575392ca6da33ad159789cfcf00003c8d0e0564baf7fe3eec62a98e54b2bc06a7a9a06da8e7edda18f5eedaa642b93e586325fcd27ad1d4afbb02b8a906de367614c04d109401ee819503edb9ae934c8af2e66725d052e61796f62f2e6f6397721719d7504630b95c8342a3
453989a62e00e352e49a98fcac49c9f368a69241cdd533a5bb4c7d7b56fb7a391c0a00001c6bf60e5a17d7cbd82545ee2aa3da09263c1f6077a395dca45d987652b994c08c95704c58379a315f9bbaee335da54aad7a319baea572a05f023287bacc00000000b7c5dcf5cc973ca39452aed94aa1142e1b47a564d210b2d165
63926c54b849c994fc42c9a574614a6e1a476974691ca55d924637edc651c94d11a322e535b0289f77739158f92c5cae2d42c972a799a86198bc592928532df12e856ff583f4697e770000e01675331cad2e92b5dbf23a9e97ed7c28dd62caf8f3bc46a7b63e97d7eaba2ed02ac19ada295a8be2b9b28e57033156bad95929
b89b0766287003ee024119e09ee4d361d39b6c0ba57669d4ba5d4d8e4a35a1aaf266ea724be50db6ab3037d310ae14493b73458ae900df5c1649c9f349b8dc6e76de4966aa94998764f2eef1ce0b00c075d8de57b55b5b4ce1953ec41231758889fc1ebf537dbfaf1d66f2d7b9a38ce7ee33b53a25d455a9940a1733b9e793
11d32b4a329f1f6473b00d0000803b96d7bcfaae2c6d756cb695fa31e53597d26556daa57650d434f2a05db71355d260ae88bc9e267329a2adc9d55d30d9b44e16b9a8acad93b5ced02e699a9cde7e040000f074e93e7e586de712914f9ad5f5b2285d5fa4e91c9da6b04c0dc4cc0232910be04d91fb4147e93ed3ba40ab15
b8d53373adb38c4dab856af70d5affb0b1d66106c055119401ee4dcc2fd1bfbde5375f37d328b5375e2fd7d65586bb95b10be1720bed06d73886762e857248a656ba9852ee4263834685069346a5b617a9cc39ec8fef65d67d46280b127b7d650100c0e5bc5c87ca38e1f26dedf4926fcc9d60eaa2beb5c5fc7c9d3bc9ecac
5cdc35c867dd655c2530e3de5abab6a06ded58573e78d4eff36711933929190000009c46fb245ad69e5ae5b46a00a606cccbed51c68cd690b84a98dc5c83855ca1a1acad0d96bbc9ecca67ee28a7acc6f2d9d794d7c83cbc149bcd57ee5aa7e5e83f2b9722b8d69ef1ce7f450000e02ef459dd9064ddd8f4980ad9f3a6cb50
aec92c72915b2b6a2b056fee650dcfdb6d3940337595297d64dac40833cf5d6a42329f8adf6a18b89ea62b1f9854433d794d0fc04d1094014e200752a37d9d93aa65fc4219b930b55e4b1a3468f494df78a32c0028b4f3a4944ccfb82bc6a4b04161256a63264b26570ec9b8422942830685e5904cb419cc2a1f0cda3b6e59
08a83bec1cfc03007065f5bdde175994baf4de1d6897c5f6da2da656a4d4b18a8349cf98b74b3ef02ed7837527086c119629d52ed69f6288fc0ae500dbcc2940010000c0fdea3bb2a41a8889322634a9349fe93ac874e3ca657277f998a6cfbeea3e1347948ecaaea4b10d3108530be0a452e99df2cbe7d1e49a4693b77367
6d6c53bda1eb340300001e1593a6b1e92ad7513e9358199fae1c6a19e4f27add4f80084d9320a4aed02dafefd5cf2d2ecf9d66c266eb765d3fe85968c7ca3a9fac8ff188fa37e00608ca00f7c866dd63ad4d3fb6365e496d51201fe84b839b52983c5cae90bb69906b18928671d0cef228a59de76e326153b71a7393470ed8
24e599cba1c8785e12ac0000200049444154f39c23bfbbe7088da620aaf53bcbbb2b000037628b998bb5eb5bd7223e1f0c77efff5116faa5e9a0da2d0764acab4cb1e964406ee1da076e3575aab15aa9a2528552dfdf238761010000805389f917b562ba9d08f23c52dc6aa5b5a64e8c5602e6f5f373fd0c5d3bcd249952f8
d41526acc4664ca3527e9e50592f531794a9dfc7347ea1dece5a1900008f43f7a63f7b776f8de3ba8e2e215919a59ec332391c9347a7ab747fee02325d11db501e33b8b74ed2ad137458ae532f5df3ac0663ca6721b3f209a515bbf55d65b4d8710057455006b82ff54dcbac9b6dacdc22adb497cdd72ed358c62db9dc5219
b794c331691c9414dad9a064a1649ec72ea5902c4936c807e9222cd7cd2457f25a49a3d64e3695d585a9ad6cd9c1366ac96a07370000700dadd0b48458a7b08cb5c0cad44e5e2dcce2f53a4c3bafdde4ac05649ef1413b773d33780bccec2cdfe6661a06d73094314cee2d80535fd14aabfa69ffca8ed5037016ff01000070
cbcc16dd8b67f74d95daaaa306ac8662a28560dc5cee4943328de544d4588acc76614ae64a96f48cb9e4a1489e0bca24d5b1a7a5814de92613a5ebf2149289ba1e563ec08724f56354fb8fca7c6c0600e0e9b5286acba6118d7db199594c6b77b5402dba208cf2badda06efdce4c3b795edbab5da36bf7bbfad946b56b5e09
0197aecf5357196ba715addbeda6eb7e03e0ea08ca00f769d64d46b214ddc93249ca27a872271857b231cf27b428e314f2017f72578ac85d64ba27cfa7bf922e641a9474915ce3504232365dcb7287993a6269169291ca224219ce40520600806bb1fe28b6be9fd603d8c8b7e51148dd417198dcf341703bd01eba59c73605
64763e5d72a58a6be7c3d4beb5b672ad2398ac7eeca8a1189b1aded4b9c6bced030000e0b6ad9cbf696b63117b1f417333192b1d1223af957523965ca6c1a5213c775d566ac1999d0d0a972249614972c9529297908c2b95714ba1281d975b419972663c7f953b2f46c4feda18e7a30000781c6a58a6bba11f755443b65636
6c639242b3d18f2d28636adda0074d6b763b1f72317c39cfe75e3a44d74ed1e6d3e4097379f91c62a5f06dde81cfbaea370037415006b80f35799a570072a425f249aaaeb05ceeae08c9532899b5908cbbcb23b4f3a11ca02b1ff4d777c70899ab749f913c4263987c08a5481a635a0008e5ce32b958bc3c97ba4a779536b2
b3782a6fba00005cddd4bbd56a156a9d7758e6314ee3176b85485dfc8f5295e21abc1e70d7808cb4f3a17596d9f9a0dd500ebebb8bb7914ca542c54b837aafb52fd65ebfee2e6ff9000000b86bfd68f2fcbd950fcc696a76182629e5cfb3354c9eca49a9c1e517a98d58ca27a04c11b9a02c8f2697e4268d2a05692153d210
b5f372e9baec9ed7cac2142ed52e3211d1d6c4f682326bdd650000c0d365a358acefd06265acb914f31190ad23f4d41966d7758bd9a92b70ebc7a77b0ef9b6b1eb252c93bb4297914ce5b5fb91ea793e9375e719e92403dc068232c07d0ba9bd9d9ac952cad5312a8199944f64b9a4217245cb60a1f03c5b79506e1b1b6394
4504b505044bf9e49747528ad0a8d0984ce1a631724719796e311b65c4525877f06fd3917eb49365bcd90200703d312ff2e8661fabbc8d4f1de5d402332ee51301a1a9256b6ddf5aaa4f766e65fcd2500eb873a0a655a6d483f5da39c67348d7873276c9bb7db16e1f4a7886b77f000000dcaa988ac8a20d39aa63c1eb6751
9729a9765c76778d63194f1ef984d16039e092cc3578282972f8c5a488313fab79eb24a3527ce64a721b34a6a4306954eeb01ca65c50568bc9dad9292f6b63d1c637f1211900804764ef6d3dbabbcafa58397766e1adc39d459eeee025fc92473049833405654a40e6995af456c6310d36e46e32ee1a4a30a616b959eb2a53
be57c87c98dd3eed67192d495806b8118232c009d499cb512bc9cb4241ab2ad798c71f9b6918728cc6c3b52b6196b050f8fc4ddba3ce694e1ac33546cae19852193326b5504cee2c93e58580d25e76f6c9603e8e0900005c474c499998df346bde5616fea598c625295ae8a5559d986b90a64e3296bbca3c53be1feadce3c1
662d60ad1c70d7f776ab152ab3036d000000e09ef46d652287662c2287622c875d2c460dca8563eea6214cc9cbb8d270ed221496143e94e72ccf1d560ad1f29ad91849a3f25a591a7c1a515ed6c4c2a6914bd1ad85d5404fbf020700001eab123e29df9979292ecf01de7c7aae768456eb24e33eadbf0d75146459c37bc6f3
48a6677c9805665af719b779679ad26146650453ee621365374af1bdf84402dc168232c03db3d2c2357f9dc330526eab9652c85d8ad11456aa6722bf61862b778071cfc116cfa9550b9379c86394cb75a151834263f25c6113b952262f00a81de2d7688c94472dcd264297100fefb60000dc0eebc33265fc9259fd5460a552
25a494ab50da017719bfe49eab67738b56d3e0f3ee3283fbd47dc6a7708dbb4de39c5a60a61e584f6397c8ca000000e0244a657694afcb8d32a5dc5fa65455879b3ca98d2948adfbf230c559927239774af9245292dc43a372a7e531acac95c5349a3cea3a5919b96491e729b40c4faabba4e504260000f078f40d5bccfa38
4ae4f370a11c98f1795799b67e570bd6a456d89647a84f2398da18261fa682b8d9e8a532daa9ae1396914baa1d664292fb6c87298003ae8fa00c708fccbab9c66dd660c8925462335269e9e66e39c0e226451eb7a46190c69006cf639694f21bb4a55c4d9392865dae9449960ffc93f27ce63c775979fc92a696b2a56f5cd9
af7ab64cd3e825de630100b8b1f676bae82aa3da55ae6c63bb72e03bab4af15c415b5acdd7f9c5bbc1dba8a59db976c3a05d39b81e06ef5ab776e397d4559ecc5232c1d825000000dc8bfc893707c723d500f9f499b87594b134759889f239d74d297250bc8d4bf2aefc2b492a639b5c2add644229a4514929542e53584696
6fab3b10f503babaeecbb53bb448cb0000f018f5cb617df8c46ab7b994832c8a9c55c941991a6a51296c7379e442b7a9ab4c0ecde4914c96c7a80f655befba4297cf435e264fa84ea05806624232b769df005c1b4119e08ecdc231f5364ded5b55c62f8542ee9683307501c04d1a4d7269904b29493e4c27d74c72b92c8d1a
2c34a65c2133842b7928a5940332520ec9e441d0a59d6c4c6198aec54d0bcc50290300c08db502942e20d36e2f6d53fb5c6a3b41504e08b8bc7597c91526535bd69d0fadea64370c1a2c8f6f1a06ebb6ef0eb6eb9847efc2bad6ef1c0000007047cac7ceba4e56272ff51398acc4524ae1b4cc4d9e72d7e570d750422ebbd2
f1251795491ad53ee3d6d0cd1892dba831f25a599294c2cb7528a598c62d455da52b27c2ac7660ae8199bc56c63a1900008f9b95514b535719b5f98c36d422b32edc5bbef7129ac9c56d2a9d6372d7e79d0d6d1cd3cebd8c4df76e5d6f28619952f4560234ae129a29e710db1ae2bcee0dc00d109401ee4bbf20a0b22050f2
9e21c952997fe82e8b248fd23ead8c5c6acf619292e536b22e8de5b992a2b4752b9d642294ca98a6542a61523efa2fed6463315ea9ef2613f3db0000c03545c99fdadecd557e7b9fb6980eb87368d6cbe7072fa3956af0a56fd13a9483e97ab03db8b7c74c5d653c57bc84245f54a784cdab6568db0a000080bbd6a565acbb
b61210578c8ac115498a94472d0d31e4dbbd8c22182fcab8a59a71c9a1f13192c690c6e4a5a34c5e1fcbeb64a618f2fa57eac63ecdd6cafa0e33fdba1c000078d4cc6c565cde42337d47e81a90296b6a7db065502974ab856da5d3ccae14bfed7c6821995d19a5eef2b6b657bbc8984d2396722826f6c62e01b8198232c003
50c71f84248b544e8c494ae56c964992e7837e2f739acd3426935bc8cd95226970574aa151636e3d5b17013455c748b59b4c390b575acdaeec51de060000dc40281fd746fdb66907deb522a48c44342b152a2e79d4904bee22e72a95252ae395645307192f6d5bcb08c77c705d3ac894dbf2ebd630ce4a9b56defa01000070
cb5ab7e5451159bdafb64eae9d667258a68e278f5c43e62e85297ccc23caa5dc797918ca78f212104fe564538c1ac3355a5248b9ab4c84c2f218a6a98b4c2e648b48adbbf2acb0cc28d50600e0ec74e7c6ac169bc51490b1b28d97504b0ec9d4eed0657d4e53715b1dc5e4667ac6776d0d2f8f5ff2bcc667b53b74794e571b
c734eb464d4806b8350465807bb05c10a86fa839b2920ffa43928794dce52929d5b08c0d65e45292e452e46b2b8b072942eea194f2d7a38586d20e36452a2f57c330793ffa56b151dbc9b652197527f1682b0b00c075596bd3ae7900a5b64caddbc51458e9dba75a1997e4e6927230d64b554a0bc3587720eda6c1943bc758
d7b2556586b2f20176eb7063fdebd14d06000000f7277f1ecdeb624a5d5719e5cfb3a6907bca5d95dd1529244f1a943bccecbc7cc42ecb652e9387cb34ca95bbc678cadba708ed4c4a69ea2a539a2eb7b08c344c6b6435e34e27190000ce532cd7caca6797988756bc8c7eac8116575d872ba3d36d98757f1ecc4a57991292
69dbe575bc7977682faf21e5f0f0b48e576e292399eee537023c4a0465801368c199fe364961264b49eac2327961c0cb817f48c9649e64298f5a1a2d6429c907538a248fda312694c2dbeb4409e328a61ccc2cbc33db93727f1f9e0100005754872cce6f6b6cbac9eaf0a56eec924a67995a4962318d51724d5d635c5d20a6
1c5c5b9b679c0facad1cb0e7ee35310bc9f46de5010000803bd51591b529e0668a14a5d38c64393e53aaa907451a4bf0db15260d4348a3aba4c4e5218d26594a650c42528a1c26cfc1983cb23c7909c8a45c5cd6c62d4965bd6c2a323bf4311e00003c62b362b7a9fb5d0dceb4f1e951023216add86d709f02335d47e83a4a
bd856586a1748f29211a1bbaeed0751daf9c1b2c5df3f29a5e57f8b6f82c05e0ea08ca00f7ad0ba6f4d53365d8518e87766119c995944a3579920d261b95bbc8288764c207252545a9920985229556b2fdc0a5d242b6df87d8cbc2d4b14bac000000705b5a4bf95e681e56a9d521dd63ac7c4ac82de8d54629b5ea12e51300
e65e4e0ae403f13caa291f5ce7ea96b28df6bbd970300d000080fb368d21edba2d4709754b2d309e2ce4e1a5782c29cf2795cc92c631af93a518f288263779ca279c528452a4dc45c64b41992429944c92866efc52b4b14b255dbebf2ed63eb7b35e0600c0a3d3af8d2d3f029895eed0ea8adda6704a1ea1eeb9d04d367583
aeeb77a590ad8d502fc56e757cfa508bdd5ae768b542b9d630a65b2f5cdb4700d74350063891da55661696290b04f23c5a29756199f090852ba590b997514d49c9ca98a5365629076292498a69e8527de7aca315db717dfbc2e6d756c332bce30200703d369d0090d4f5742b774fefbdd66dd2aa43fa904ca94c31573b50f6
7af85d0fa05b37192b2716ba39c6a62924530fb4fb900c5919000000dc973e43de3e1ad71b73a1985ba923ab6b65b2327b204929576bdb601ac3649164164a29e4664ae5eb54d6d322a46469168c8950fbbeeec834897cfee1786fe90c00003c3ecbe5ba767b0df1966d6c0acab46b9bba45e7537c657cfab0df05dacd3594
75bbc1cbb8a5769fa6114cbeff3aedb519bb04dc0a8232c03d998d5baac9d37a5ba928efc332a1dc3ab686655294766a5e662847de5e35cd1a393c139ea331ae5c89535f2fca8be4308d16ede3ba23fec51b2b9d650000b8befd6e2dfdfbeafcbe1a9799cd3db6be42a5845bbc1e10e7b08cca18a61c94c9cfd40233b50b8d
1921190000003c38abdd964b7b17772b4d974bf76599e4e5f36c2a9f97c395644a29f75a4e65cc525852924a2799fcfc350a935248610aaba56551c62dd96ccf9642ac910100f058ed8f4f97e6eb78d1c230525e5b531dbbd4076564dd3874eb8232530768f7dc01af769131aba39ad41e236dafe901b81d0465807bb41596
51a962d90ccb986b18222f0e9814510eeec365f5b1aa07eca52ac6ead7fd817ff9d74af8657f04537f1f0b0100005cd5f648a36efc5119b9a4feaa7c36a89d60a6914cd11d142bcf2cd63c386356e716976dca6ce4cd900c000000700ae584525d736a6b62fd36cbb04c84945ca1240d2ea5286b62514e4ae5b5b364a90463
4a50a6744c0e932225854df7b5ee36b5c86ca5884cfdb60000e0718a8db5bc7262ad16b5f5e7f6dada5d5fcc36eb3453462975dd9fbd768a2ec11877af9325655e4738d57d998764aabe9b0c6b7cc0f5119401eed9a1b0cc6c367339e11521792ad76e8a486d5395936351dea8536ab53192f707fdde9230edb597d9173ac9
00007067360f5a5b50757ec0db3fce6a5bd7d90178f97ad6f2b50463ea68c7ae452b9d64000000f010d5cfa6a1d80fcb589ebfd4c23252fb9745eea69c22c9c2e42ea5487297c27381594af59943914261a1702f056b5dd1982dd6c14cab4566f5fc180000785cda58a5ed7bf357dd88f53e2453c721d5a08cca18a5dc19ba
7685eec6a7d7b08c997ca8219aa9cb740dc9b8cf4332d37d006e034119e0040e8d61aaeddaa47c4c6e759b5c67932b622ccf6c9e662b97a71abc749a298b0c113930539e68ea1ad36637753bb5b7939258000000e0ba8e3a6cad1bd5236b497dc799da31a66edc0a46cc5a9bfabecac4fb76f4b2f67e7e594886836c000000
dca5e5e7cdbe9b4badd0ceab5e529420b8ea38a4d259a634865159eeca5b87956ecb49ae4191925259411b4cb99b4c48b12b81996e21ad969bb5b5afad804cbfdfac940100f0e8ac8f5dea37e83a43d7698db508be0fb8d4b14c520ec8683926bdf69d295d666cea347368847afbbc549fbced16eb79c04d1094014ee4b2b0
4cd8b292268f51aa6f8a35ae6a652141e653354c9ecfa46827c36c7e189fd2f4c60e00001e8e2e30338565da9d65bc92a6dbad7490e96e6c552c5b2119000000e0019a4e0085f6c730497293a732562992c24d1649294951ba29a7c1e551278f87bc1499b5d14a6584f95e1ec6fa97220c030000329b7f4898df67dd18a41a
72a9e3d44b28a68d6532939bcb727be8291c53b72deb7b7d4866b90f7489066e174119e08436c730495d18a62c0e98c9ea817c3df115515ad35aaeb6c96537e5e18baa984ed4caf4431d650000c049d8d442a6bce54757a5923f30b42e3221c97d51c962dd630f779201009c1733fba0a41723e2c553ef0b0048da2b1e6b37
cf8ac7548ac542619e4728852b221786d9504727853ca494672e29cc66a197fa55444869a59bcc018467000078fc2eed2c2395ee2ef501b5a34cdf4b26bade32f93ef752d6563ac89879570cd77588d6b4b6d78f5baacf03e0761194014e6c2d2c536f97eaf7e5e0dda6c0cc746b7732ac8d566a1de0bad14dbd212f08f0be
0a00c0c3523ac6cd6f9a075fea2ca6690eb27507e69a3e4bc4e16a130eb001e02cbd24e9b7ccec65494f243d8988974ebc4f00cedd4af1d8720cd3f431b784c5cd6496bb2fb7e9e2651ab9b9b7e7ed278fb7b04b44ad332bdbb0460600008e503faf74a7f4daf4872e2a33dd377d8e51eb1633056466c1983a8abd8da05409
d5d8fc730a9f59805b4350067800f6c232d23c30d38a56a2ac074c6fb8560fe8259561876584f314a8995e687adee0cd1400800769af7aa51d10c7544d523f1f2cbbc72c1e4b180600d08b882766f682a4e7247d40d207bad0cc0b11f1f2497710c0d9587690e9d7acf2b756ba28cfd7c14a4bc57cef2c3093b788325a4925
fc12e5b3747e2d9f6eef5e3b8c6e310000e008ad60ad7c5b93325de55a8bcce413755d38c66acbbc454066fe3c53d066654dafbb89353fe0e608ca000fc4ea0281b43f8e2924594bd1b4504cbb5fd3c9b2d5f6b1ed7979130500e021b2ee3340fe7e2538a3d658267fddbdd9af1e28f3b60f0098fc1b49ef92f4b6f2fddb34
85665ed2d46986d00c803bb51596a9b7b7cfb8563b2b4f279322ca08831298312b6398f2134c23c9db68732f9d63ac9db86a1d9c67679deef6670600004fa19553778bb48c24eb46a397efbb6dea2797da86c6fa875bf7d8ad353e4232c0ad2328033c207b0b04d26a60a656d5e4c774ad634b70a67fbed5e792f6bbcd0000
8007607b917e7e6c7ca0734cff16cf7133006021225e31b31f90f45b2b77bfa35c3e5842332f2887665eb9cf7d04703e56d7c2347dbe0d2d0233ad682c7f3b0fc9288f55ea4236d1e61d48aab398ea7d07d6c65835030000b6f74577df6ca16eb14eb7769eaeef16d38d496f5f76c5ed07cfed1192016e0d4119e081597b93
db9b95bc4c95f6c199d5275d3c9f82136700003c4865517f75657e0acc1e74d9c13b00e0ec45c48b66f6a27267992def90f4bca4e7cdec89a417456806c01d383892bc0bb5b4714c9af22e563ac498faf5336fcfb52c149b65ca179f91a37b7d3e3d030080e692536a7b6b753e8d7d309b8adebb074c57ddf9be430199d5fb
01dc084119e02970d99b63bee9f26a98e5b60000e081da78abe6801800708b7e40d2a78fdcf6bde5f2bc99bd20e9c5887872677b06e0ec1c1a495eefefbfcfdd65da83a7d1e41153379a366269f64adb9fb5f3836ef47300008047c80facc7ad7ddc50f95cd27d56e9aea66db6bac8500407dc0b8232c023c39b2500000000
e03211f1b299fd8ca40f5cf1a1cf497acecc5e91f444846600dc92cd91e42bd9955630a6799576ee2d63eda1fbafb1d2b979b10159190000501d3ce5d677b83bf0c0fd5af80323d539c507dc1b8232000000000000e7e96794832fcf5ee3b1cf6a0acdbcac1c9a7912112fdde2fe0138337be390fa504becdfbfecb03c6dba
1186314971f80c1435680000e02807473696f1eadd88f583d323faac0c1f46807b4150060000000000e00c45c42b6594d255bbca2cbdad3cc70708cd00b84df3314a8b3b637fbbf6bdac759bd97fcefa705ac7000080eb597685b9eafd65a3fd9b08c900f786a00c0000000000c0f9bacef8a543fad0cc4b9a42332fdfe26b
003833eb230d2e790cb30b000000006cf053ef000000000000004e23225e91f4c21d3dfd3b247d50d2a7cdec3f9bd907ccec3a639e0000000000006e0d4119000000000080f3f633f7f01a3534f35766f62b66f61ca1190000000000700a0465000000000000ce58198bf4e23dbee47b253daf2934f3de7b7c6d0000000000
70e608ca000000000000e0c9895ef7bd927ec5ccfecacc9e2734030000000000ee1a41190000000000003c91f4ca095fff5949cf691e9a79c709f70700000000003c520465000000000000ce5c44bca2d3759559aaa199ff6c669f36b30f129a010000000000b785a00c00000000000024e9c553efc08ab749fa80a6d0cc07
ccec6da7de290000000000f0f4da9d7a070000000000006e8b99c5a9f70177e66d923e28e98366f69272079c2711f1f269770b00000000003c4de82803000000000080a7cd3b9443339f36b35f31b3e7ccecd953ef14000000000078f808ca000000000000e069f65e49cf4bfaab1a9a39f50e010000000080878ba00c0000
000000001e8bf74a7adeccfecacc9e37b3f79e7a870000000000c0c34250060000000000008fcdb3929e93f42b3534f39ffed38ba7de270000000000f00010940100000000008f8299bde3d4fb8007e95949cf7dcbb77e8bfee13ffa07fa5f7fea27f5a77ffaa7a7de270000000000702204650000000000c063f1eca97700
0fdb673ef319fddb7ff76ff5b5effceff5dffc937fa49ffadf7e4a9ff9cc674ebd5b0000000000e01e1194010000000000c0d9f9cc673ea37fffefff9dfec9dbffb1beeeebbe4e3ffbb33fabcf7ef6b3a7de2d000000000070c708ca000000000000e0ac7de2139fd04ffff44febabbffaabf52ffec5ffa80f7de843faebbf
feeb53ef160000000000b803046500000000000080e2777ee777f4233ff2237aeb5bdfaaeffddeefd52ffdd22fe9f39ffffca9770b0000000000dc128232000000000000c08a5ffbb55fd38ffdd88fe9ed6f7fbbfee5b7ff4bfdfaaffffaa977090000000000dcd0eed43b000000000000003c64afbefaaa3efef18febe31f
ffb8feeeebffaefef9fff0cff5cfdef9b57ad737bfebd4bb060000000000ae88a00c00000000000070a42f7cfe0bfaf0873fac0f7ff8c37af39bdfac6ffe966fd6977dd9df3bf56e01000000008023119401000000000000aee1cffeeccff4a15ffcd0a9770300000000005c819f7a0700000000000000000000000080fb40
5006000000000000b88637bff9cdfabeefff3efd1fffe7ff7eea5d0100000000004762f4120000000000007005dff55ddfa57ff6ceafd5bbbef95d1ac7511ffbd8c74ebd4b0000000000e0480465000000000000804bbce94d6fd2fbdfff7efdebeffad77addeb5ea78b8bd774315e9c7ab70000000000c015119401000000
00000056bcfef5afd7b77ffbb7ebbbbffbbbf5355ffd35ba182ff2e582800c00000000004f2b823200000000000040e79bbee99bf4ee77bf5bdff33ddfa39492524a1a2fc653ef160000000000b805046500000000000070f6bee22bbe42ef79cf7bf4fddfff7dfaf22f7fab224229a553ef160000000000b8650465000000
00000070b6def39eefd0777cc77bf4ee77bf5b11a188a494e2d4bb050000000000ee0841190000000000009c95affccaafd4fbfee7f7eb7def7b9f5efffad72b94144138060000000080734050060000000000008fde1bdef006bdf75fbd57ef7fdf73faa7fff4bf5344522808c80000000000706608ca000000000000e031
7b49d20b9ffebf3ffdfc1bdef06c19af74ea5d020000000000a74250060000000000008fcd2b925e90f44244bc2c49e9229e3fed2e0100000000808780a00c0000000000001e8b27929e44c49353ef080000000000789808ca000000000000e069f6b272f79827b57b0c0000000000c0168232000000000000781ad570cc8b
a7de110000000000f0f4202803000000000070739f95f49153efc42df86f257deba977e280973405645e39f5ce000000000080a70f41190000000000809bfb7f22e2df9c7a276ecacc9e3ff53eac78455338e6a553ef0c000000000078ba119401000000000040f5ae53ef40e789a41723e28553ef080000000000783c08ca
0000000000004066f636496f3bf16ebcac1c907921225e3ef1be0000000000804788a00c00000000000024e9b913bef60bcadd639e9c701f0000000000c019202803000000000000497aef3dbfde4b9abac7bc72cfaf0d0000000000ce144119000000000080336766efd0fd8c5d7a455338e6a57b783d0000000000801982
32000000000000b8eb6e322f4a7a12112fdcf1eb0000000000001c4450060000000000e08c99d9b3929ebb83a77e5953f79897efe0f9010000000000ae8ca00c0000000000c0797b4ed2b3b7f87c4f94bbc7003636a200002000494441543cb9c5e7040000000000b8150465000000000000cedb6d74937959d20bcadd635e
b985e7030000000000b8130465000000000000ce94993d27e96dd77cf82b9a462bbd747b7b050000000000707708ca0000000000009caf0f5ce3312f29778f7942f7180000000000f0b421280300000000007086aed84de6154da3955ebebbbd020000000000b85b0465000000000000ce8c993dabe3bac93c51ee1cf3e48e
77090000000000e05e1094010000000000383f1fd076379997358d56a27b0c0000000000785408ca0000000000009c11337b87d6bbc9d470cc8bf7bc4b000000000000f786a00c0000000000c07979befbfa254d0199574eb43f000000000000f786a00c0000000000c09930b33a72e96794c3312f9d7897000000000000ee
154119000000000080f3f15244bcf1d43b010000000000702a7eea1d000000000000c0fd8888174fbd0f000000000000a74450060000000000000000000000006781a00c00000000004f352b17000000000000009721280300000000c0ad335d3fc072cc63d69e9fc00c000000000000701982320000000000dc96e8aeeb45
264509b0847597c5e3a20fba5c25f04240060000000000003816411900000000006e451f72b96647991698b9ea63ba0b000000000000804d04650000000000b877cb30cd4d2e000000000000c063777b6b6104650000000000b8319b4627c522c4d2c62f49845b000000000000f078dca498eb98c7ac3dffcdd7d708ca0000
000000702bb616066c71dd6d1bcb60cd119730462c010000000000e074a2bb6ee3c06d1a291eddba572c1e17fdfad955022f74940100000000e08c6d856c00000000000080bbd4875caeb92ed50233577d4c77b90182320000000000dcbbad8e31c73e4e22180300000000008087ed8a9d940f5e6e0f411900000000006ec5
d6d8a54307f6d73dd8a7930c0000000000004e65d9e958ddf825e9a1af591194010000000000000000000000c091b60ac6a4d522b1d511e2975cc26e3c62690b41190000000000000000000000003c305b219b9b2128030000000000000000000000805b76d958f2cb1e27ddc50827823200000000000000000000000038d2
dad8a5438198eb7683b9dd4e321541190000000000000000000000009c058232000000000000000000000000380b0465000000000000000000000000701608ca000000000000000000000000e02c1094010000000000000000000000c059202803000000000000000000000080b34050060000000000000000000000006781
a00c000000000000000000000000ce0241190000000000000000000000009c058232000000000000000000000000380b0465000000000000000000000000701608ca000000000000000000000000e02c1094010000000000000000000000c059d89d7a070000000000c0fd33b353ef0200000000000070ef8e0acad4c5b3e5
350000000000382dd371c7e86636bb00000000000000e7e84aa39722a25d0000000000c0e9858e3b46e7581e0000000000009076fb556426c57ca12d8763ee77c70000000000c0d5b58e312b4d63d6c2327497010000000000c039396af412000000000038c4f6461b1dbee4c75ca60fb6f45d5ed72ed2d5422f7498010000
000000c063b7b65eb65b5b435bae95d58e32ab8b7147b6780600000000e0d1b2e9a07b3bac62b3afcdbaee2f0b7df8e5b280cc7244f2a1b0ccb1db01e76af977ccdf0900000000000f831d51742669af606d8d6fbcc2d12fa28d000db39a0000000000e7e4ae3aca6c757e094d452dd771e8b98173b71642030000000000a7
736c1397638ee577755d6e0ac6982ca4b09085edbdd8a18e32a67e163a15370000000080f371a8cb4b35eb2963c7876b8eb6b12d27fc81b5ee30960bc0b41c7176bffb050000000000ae6ecaa6ecdfb75c075bae09ac7794010000000000b7a38e652a9729fc727900a61fffb27671bf469806000000000000b8b6bbe9aadc
7f7dd9f8f1abac85ad158feda67b2551350300000000c0d56d8d2556eee06aca0b03d321bc5da9a34c0bc698c9dce5cb8b396119e0126b7f22cb75b0da51667531eec816cf00000000009c83edb5a8594fe5d91ad852bf8676594066d931f9d05ad865dbedea31fea1437db33c82e9eaf3d60100000000c09ec558a5b5ebeb
5dba97d0fef3afbd1670d64c65f4f811b60234549d0100000000cec9958abfca032e71e8f83a3415b55cc7e18e3247ed1e000000000038e4a84e31b3edaf1b8ae9c2361cd00397b37a65ed060b292c4a5866be7076a8a38c69f1b7cb1f2100000000e05cac14922ccdd7be8e5fff3adac6b6c716b4f8f1af545fefc8853a16
080000000000e762d64276ff78d82e99dd2cad777aa1b32b0000000000009e0a657dac24630eae95ed3df4922ecbeed708d31cb09baa69a498d7d4a84e52afdf6fcd62a65d3300000000e09ced759758e9f8628b458263462fedddb7e846b3b627cb4583b58586fe76e0ec84a4c86d9b0100000000c0d5ad7594b1facfacf9
b15da9a34c0bc698c9dce5cb8bf9adac69ed2edf64b295e259bb8d053700000000c0f9b0fd0377f7a34623ddc6e825baca004788d9d52ab35c28769dbf3f0000000000b07064b1d84dd6c06a27e7fe79d75eab77e5d14beb3fdb5ab51c0b040000000080f360a683152ead5beb1127d70f759c01703bf88b0200000000e066
8eea1433dbfee64562b775407fa58e3200000000006085998661d8ec2a73594799fe1ac0c370b5853afe7e0100000000e723af63ad1480e992e367adaf85dd7747e55ddbf7d677d6240b99a42833a4ea0f54b7a5dd33000000000013d3ed8d50bad97e1cf7fc847270966cba8ab6e2553b3ecdd7c0626340137f3b00000000
80b377a0934cbd4f47866436ef5b74a359db89e55adaf2390fad83ad74943934a9b97bd9fe056b88a6ff8169620b00000000381766abdd64d6c630e5cdb70fd8af149839ee101ec015ad2dae6ddd46c11800000000e09c98f6d7c18e198d745b4566b7711cee0a5d7b616db648b052b50600000000c039585b20e81709ea65
ebf6a38fa583640c704a9b7fbb148c0100000000ce8569b340ac756b3d62cdeb945d90a78e322ddc336f3cabaeed6c3f7aa95e6fb7d4618100000000007026960b041b97dba898c9f52e312b7ab9cee827000000000000e0aacc4cc330acae7b5dd651a6bf3ea595d14b97333305556c0000000000483a1c5439189cf1ab87
588e69650b6045fd9b89ee060b99a490752563f36231c26700000000004cae53b075dbc7d16b138faed2a1e6e8a04cbf48509ff0e0e5463f1600000000004f93cb0331f3db16211a3bbee30c80db725c1158ff77d7d6c74a37653a2b0300000000cecf8175b06e0c93a483c1952bad75dd721f970341199359a8a6632eeb20
c3720000000000e05cadb59c1d86e1d2cb31a39a8e09d05ce524fd436a730bdcab1b2caa4da3cf62a36aedf67613000000008087cc5646906f7558be7631d81d4f389a8232d65fe5a6b311f93adf72b8a38c2ef9c1fef03ffeb1fecbc7feafbbfc590000000000b8377ff1fffe7fed6b331d1d9499b6391c94595f4058efe0
5a5bdeaeddd9076308c900d2b4c465ed86fefbe5e8a57a7db8b3327f5300000000807371b8b3f2b15d932fbb84a450cc0a5fae33f669cdd1a39742a188d8ec2c63ddf55a35db7ffcc86f1dfb5200000000003c55cc5cbbdd6eb620b01b76daed76c77596196eb6b870a89d4544108c01aec9cc2eedb20c00000000c059b1f5
b0ca6563c9afda55665af7bafd1f610acae4388e226a28a6de38ed445d1860810000000000808999ad0665f63ac90c873bcdac8d633a1c90397effeab17cfd9af00cb0eeb2aecad76a190d00000000c02361073aca982fef5b8468ecf88e337769b75c54b3c83fda5a14a6ee4c1f94a90b73cb9d7eeb5bdfa2e77ee0fd4a11
8a144a9114292945524a69ba3d8d1a53524aa3d298ef1f53de766cdb8fe539f26322f2edb5c3cddea5b4df8912fec9a6f04fde6e715bdb6c2304d4fd0fc1d207000000003cdda2fbb7cce60358baef67035aeaed65cc4aab9631d31bffeb37ce8232832f82303e5ddf695bda7ecf178b0acb85064eec0395c92c54ffde2f2b
103be62f8711e40000000080c7e4d008f2a3ba291f31aae9a65d95970ead811d3d7ae9aadef2962fd78fffc48f6b1cc7e992465d8c17ba182f348ee5ebd72ef4da6bafe9b58bd7f4da6bafe9e2e2a25d5f5ce46d5f1b5f6bcf91c6549eeb4263cacf99520edf4484d2988334119292665d70f2a5047156023675bb35cbc5c5
b5af01000000000f5f947f6a5066161e91cf0227d3ed5338a656becc1603568230fded53454dbd4c15356b2d6a0f2d0ee89280cc12c7adc082f557a65c4895aff32d873bcaacfd0d2e17ea18410e0000000078accceca8a0ccb47e76f5c2316dac7699a6662e6bfb55af2f2b14dbcd5ac7449dc0346bc57263b3453fcbed74
c262beb868d365f041e1912f25c46261b2308d1afbdf40599c4832cbe117b7dc754621c9d78232a1e16050266dfc0c3efb79a66f6eedd70400000000b817f5a8371fffe5e3d57ccce7078232f5fbb5a04c1f8c691d657c6d9cd270e9e2c0ea62c1c61ce7e502c2ea4f5bc62cf585218c5e02b685e66b454bd65d4f61350000
000000ce83d97c04f96ed869b7db1dd7596638621dec9a1d65aeb2deb5dd51c6b6323afb499cf9c57358c5621e5449a130292c3498b7fb6208454a65a4d2ca024459eb6b419bd1e5ea423536285952f2f21c1e4a29d5c4cf6a506639b669b9dda19f79f9b5a6822300000000c0d3c0faae32f32a1397974dbaa08c5d312863
5d5066984631b9bbbc2c0aec768376bb9d76c3ee4a6d6867f39d8f0acfec5b1eff1298c1d9696b463514536fccfa60d9656398aab77cf95bf4bef7bf2f8f0b4f75ec781d295ec7928f1ac77a7fee903c1b3f9e46a5d9f8f2da35395a27e57eec781e39de8d18affbac727bdbfffd11e49a36df33ff4f02ff7d0000000080a7
57ec1dd64deb406db5abfb77b9bdac85b5ce2e566e2b0d50def8c637ee0565f6d6b786c39d66d6d6c10e07648efb89fb63fafaf5eae8a5630ff8d782227b01192fab0ce5c0db723246a651511ab24472850d0a978618f2b1f92eca7626d73c0853bbcd8c366ab451c993469f462e8d692c8b0d53d82675c19b65c5dc6a2799
505b20dd0abdac769129e3ab8ffd1d02000000004eaf1edf85451bb1322d0dd8deb6cb0e335be1951a9431730de65da54c1dc1346f47bb1b761a4a58e6e8aa9bb2d03075a529fbe7cac119bf3c24b33c86252883b3b15c1c8c7ce3daaa4efbef44cc03347d31d774c94199ffe5c77f4c694c79d47819275ec78f8fe3d8c68e
d7cbc5c5855ebbe8aec77cbd3a7e7c5c1b3f9eca7a98660568b362b15b1c3f0e0000000078da9466261bc5625b5d9597d382b6c68cb7aecafdfad5ca78f2eb748eb9f4a2f9b1ebf258f6b2f14bbbd48d1a5adbe0d06dcb9d7173c9dbaf59915c7958922906491172cb63957278694a27591f8ea90b8fb50acf861c8ef1bc50
30dab43030a671efe03f8d69b610d0fe6fd02f18681e94b9ccdaefe1aad5450000000080d333b72920b37612b83bc45b3bb06ee383ebc1fdb265ac729065f041c3ae0662ca2282958a1a770de5f65a75b3db4d8199e5f5bce2a616951cee2a33fb91bae3d6941227bf815b65ed9ffa9dbbcb235f6a77e3e502633f8a7cb041
61a1e45397e45c8026b5ff2875219d88c86b699172715a5aebaa5c3ad6dc525086ff6e00000000c0d365eaa8bc1f94b14341197541999522b165106619a0313779bb74855e7db6a40bcc6c056774494066e92ac7addba397ae60afb34c1997143eb572f5e40a2f5d6734c862fa21c61295997e2893d94509cfd4eb516ea386
1298696d6c5b2bda2e2853ee3f1494a9d7d7e9a8d33fdf559e0300000000707acb836f49abc78ed2fac8e1fe207eb522a61482b4a04b1786e91fd70760b63aca1c1cbd540a4d6c2530d3ef3b8022e65f979ec83aaa82ea48cb8232375758cc1717ad0bc8782e280b9fd6982c4c16b9f42c3fa9f23c2433992599e5352fb73c
d249a1f9f8f36ebd6a381894491b3f83cf7e9ee99b5bfb350100000000ee453deacdc77f35cf211dee2853bfbf74fcb877e3c7f7c6290d5d47e4e32e6b6b5cebc561db9d946b71c9f2b6a583a397b616d4b63acaac55afb9e7ca1977574a5e0ee8cbd4f73c99491aca37b2a96aa6fecf50fec771cb9771ccdf274b4a164a36
1df0e7af9392799eff3c9bc3dc2d18e8ea4119ef7e17f51111316b6d0b0000000078f86a354b7f603d1dd7c5b58332d68232d68232c3b0d3335d08661994d99ac9bcdce6708b5a7597f58e326b3896058a6efcdade5d07d7c03c87552ce64195545a5b5b68306ff7c5108a6e5cf8da7ef45d637c9c8f271f6cc8eb615e9ec3
73d1585d4b5b1dbd14f3a0cc72bb433ff3f26b996e33530400000000b86bd67795d91fbd9437e9823276c5a08c7541993a72bc86635a7158e9a23cec774d3eee726c78665f7ffcbbdce6a88e325b299b83bff3ba7d7407f8e587c9cf392d485a2a5f5a287cd0e052199695e74577419afa4f5e1898cf5a6e1d655292ea2240
7eb1bd5f44bda6a30c000000009c17ab638bcc5b01ca311d65eaf76b4199a1dd3674c7c0793160187247191f7ceff8782d18d32f162c5bd1d6458bc54fa45a68b2faf3d2550690747c386c2d28b21790f128eb4db9402b8f493299c63c0a49522457d8a070698821874c7651b63379fda71fc964aed1cad8714f790c791aa7
f1e3a9845f52b71696f6d7a7d6bac8b4a04c4dbb6cfc3a56bbc844fe9a353000000000787ab44eca16d318f26e6cf072db65879983eb573ec8cc3558b79ed54630cdd7b9f258f21c96d9eaaabcda6579a89d69baf14d5ec6aafbe52199e51a5f6fb75925a2e9e077d99ee64a16156d535026661b45595f185a30a67b825940
c665e6b350cc322813917231cd8180ccda2fe7e08f415006000000001e853eec521d357a49cba0ccd0cd5af672f27c1e86e9c72aadddb71cc174b873ccb460716ce5cc65bf07e09ca46ed4d0daffff0fddb6d759ca5cf25693a748ae3c2cc91483a408b9e5b14ab973725d88541bcfe6657c5a0dc80c3e68b02187637cd438
96c04c193d3ea671bf586c4c978e1f0fcd833297d95a03ebaf01000000000f9fb94d0199b575a0ee106fab586cd6556658ac5b290759061fa6d1e3a568cc2d6f3fb86b18e6a3c977bb2930b3bceed7c86ae0c6ed705799d98fd41db7a69436d7bf8eea28b3f70b3dd876767f67ea2fb1cd5a2ec19bed05bd7978a7bfa494ca
18a7f5a04c5f1943500600000000b074a5a04c0da5f8764799e56dcb304c7f80bfd651e660e5cc31c19903c7e5cbaf97b701b89abdce327592b8d7b526c9932bbc749dd1208ba9226fec0ac2ca33caeca28467eaf528b7514309ccd4a04c4a4969199429f71f0acad46bd6c000000000e0bc2cd791a4238bc5baf5ab439d65
6a21480bba746198fe71fd7ad756479983a397ac7687de0fccf4fb7e15d70aca2c2dbbd2ac0565fa6e32f5007eb9fdf4038db2926aaa299ffa8ba80b03b5d56c4ab9838c546640ebf0a2c0f2faa68b04fd3500000000e0e9508f4fd72c8ff10e2d126c8564968b01cb90cbe67ce76edbe522c1f2b15b452c00d61d5abfd9fa
db39a658ac6e538bc4f2fa95cb2ce5c53c2987694cb3f1e2b91d721b4c9e9f4b96bbcc98691c6b77e5a464a1645db19825452425f3b236368d81ea7fd6be98ecd8f52bef4384ddef2e12411900000000789ad44ec8f9b8751994d91f4d746c50c65a50c65a506618767aa60bc1acad8d1d0ac41c5734a6ee72fc5ad8dab1ec
ad0465fa5f5cfd7a795fbf08d97794e93bcba494f65a48f71d648661c8419931b579cc29d2a581153aca0000000000aacb0ea2af1a9459debe168659065db6160b0e2d1cacbd46dd3f00b7a3ae535d45db3eb4f7f79f9f735a90b454beb450f8a0c195133421591b47be1c439e947c7dfc78eeae5cd6a7f28bb59f6379cd1a
18000000009c17ab638bccdb509f633acad4efd7823243bb6de88e8107edcac8a5ddb0930febc5626b1d9697eb5efdda97f60e4fcbf1f225c52ec7d82dbbc1ace9432d877e518782327d58e6b2114c96e64199fee03fa5a434ec8f5daacfbbb5ff5bd7375924b8ea7300000000001e86fb08ca6c6dbb558d73a8d5eca12e16
878ecbb7ee235c837374680dacef7c7ced759e45455bbf0ed66f1491f32c430bc6744f300bc8b8ccb6c78fe7af536e4cc3f8710000f4977ff9977ad39bde74eadd0000e0c1e8d7a1aaa3462f691994195a779a7cdb7e51583f5669edbee508a6a3d6bfb4bd1e76d5dfc3d29d7594a90b0bfd42431da3b43ca8df0addd46d97
6199fd4581e9a07feb607eeb9ad14b00000000707eb61608b6b65dbb1c0ab01cdaeeb2114cf5ebb54a1a422ec0fd5a5bab3af4f758ff6e2f2b12eb1e317b6c7fe9bb2cafad8929e6a3952ebb2628030078ecfec30bff413ff1133fa1d7bdee75a7de1500001e842b05656a28c5b73bca1c2a0a5b8660b6d6bed62e978f5c3a
7ca9fb7ba8706c69b775c7557eb9cbaf97cf591708ea2f7b196e592695524a1ac7711694592e082c2ff5b9d65cb658b0dceed89f736dff01000000004fb7bee063797d594846d26c01e2d041fdda58a543a3968e1dbb74e83e0037b35c1f5a0bcad4bf57496d2d6bb9fdf4b73cca6c5e6056ff1bd00ac7cae8f19472071949
8a142d2423dd4f50a6bf0600e0a179f9e597f5d9cf7e569ff8c427f4ae77bdebd4bb0300c083518f4fd75cb5abf2a12ecbcb22b0434562cb80cc322cb37cec5611cb4ddc2828b31688a9d52e9236c32ccbaa9abeb2a6fffa9880cc3107ea046500000000005bb68ee90e55a11c0aca1cb3ddda01ff56d5ccb2f2676b5f0f85
68b6f60fc0d51d0aabf52199fafd5a679994d25e0be9be83cc300c39283326a598c232a71a3f4e471900c043f7277ff22792a4dffeeddfd6b77ddbb79d786f000078182e5b03baadf1e397ad691d0acaac7594b94ac1d875dd68f4d2a1cab5cbb6ef43326be39996c119693f78b3d51668a9de97529a7dbf1cd554efbf6cdf
fb050f160900000000e0e9739d13c6870230fdb65709caac2d1a6c2d3c2c9f1bc0d56c1541f5fa504bbfedd6dfe15a50a60fcb5c3682c9d23c28d3178da5949486fd22b2fabc5bfbbf757d93a0cc559f030080fbf6b18f7d4c92f4e94f7f5a9ffbdce7f4555ff55527de2300001e86fb08ca6c6dbb551c7668e4d2d6fa59ff
b36cddb676dfd6cf7fe5a04c1f5a59b33566696bf452bf833524d3b79aadd5345be1183aca00c079f8b99ffb39fde88ffee8a9770300003c42d7e928b3bc6d79e0bdb558b07c9eadc583b503f96302325b27f0efaafa0638476b8b6e5b8560f5f61a74d90addd46d976199e5e3b78abf2a462f0100ced1a73ef529fdc55ffc
45fbfea31ffda8bee66bbee6847b0400c0c3b1cc365cb6eda122af638bc1d6be5f1bc154bfde2a20bbcb35ac5bef2873ecf6cb45847a80bf5c48e8ab780e05657a5b0118823200f074fac217bea05ffcc55fd4d77ffdd7eb9def7ce7a9770700003c326bd5335b5f1f139ee96fbf2c2873954587ad7dbc0cc11820bbe9dfc2
da7f1b96cfb95540d67fdf3f474a49e338ce8232cb60cc5621da1ad6c00000e7e80ffee00f66dfffdeeffd9e7ee8877e485ffaa55f7aa23d0200e0e9d0177c2caf2f5baf92345bef3ab4aeb53656e9d0a8a563c72edda428ec60506679307cec0bd4ed0e759439e6eb6382326b5f6fdd77578b040080bbf5d18f7e5492f49b
bff99bfa866ff88613ef0d0000780cae73fcb775927ceba0fc368232cbed2f7b9dad30cfda35706e6ef2fffdb5404ced822c5dde5579591456bfaf5f1f1390a1ab320000eb7ef7777f77f6fddffccddfe8f77ffff7f5ee77bffb343b0400c003759daeca878232c76cb70ccb6c056596eb675b0ead812df769adf8ac3a1894
39e6e077f9a2871ed38f50aacf7f2810739d8580b5efefaaed2c00e07efcf11fffb124e9231ff9887ef2277f52af7ffdeb4fbc470000e069771b4199bea0e4b2f04a3d997e6c85cef2be635cb64800e0fa0e55ae5db67d1f92e9abf56a57e5657046da5e1babf76da9f7a59466df2f0be0eafd97ed7bfd6f57bf4f00003c24
9ffce427f5e77ffee77bb7ffeaaffeaabef33bbff3047b0400c0c3729d3cc4a1004cbfed558232fddad7da98a5ad75b1bb72a3d14bbdad0583cb2a60d68230876e3fc6d6020241190078fa7cfef39fd76ffcc66fb4ef3ff2918fe8077ff0074fb8470000e09c6c2d121cda6eb9fd4d82325bcf7d95fd06703d7d6865cdd698
a5adf5adfa9c7d48a65ef71d6ab6c2317494010060df8b2fbeb87afb273ff9497dea539fd2dbdffef67bde2300001eaeeb7494595bc35a5b2f5beb0ab315a4591bb7b4b63f871cdb5166cb51a397961d5f8eddb963f4619abe8286a00c0040d22c242349bffccbbfac1ffee11f3ed1de00008073704c4799438fe96feb1700
2262d69d61ab7bcc758232871e7fec7300d876d5bfa1ad8e32d2b4ce56433287ba2d575b6b585b011882320080735147b6aff9f99fff79fdc22ffcc23dee0d00000fdbf298eed01ad831e199fef6cb82325bc5626b97ad7dbccc55b63daaa34c3d50bfac9266ebc5d73acbf4cfb3556d73d5804c455006001e8f3ffcc33f9c
7dffb9cf7d4e7ff4477fa46ffcc66f3cd11e0100fe7ff6ee264692f4ac13f81b99d936871186b584e49bdd3e73b099ab4946e511270eddd25858a28f1e5f904042b67c2a709db0b870c43d80803e206d0fd3960c074397bdc90169571a2f5f271fc680909010d234cb88e9eeaa8cd843f75b1315151119911999191fbf9f94
caacccf878f34b9511f18fe781b168521da6ec6077db65955594c93f96bfdd24285336865d7622003703214dbf43f97d655515659adc6e129429bb5df5d8be823200d027fff88fff18fef55fffb5f2f1d56a15fefbbfff3bfce44ffee401470500fdb2cdf65fd9edba4a2d5d04658ad36f5a4fdd3eb49d2bca34b5e9acbaf8
e2979d4113af9bded794a00cc0f0fde77ffe67f8ee77bf7be3fe3ffff33f0fafbdf6da114604008c417163b9b85d58acfad2445d80a6b88320ff58d9ce82b2e936293be30668aec9fea1a6c1b910c2b5164a71f975819836278d6d1b94b10f0c80b1f9def7bed7689a2f7ff9cb07180d00f453174199fc09259bc22bdbb61f
6fb36f6bd7fd6821340cca1437aeb7d9602e9e61535c6e93fbdab0930060f8ca42322184f0277ff227e19bdffc66f8c4273e71e011010063b0e9ac926d36aeeb82325567c36c1b9469b32ea07b4dab29570565e2df9bee6f42556500a6acd8b2bdcc9ffee99f865ff9955f39c0680060d8aa4eeeaa9bae38fd2e4199aa65b7
19771b8d2bca6c3a5366d3bc87541cab9d0400c3b45aad2a1ffbe33ffee3f0ff3c54e60000200049444154ebbffeeb071c0d0030169b36c29b0665ea5aa1345957971565363d0fa05efe04afe27ea5aebe4bf9304dfcbe0bca00c076fefeefff3efccbbffccbc6e9fee11ffe21fccddffc4df8c217be70805101c0b034a928
53374ffebe7c0826cbb21b159bcbf6816d1394a99bbfe93242e8a8f55271604da629ee78280be214cbf86c3b8e7dee24b0f300603f9e3c7912bef39def543efedbbffddbe1377ee3370e382200602cf61d9429dbb62dfebd2920d34550661f07fa61ec8afba29a96a82ecebfa9824cfef62e559505650098aabff88bbf6835
ed2ffcc22fec6f3000d0736dab2ad71551a95b56594599fc63f9db4d82326563e8ea44b1c64199a63b093639c4c676d50b282803301c752199104278faf46958ad56e1b5d75e3bd0880080b1387450a66cfd6d823255e3dfc4f62a746fd377b37842d8b6edc7dbec7b139401608aaa5ab69779f0e041f8cddffc4d6ddc0198
9ce27ea6e27661b1ea4b1375019ad852a9b8bc2eab2ae7e7ddc5561565bad8615735ef2e3b06aac650b74c3b0900fae9073ff8c1c6691e3d7a144e4e4e0e301a00604cf61d4a691b94693b26607f8afb8e76a972bc4b50669b31978d5f50068031fabbbffbbbf0cffffccfade679f0e041f8b55ffbb53d8d0800fa69d37ea6
6d2a1ad705658a21966238a66cbaba31b459575b49d6602bb9cd46fa362f605d70659bd64b65cb6832dd36ec3c00e8de93274fc2cffccccf349af6dffffddfc34ffdd44fed794400c018353d4ba54a936dcdaad62cc5db5d958dddd268366c9324f96208e1af8eb4fac75996bd7ea475d34ca37d60499284344d775fd90182
32c572d88232004cc16ffdd66f85dffddddf6d35cfa73ffde9f0b77ffbb77b1a1100f4d3beab2a375dd73e823255ebaa716da2ad2aca746d9b27bf6979753b2677392b0880fdfbb33ffbb3c6d3fefeefff7ef8dad7beb6c7d1000063d3d5b6e0b667e3d8168571681ab68be19b625ba6aae9761987f6e3004cc11ffdd11fb5
9ee79ffee99fc25ffff55f6be30ec0a41cbafd78d9f2dbb41fdfb6ddf8a693d6ca2cbaa8aa523588b6bada81b8e9ac9f2e4b5977fdfa0110c2f9f979e369df7aebadf0f5af7f7d8fa30100d85e93edcfb2edca6db7351dc886dde5032b5defe7ea5ad3f6e38232008cc53befbc139e3c79b2d5bcdff9ce77b4710760520e1d
94295b7f9ba04cd5f837d9eaa493344d1b6ff13759411fcab8b6d9f807a05f9e3c79123ef9c94fb69ae72ffff22f6de40200bdb4ed891a070eca8ce6e8b7d64b6c70d4f6e3c5fd5555a196369a0665da2c5f2006803efbd55ffdd5f0077ff0075bcfff6ffff66fdab80330195d85529ab41faf5a66d518ba2c6ed250ff5a2f
0140f4f0e1c3ade61194010000fa6c53a5966d5a2f6dead7be69ba36046800e883362ddbcbfce11ffea136ee004c4ed3d6c15dafa3ac624d5fb62d5b5594190a15650086eb977ff997c3db6fbfdd7abefff88fff70360800d03b87de09a0a28c8a32d43a6a45992ed7dd743efbc7001893b7df7e3b7cf9cb5fde69199ff9cc
67c28f7ef4a38e460400fd76c850caa6a04c9bf9f644451900fae9c993275b85644208e1fefdfbe1eb5fff7ac723020000c6a2ebd0c82ecbdb760762519aa68dd6d3c58e47a11b008eedfbdffffececbf8f18f7f1cbefffdefab4e0d001d6bb2fd59b65d79e0f6e31fcd6f231780be4892e4cd10c2b7b79cfdbd2ccb3edbe5
78000018161565a893b5d809d664875bd3c5edf3ec3855950198924f7ef293e1c993273b2fe72b5ff94af8bddffbbd0e46040044db9ea871c0a0ccb519665bad1500f6e38b3bcc7bfbe58111000000006044de7efbed4e42322184f0d65b6f75b62c006098b45e02a0179224f9e910c21b3b2ee68d10c2e30e860300004c58
97555af659f145451900a6e2f1e36e77f97dfbdbdfd6c61d00264c451900fa62d7904c0821bcf9327003000000008cc4c3870f3b5dde5b6fbdd5e9f200806151510680bee8aa6dd29b21846f75b42c00006024922d1a98f7dd089f1200dc9024c91b2184ffd9e5327ffce31f87c562f17a9665aa5303c004a92803c0d175d4
76297ab3a3e50000000000c7d7d50976455ded8f040006465006803ee872a3f4769224fbda7806000000000e6b5f81166ddc0160a2046500e883ae832dce060100000080817bd976699f6116d5a901608204650038aa8edb2e45ce060100000080e1db77e56841190098204119008e6d6fa553f7b45c00000000e030f65d39
5a1b770098204119008e6d5f1ba282320000000030500768bb1469e30e0013232803c0d1eca9ed52e46c100000000018ae43eddbd3c61d00264650068063da77d517678300000000c0301d72df9eead40030218232001cd3be37769d0d02000000000373c0b64b91a00c004c88a00c00479124c9ed10c2cf1d605536720100
000060580edd525d1b770098104119008ee550a55305650000000060588ed1525d1b770098084119008ee5501b9ece060100000080813842dba5481b770098084119000eee806d9722678300000000c0301cf3a437d5a901600204650038864307579c0d0200000000c370cc93de04650060020465003886636cecdac80500
0000801e3b62dba5481b770098004119000eea086d9722411900000000e8b73e8454b471078091139401e0d08eb5a1e96c1000000000e8b73e8454b471078091139401e0d08eb9b1db870d6d00000000a0a0076d97f254a7068011139401e0608ed8762972360800000000f4539faa410bca00c08809ca0070487da8e86223
17000000007ae4e5c96d7dd8771869e30e0023262803c021f5616357500600000000faa54f6d97a23eeccb0400f64050068083e841dba5c8d92000000000d02f7ddc5fa78d3b008c94a00c0087d2a73330fa34160000000098ac1eb65dca539d1a00464850068043e9d3c6aeb34100000000a01ffab4dfb048500600464850
0680bdeb51dba53c1bb900000000707c7d6cbb1469e30e0023242803c021f4f1ac1041190000000038a29eb75d8afa3e3e00a0254119000ea18f1b93ce060100000080e3eae37ec3226ddc016064046500d8ab9eb65d8a86b0210e0000000063359413d954a706801111940160dffa1c4679f36590070000000038a081b45d
8a0465006044046500d8b7be6fecdac80500000080c3ebfb7ec33c6ddc016044046500d89b9eb75d8a86b4410e000000006331b4e089fd88003012823200ecd310361e6f274932847102000000c0280caced52f4e6cb71030003272803c03e0d65637728e304000000803118eafe386ddc016004046500d88b81b45d8ade78
395e0000000060ff86d676291294018011109401605f867656888d5c00000000d8b381b65d8a6e274932d4900f00f092a00c00fb32b48ddda18d17000000008668e8fbe1863e7e00983c4119003a37b0b64bd1ed24496ce402000000c07e0dbd22cb9b2fabe2000003252803c03e0c357032d4710300000040ef0dbced529e
36ee003060823200ecc3503776df78590d0700000000e8de50f71b1609ca00c08009ca00d0a981b65dcab3910b00000000fb31f4b64bd1ed2449c6f25c006072046500e8dad083266339ab05000000007a63446d97a2313d17009814411900ba36f40dc4db49920cfd390000000040df8c6d9fdb9b2fc33f00c0c008ca00d0
9924497e2e8470fbd8e3e8c0d836da01000000e0d8c6d8aa68e8d5b5016092046500e8d25802266f24493286c00f000000001cdd08db2e45823200304082320074694c1bbb367201000000a01b63da6f98773b49923156ca018051139401a013236abb148d75e31d000000000e6dcc6112fb11016060046500e8cad836086f
274932b6e704000000000735e2b64bd19b2f9f2300301082320074658c1bbb637c4e00000000704853d8c7a68d3b000c88a00c003b1b61dba5e88d2449c6f8bc00000000e050c6dc76291294018001119401a00b633e2bc4462e000000006c61026d97a2db49924c21100400a32028034017c6bcb13be6e70600000000fb34
a57d6b537aae003068823200ec64c46d97a2db4992d8c80500000080f6a654adf9cd97157400809e13940160575308914ce1390200000040679224b91d42f8b9638fe3c0a6140c0280c11294016057530891bcf172c31e0000000068660afb0d8b0465006000046500d8da04da2ee5d9c80500000080e6861a94f95f21842f
8510be154278afe5bcb79324f962e72302003a252803c02e86bab1bb8d293d5700000000d8da966d97de0f21dc0f2f422ac7749965d9c32ccbbe9165d9674308af8676a119fb1101a0e7046500d8c59436fa6e274932a5e70b00000000db6ab31feddd10c25743089fcdb2ecab59963ddcd398b69265d9bbb9d0cc9742088f
37ccf26692243f7d80a101005b129401602b136bbb1409ca00000000c0664df6a3dd0f21bc9a65d9ab5996ddcfb2ecfd7d0f6a572f2bcdbc1e42f86c785165a66accdab803408f09ca00b0ad218746fedf96f3bdf1b26c2c0000000050a241dba5fbe1a3ea31ef1e68589dcab2ecbd2ccbbe113e0acc1409ca00408f09ca00
b0ad6d8332ef86171b8fffbbc3b1b4f57f4208ff23bc28e9dab694ab8d5c00000000a856b5dff061f82820f3de2107b42f5996bd9f0bccdccf3d743b49922f1e695800c006823200b4b645dba5f7c28b70cc675f9652fd4608e1bff632b8865e6ec4decfb2ec4be1a3d0cca6fec2210cbb920e00000000ec5b71ffd97b2184
d7b32cfbd2580232452f2bcc7c3584f06a7871a26008f62302406f09ca00b08da61b790f43085fcab2ecb359967da3af1bc2b9d0ccebe1c5c6ecfd50dd5ff8769224367201000000a0a0d076e9fd10c2375eee1b6c7282dae06559f66e9665af8610be115eb471ffe9638f0900b8495006806d6c0a8ac43ec35fcab2ac6d6b
a3a37ab931fbd5f0517fe1b2c08ca00c00000000dc14f79bbd1b427835cbb26f1d7330c7f2f279bf1a42109401801e129401a0950d6d97624066f07d860bfd858b1bf46fbc3c3b0600000000f8c81b21846fbd6cbf3ee8fd83bb7ad98e69d2af0100f495a00c006d955553791c5e9c2132f8804c512130733ff7d09b471a12
00000000f4d5975eee4b0300e82d411900daca0765de0f217c35cbb2d7b32c7bf758033a849767807c3584f07a08e1bda0fd12000000005c33b693e8008071129401a0b142dba5d866e97ecd2ca39365d9e3f0a2bff0c32449be78ecf100000000000000cd2d8e3d000006e58df051159987c71eccb16459f67e0841095900
00000000001818411900dafaeccba008000000000000c0a008ca00d0589665aaa80000000000000083353bf6000000000000000000e010046500000000000000009804411900000000000000002641500600000000000000804910940100000000000000601204650000000000000000980441190000000000000000264150
06000000000000008049109401000000000000006012046500000000000000009804411900000000000000002641500600000000000000804910940100000000000000601204650000000000000000980441190000000000000000264150060000000000000080491094010000000000000060120465000000000000000098
04411900000000000000002641500600000000000000804910940100000000000000601204650000000000000000980441190000000000000000264150060000000000000080491094010000000000000060120465000000000000000098044119000000000000000026415006000000000000008049109401000000000000
00601204650000000000000000980441190000000000000000264150060000000000000080491094010000000000000060120465000000000000000098044119000000000000000026415006000000000000008049109401000000000000006012046500000000000000009804411900000000000000002641500600000000
00000080491094010000000000000060120465000000000000000098044119000000000000000026415006000000000000008049109401000000000000006012046500000000000000009804411900000000000000002641500600000000000000804910940100000000000000601204650000000000000000980441190000
00000000000026415006000000000000008049109401000000000000006012046500000000000000009804411900000000000000002641500600000000000000804910940100000000000000601204650000000000000000980441190000000000000000264150060000000000000080491094010000000000000060120465
00000000000000009884c5b10700000000d091f743088f8fb4ee778fb45e000000005a1094010000004621cbb2774308af1f7b1c00000000f497d64b00000000000000004c82a00c00000000000000009320280300000000000000c02408ca00000000000000003009823200000000000000004c82a00c0000000000000000
93202803c0147df1d803000000000000000e4f500600000000000000804910940100000000000000601204650000000000000000980441190000000000000000264150060000000000000080491094010000000000000060120465000000000000000098044119000000000000000026415006000000000000008049109401
000000000000006012046500000000000000009884c5b10700000040ad6ce70564e58ba8ba7fdbe90060089224d969baa6f36f5a7c170b010000a03d411900008011a80bb308ca00c0617414a2010000608f04650000000821ec1ea80180b11078010000182f41190000808928065e36fdbde97e00989a2449429665823400
00000326280300003032550198aaebaaf936dd0f0043d424e49224c9b5e9eae6119a0100001816411900008081ca0758aa6ee7ffceb2ecea52375dd96355d30140dfb509b2c469f341996d83300234000000fd2428030000d073f7efdf0fefbdf7de8dfbdb5480290bc734ad28d374bd00d037afbdf65a78edb5d76aa729ab
1c530cca94ddae5a06000000fd2628030000d0730f1f3e0c8f1f3f3ef630006070b22c0b5ff8c2174a1f2bab18530cc4e42f65f71797976599d00c000040cf09ca0000000000a394a669b8bcbc2c7dacaecd525950a6ead284f00c0000407f08ca0000000cc8effcce778f3d0400e8b51ffde8ff86b7de3a0d2184b05eafc3
c5c545e974755562922409b3d9eceabefcedfc7d65cb2ba3d20c0000407f08ca0000000cc8e73fffdab18700008391a669b8b8b80859965dddd7b47a4c0cc7cc66b3aba04b3e301342b8169629ae4338060000a09f04650000000080515aafd7e1d9b367d7eeab0acae48331c5eb78c90766a2785b30060000601804650000
007a2ccbb26b67a80300cdc5a04c3ec0b22928339fcf6ffc3d9fcfaffe27175b2ee59751255698298e01000080c31394010000000046e9f2f2f25a4599ba764bc50a32f3f93ccc66b390a66948d3f44660261f7c89d3e54334c5304c312c030000c07108ca0000000000a3747979193efcf0c38d55648a2d96e6f37958afd7
a5e198fcdf794992dc08cbe4d7090000403f08ca0000000000a3b45eafc3d3a74f3706658a5564624026569389971890592c16d796136fcf663355630000007a4e50060000000018a5cbcbcbcaa04c3124930fca2c168babb0cc62b1b80ac9e4cde7f36bcb8c2199389d4a32000000fd242803000000008c529ba04c0cc6c4
b64b8bc5e22a2473ebd6add24a31b1dd520821a4691a9224b99a2e3f7dbc5f78060000e0f80465000000008051babcbc0c1f7ef8e18d964b5541995849260664d234bd6ab3940fbac465c4696210265e0462000000fa4b50060000a0c7cace5e07009ac95794295eca8232b1924c0cc0e45b298570bdcd529c370665e2753e
341315ff9f0bd20000001c8fa00c00000000304aebf53a3c7bf6ec462598aab64bebf53aacd7eb6b21996250264992b05eafc36c36bbba9ecd66d7a65759060000a0bf0465000000008051aaaa28930fcac4904cbc144332c5f96240264e5b9c5e35380000807e139401000000004669bd5e87e7cf9fb70aca14832ef96963
c5997889d3d75d622b26d565000000fa4150060000a0c71c540380eda569da2a28b3587cb4bb344e3b9fcfafae635ba6b28b6a32000000c3202803000000008cd27abd0e171717b541997cd8258470639af97c7e554d264dd3d2b04c9665214dd3309bcd04660000007a4e50060000a0c71c680380eda569da382813db23e5
a7296bb7b4a9a24c55fb25000000fa4150060000000018a5344dc3e5e5656d50261f6689e1986240a64918a62edc2af80a0000d01f823200000000c028655916d6ebf58da04c0cc6e4032c654199aaea319b423371dd000000f48fa00c00000000304a699a56066566b35908215cdd17a79dcd66613e9f370ec6000000302c
82320000003de6001c006c2fcbb290a6e98da04c5e3e28b3a9824c93f64b6597e23a010000381e41190000000060949a066566b3d9560198aa40aba02b0000407f09ca0000000000a3541566d9260ca3ed120000c03808ca0000000000a3d54550a68b608df64b000000fd303bf6000000000000f661d7b04b7139001cccbb
c71e0000305e2aca000000007b7772f24aede3cbe59d707afa60ab659f9ddd0b2184b05a3d6a34fdf9f9078dc6949f96c33b3bbbb7f13df5fed044938a3255f3151f1798013898f78f3d000060bc046500000018ad18a00861738862b9bc93bb7df7dadff45393200540136d2bca34a942030000403f09ca000000302aabd5
a3b05abdd33a40919f3e7f3b0666b6ad76c27e08c900000000b00d411900000046631fe109618cfe1192e90fed91188226ad97ea2e0000008ccbecd803000000802e084f4cc38b8a41de67e0708465000000c6454519000000064f48663a56ab771a4d175b6601000000409ea00c00000083a6c2c8306c0aae2c97771b2da7
c97bbd5cde09a7a70f761e13c7d5f43301000000d086a00c00000083d6b4c24808f5c108619bfd6a125c39f4ba0e3926da5b2eef0833010000009d139401000060d0baac301297b75abd23380300000000232428030000c0609d9ddddb384d9b904c9c3e56b1109a010000008071119401000060d47669afb34deb9718ae69
3ba618fa290be5bc18c7ddcedbd0e4c75a15068aebdc75fd9b424d55cb3f3979a5f5bab699a7caf9f9075bcfdbe4f50de17a4bb0b69fd7b2cfdba660d72eefe9bede8fb240dbb6dfa536f29fcb4ddf815dd7b7cd77a02eac17a7d5420c000000da1194010000800eb5ad407376766fe3f42f0e963fea2c30d3649df975e7af
db56e8292ea74ed741a06369f3fa8670fdb589a192d3d307b5afc72e61a0b2f7741f41ac5dedab9a53db4a51c5f767dbd7abcd77a0c918e3632727af6cfcbc000000001f991d7b00000000b04f7d6d9bb45a3d0a2727afb40e54b40d61ecbace7d2c63acba7c6d365552e952fc5c3569653674f179eefa1dd8e7ebb5cd1877
7d4e000000302582320000008c5a1f0300f140fbb6b63928def5ebd0c7d7f598c6f07aecfab9ecbbaec324fb78bd7619a3b00c000000342328030000c060356d01142b7d74514da20b5d1c5c6ff33cf6f59cc71eac68aa0f9fa9aec4365f633384ef4017affd212b11010000c0502d8e3d00000000389478103a7f307ab9bc
f3f2faeed5eda1383bbb17cecf3fd8384dd383efc5e7df64be78707f68af5d57fa1492d9f41e341de76af5cea8decf7dbf47312cd334b8b74f53ff3e020000401382320000000cda727967a783e0c5f04c3cc07ca883decbe59d1beb6a5b2da66aac4d2b54948d21bf8c4d15339a0476b6555ceec9c92bade7a9d2645975da
5600592eef9406b25e2ce79dabdb6d961742bbcf6a93f7b32e6c517c6d9b7c56f7f5d968a2cd7bb4cb77b1eb804af1b3123f23cdc632aea013000000744deb2500000006edf4f441a70785e301efd8aa695f96cb3be1fcfc83d290c3e9e983707efe41a3e75577e0bc491b96d3d307b5418bba104dde145b30356d73937faf
cbded3f81ab779dfe3f46d035d4ddfcfb1b4f069f23cbafb2e76f39ac5f735bfcef8be09c0000000c0ee046500000018bc7d1d408ed537f6d1b665b9bcdbc93421548765368dfb45d58acdaf5b93e9fad27ee850baa8d653a549006697cffb54c216cddfa36ebe8b6d2b0c95afa7d97772d338000000806a5a2f010000300a
a7a70ff6126a8907bfbb6c1fd336a0b2e93995b55a6952e1a56910879b9a560f39540baf6ddb37d52d6fe89a5693d9f777b18d4d9f97d3d3073bb70c03000080a913940100006034e241e67d0466ceceee1d2cf470285db74b1ae36bb48b43546ed957c52300000080b1d27a09000080d1393d7d10cecf3fb86ac9d44560a1
8bb62a519b3049936905250eafc96bbecfd0d06af5289c9cbce2bdafd1f57bb4efefe2545a62010000c0b1a928030000c068154332bbb6a7d9b5adca2109508cd76af5a8f36a4000000000532128030000c06494559769d3ba46f8843e109201000000d89ea00c0000009316dba9b409ccc0b1340dc9bc0885ddadac807472
f24a97c302000000180c411900000008212c9777471594592eef6c7c3ee7e71f1c68341cd27279e72a0006000000c075b3630f00000000faa0aaf2c63eb4699dd364da6dc7ae85cff69abce6fb787d9b84b996cbbb9daf7788ba7e8ff6f95d040000000e475006000080413b397945e0835e3a5685a24d610ddf1700000060
ca046500000018bcd5ead1ce819943568b58ad1e350a51349daeac824893d63b4d97bfc9d9d9bd51b5ad6aa269d5966d3f93637a3d8f1718dafc1e1de2bb08000000f48ba00c000000a3910fccb46da972e883f9abd53b9d4c13427580a749b0a7e93aca9c9ddd0b2727af84d5ead1e45ace2c97771abebe8f5a7d16e3f4bb
bc2f759fe5aec2516dac56ef1c252cd3fc3deae6bbd8747d000000c0712d8e3d00000000e85a3c287f72f24a08a13e30d2e6007e97d52262a867b9bc73a3fa4b9be04edd735b2eef6e5c4e1cc7e9e9834607f963e8634c154fb6d5e4f50de1fa7bbd5cdebdf13abf08af5c0f93d4859f36adf3ecec5ee9fbd936b4d3c4e9e9
83abef59954de19cb2ef4057da7c0776ff2eaa2603000000432028030000c0e87511ead857b58878907e5b75018338e626cf3f0628aa9ea360cc4d6d5edf100e5bcde5ecec5e6950666adabc47bb7c17559301000080e110940100008006baac16d1265c51a749158ed3d307adaa624c314cb18bb6af6f17eb6b1ae638d498
bafa3cefcbbedfa37d56c401000000ba373bf600000000a0ef9ab6253ae4f2da2ca3ebf173dda15fdf5d43195d873a86f0f9dad71885640000006078046500000018b47d1ea08f07c1f7b18e5d96bbcdbca7a70f1cd0dfa343bebebbb4f9e9e3e7f950ba1ea3900c000000d83f8b3e00002000494441540c93a00c00000083
767afa209c9f7fb05378a0282e6bdf07ffdb2e7fd7312d9777ae5eab2ec4f19c9f7fd0c9f286aeabd7f7c5e7afbed557db60cea13ecf5d7f17bb165fb75dc6175f4b211900000018a624cbb2638f0180094a92e4af42085f3cd6fab32c4b8eb56e006863bd5e67bff88bbf18cecfcf43084120a185b3b37bd7fe5ead1e554e
9b3f68beebc1efb3b37bb5eb0aa1fc7d8ce32d9b370627ba0e1fac568fc26af54ee57a8b638804049a69fafaeefada6ef3d9297e3fca4ce17dcebf0e55ef91cffef0fcf0873f085ffbda2f851042f8d99ffdd9f0eaabaf862449ae5d66b3d9d5653e9f87c56211168b45b875eb56b875eb56f8d8c73e163efef18f5f5d7ee2
277ee2da25ffd8c73ffef1f0b18f7dec6abeb8acb8ecfcba92e4c5a6e87c3eb74d0a50e3c8fb0e1f6759f6fa91d60d001cc0e2d803000000807d18da01ed638cb7cf953fc6e050afef369f9da17d3ff6c5eb00000000d3a3f51200000000000000009320280300000000000000c02408ca0000000000000000300982320000
0000000000004c82a00c00000000000000009320280300000000000000c02408ca000000000000000030098b630f00000000c664b9bc7bec210000000000150465000000a043cbe59db05cde39f6300000000080125a2f01000000000000003009823200000000000000004c82a00c00000000000000009320280300000000
000000c02408ca00000000000000003009823200000000000000004c82a00c00000000000000009320280300000000000000c02408ca000000000000000030098b630f00000000000000a22ccb5e3ff6180080f152510600000000000000804910940100000000000000601204650000000000000000980441190000000000
0000002641500600000000000000804910940100000000000000601216c71e000093f53084f0eeb107010000000000004c87a00c00479165d9fd638f010000000000009816ad970000000000000000980441190000000000000000264150060000000000000080491094010000000000000060120465000000000000000098
0441190000000080869224b976010000605804650000000000c2cd104cd905000080611394010000000046ab49f84508060000603a16c71e00000000cd7ded6bbf74ec210040affdd77fbddf7a9e4da19926f7c7c78ad7000000f48ba00c0000c080fcf0873f38f61000603076a924d33634030000c03068bd04000000008c
569bd64bbbb667129e010000e83f15650000007aee7bdffb5ec8b2ecea92a66948d334acd7ebb05eafc3e5e565b8b8b808979797e1f9f3e7e1f9f3e7e1d9b367e1d9b367e1e9d3a757d7f176fef2fcf9f37071717135ffe5e5e5d572e37ad234bdb6febce2df00d0079b5a24cd66b38d97aa90cca610cd36011b0000000e47
500600006004eada46c4eb2607f81cdc03600c360565f65559c6ff4c000080fe139401000018b8ba004cf1fefc19f25567d057558e51510680a1685351663e9f37aa2623580a0000300e82320000003d563ce8d62698527650b049bb89b88efcbc8232000c4917ad979a0467a0c4ce3f8eaa7e5f35fddde5f7190063d2f437
d79e2bfef9e10723232803000030204dcf68af3ad017cf9a9fcfe75797344d439aa6d78230c5e509ca0030246d2bca545db60dd008d4b049dd6f28411900380cbfd360ba04650000004620eedc291eb4ab0ac8e4efcf0765e2b2e27dc5108da00c0043d0242813afe3ffc6c56271ed521598a95a161cdaae811a00180bbfc5
80b6046500000046a0693599fcc1c0b2004c5c4655484650068021280bcac4ebbaa04cf17f6593ea322ac7b02f9b7e7709ca0040bd5821d7ef34a048500600006020f23b789ab65faa6a25510ccac4e5c7837e8232000cd93641995bb76e85c562116eddba156eddbab5b11d53d3ffc7da30b149d5efabaaebaaf936dd0f00
43d4e4f753f17756dd3c7e8f012108ca0000000c565d40a6ac924c0cc7c4f04b9aa6d796359bcdc27abd0eebf55a50068041dba5a24c6cbd1403339b5a31a92e4353f9df4d55b7f37f177f7fd5fd0eabfb4de6f71a0043d2e67754f1375edbf9b75d2f307c823200000003d4a492cc7abd2ead2213c32f713921846b219918
9489619abaa04c3e6c03007d319bcdaefd9dafca960fc994854a6348a6ec763128339fcf558f61275541e4b2df5fc5608ca00c0063b4e9375459e5986250a6ec769b7500e32728030000d0635567c4e7832e759564d234bdd666291f92c9cf9f0fc9b409ca00c010140f96540565625826df862986649a5696119c2184101e
3f7e7ce3beaa404cd97d555565aae66dfa1bcd6f3900faee739ffb5cf8c4273e71e3feb28a3165bff1ca823265bfc5f2416a607a046500000006a86ac74f5950268665f207548ad3178332552119ad970018824dad97aada2fe5abcae4db2f6d6ac1240c43d1ebafbf7eec2100c020bdfdf6dbe1e77ffee76fdc5fd766a92e
a8bc4d70d96f3a183f4119000080012b065eb22cbb3ae0570cbb14e729b669ca579329ab281382600c00c3547630a5ac125b0cca54b561aa6ac1545749060080e62e2f2fc3c5c5c58dfbebaac4e443d0c5dbf9fbca965746a519183f4119000080012beef4c9b2ec2a24531570a90bc9d4b55d2a2e070086a22a28930fcc14
8332c5ea32c5fbf36199a6e118075ca6e7539ffa74582eef1e7b1800d06b3ffad1ff0d3ffce10f42082f8232cf9f3fbf7aac69f598fc6fbb1874c9ff4e0b215c0bcb14f79308c7c0b408ca000000f45855eb88fced6250a65855a6d86ea9aae552ac24232803c09854fdef2c0bca94b561aa0acc142bd2d45595515d66ba3e
f5a9cf84af7ce5ecd8c300805e7bebadd3aba0ccc5c545a3a04cfeb75cd96fbb6260268ab7056360da046500000006249ee5146fc7eb7cdba55855a6385f7e67d2e5e5e55550264dd31b2d97f241991082a00c0083561696291e54c9875ff26199b2c04cfeb17c48a62c30c3b4f8ad0400bb691b9499cfe737fece9f38546c
b9945f4695fcbe97fcba81f110940100001898aa2a33f9b04c51b15777be9a4c9b4a320efe00303455ff37cbce3cceb726cc07618aed96aa423202320000bbb9b8b8084f9f3e0d21d4b75baaaa0e18f76f140333f9fd1971bafcfe93b2df8cf681c07809ca000000f45871a74cd981b7e201bf32652588e7f3f95550a62c20
232803c0183409cae42fc5ca3255c199a66d97000068eed9b367954199b29380f2fb37cac231c5b6d451922437c232f97502e32628030000301055a57ff31565aae64bd3f4ea76be57f77abdae0dc908ca003074754199bab392eb4233da2d0100ecc7f3e7cf370665aa42cdf98ab9f9fd1c8bc5e2da72e2edb86f04981e41
1900008081a93ae017c2cdb04cf12060be04713cdbaa693599e26d001882baa04cbc2e1e78a93a53398667aaa62f1e7c0100a09daad64b55957267b3d9b516998bc5e26a1f47de7c3ebfb6cc189289d3f9ed06d32228c354edbc77bfea0041d303070e300030264d3724aba6eb6843d4d62ca394ff7e54fd862c3b00180333
f91d3ef1feb8c328bf53a8493519001883aaa04c5949ffe2c1984d0199badfbb0ebe00006c565551a6ac9a4cbcacd7ebb0582cae4232b76edd2add9791afb89ba6e9b5cabdc50abe5996f9fd062326280335ea0e0808ca00c061d82085eb367d27e2e371874ed9750cc894559189f396f5ef8efc960560483685b5cbc22e55
2d99ea0235f965d5ad1700806acf9e3d0b1f7ef861082154fe268b41995849260664d234bd6ab3940fba14abecc6fd23f1e2771b4c8fa00cec99830b00f0820d4ee846d90e9ce2dfc54a31f9f9f2f7975594c9afc76f5900c6a04950265e97055faa2ac768b74419bf93006037b1a24c5d78390665622599188029eecbc8b7
59ca57d98da199b8ecb27d22797ee3c1f808cac08e8aff2c37fdbde97e00981aa54ca19dbaef4a5980a6ac4a4c595b25411900c6aa6d50a6ecbeba608cb64a0000ddb9b8b808cf9e3d0b2184da904c0ccaacd7eb1b1573a338ff7abd0eb3d9eceabaaa15b5df74301d8232d0505500a6eaba6abe4df703c01035d9882c1e40
6873b01f78a1f81d6aba1327ee000ae1665ba5baa04c15bf65011892a6bf3beb82329b1e2fab28e3372d00407b651565f24199189289976248a6385f0cc8c469abda5003d322280305550707ea823265071a9a2ca36a3a00e8bb363bfdeb0e2cec73bd304565df916209e1aadfae6d823200301655c196264199e281180000
76777979199e3f7fde382853dc7f919f36569c8997387ddd45f56b9806411926edfefdfbe1e1c387d7ee6b7a40a069e5986d960d007df7b9cf7d2e7cf39bdfac7cbced4186aa83fb4073656d97364d2be40dc0146c5bc9b06d751908c1e7010076757171d13828b3587c74a83b4e3b9fcfafae635ba6b28b6a32306d82324c
da7befbd171e3f7e7cec6100c0e06459162e2f2f6fdc5f57723ebf715b7690a12c30e30c0ee84e97df23df4900c6a26d5066d33c0000ec66bd5e878b8b8bcaa04c3eec1242b831cd7c3ebfaa2693a669695826cbb290a6e955ab6a8119981e411900005a6b1294a93a03b7c9a5090728c0f7000076d54550c6ff63f21c6803
80dd5c5e5e360aca14db60ce66b3d2764b9b2aca54b55f02c64d50065efa9ddff96ef8fce75f3bf63000a0d74e4e5e0921bcd8f97b717171e3f1ba2a31f98ddae2edfc7d65cb2b63a3950969fd4177000f00000018a2f57a1d2e2f2f2b8332f9304b0cc71403324dc2305a4ec3b409ca0000d05a9aa6e1f9f3e7577f37ad1e
53dca82d06664208d7c232f98d526d980000000060dc62bba4fc3ec5b84fb0b8afb01894a9aa1eb329341382700c4c8da00c0000ad6559d62828930fc614afe3251f9889e26dc11800000000988eaaa04cdc5f18ef8bd3cd66b3309fcf1b07630042109461a2a4430160374d2bcac460cc7c3ebff1f77c3ebfda402db65cca
2fa34ad95924000000c7647f2300ec26065d8a6ddda37c506653059926ed97ca2ef633c2f809ca0000d05a9aa6e1e9d3a72184fa764bc50a32f3f93ccc66b3ab0dd6626026bf53394e970fd1946d18db110d00000000e310032e75419958a57a9b4bd53a816911940100a0b5f57a5d199489e198628ba5f97c1ed6eb756938
26ff775e3c3ba45871c6591d00000000303e65fb08b709c368bb04d411940100a0b5ba8a325555646240a6aa5ff062b1b8b69c783b9e2102000000008c5b1741992e82354ed4837113940100a0b5aaa04c3124930fca2c168babb0cc62b1b80ac9e4cde7f36bcbcc9751cddf0f000000008ccfb641994dcb00c813940100a0
b5a64199188c896d97168bc55548e6d6ad5ba51bacb1dd525c4f9224d7ceecc84fe7ec0e0000000018974d4199aa798a8f0bcc005504650000682d4dd3f0e1871f86103e6a955415948995646240264dd3ab364bf9a04b5c469c260661943b050000009a58ad1e553eb65cde39e048807d6a5b51a649151a605a04659824ff
fc006037ebf53a3c7dfaf45a48a62a28132bc9c4004c714334df6629ce1b8332f13a1f9a898affcf056900000060ba56ab47e1ecec5ee5e3e7e71f1c703400409f09ca0000d05a9665e1d9b3672184501b92894199f57a7d2d24530cca244912d6eb7598cd6657d7b3d9acf44c0f8118000000a068b57aa7f231d5646038ea
2ac434b9003421280300406b651565f24199189289976248a6385f0cc8c4698bd3dbc805000000ead4b55d3a3d7d70c09100c7643f22d084a00c0000ad6559169e3f7fde382853dc40cd4f1b2bcec44b9cbeee125b31a92e030000d0cc6af5e85ac58db25041beeac6727957150e06a3aee592cf3100502428c32439a80600
bb49d3b4715066b1f8e827679c763e9f5f5dc7b64c6517d56400000076737676afb6d2465e7eba787bb9bca31a0757e2e762b57aa7579f8ba69ff16d6cfa0e9d9f7fb0b775c331f5f5fb0ed005411900005acbb22c5c5c5c540665f2619710c28d69e6f3f9553599344d4bc332599685344dc36c36139801000068a94d40a6
ce6af5289c9cbc124e4f1fa8cc3141b152cb3e8328fbe6003f343386ef3b405382324c92036d00b09ba64199d81e293f4d59bba54d1565aada2f01000070dd6af5a8b60d0db4318403e6da2e413786f07d07e88aa00c0000ada5691a2e2f2f2b8332f9304b0cc71403324dc23075e156c157000080ebf619921138a0afea0e
ee2f97770f381200602804650000d8ca7abdbe169489c1987c80a52c2853553d6653682604e1180000802a42324cd1a60a183ebb004019411900005acbb2ac3428339bcd4208e1eabe344dc37abd0eb3d92ccce7f3c6c118000000da691392592eef9456da58adde79797d3d7c707afa60b7c1c19ec4cf6c19211900a08aa0
0c93e4ac7400d84d9665214dd36b4199bc7c506653059926ed97ca2ec5750200004c55d390cce9e983daf040feb158a166d7b0413174b3eff042d7eb3bf4f8f7652ccfa368e86d97cac67f88f7665f9f07dff77e18cbf300d82741190000b6b22928339bcdb60ac0540559055c0100006e5aad1e356a3fd3b62acc7279279c
9f7fb0d598ceceeeed654c792f9e7779059caaf585505d1da7edf2e23297cbbb8d0e42d72d3fcedf74594dc4f535791fb65defa6805697cf67bbf5f7231c907fefe3df4decf2de9469fabd0ca15d15a9297cdfdbbe2ebeef00fd27280300c0568ac1956dc230da2e010000eca6aef54c74a8d6494d0e9847abd5a37072f24a
eb03e86dd6515c5f97cbcb2fb3eee070acccd36439f17a53e59f3a6d9f4f0c5a6d136468133038b4be1cb03f397965eb79f321b85d3e136dc610d77772f2cac6a0dc94beef6d9ea7ef3bc030cc8e3d0000008667db4a31bb5ccad60b000030759b0e5e1e2224130f826f7b00bacdbcdb865af6b5bcbaf63e6767f71ab7c5ea
62be6ddf83100e17a6ea52dd731de2f3a9b3cd67e2ececded6419d4de1afa97edfebf8be030c8ba00c00005bd9b5a592b00b0000c06e9a1c5cddf719fe4d2a2834b14b6597a6f6f15a542d739783d821b47f5d77a95c324475afcd58ab5a3469b316edebfb34e5ef7bddf27cdf01864750060080adb409c594cd53bc0f0000
806e1d2230d0c541f3fcb2f67df0fc10ba7a4d9a0623763d683ec46049ddeb5257e567e89a7cb6baf81e55551cf17dbfc9f71d609816c71e000000e3d4b6a24c9bc00d000000c76fbbb44d459b4d633e3bbb17cecf3ff8ffeddd4f689bf79eeff1afff2599191954385d3c39303807acc5dc2e6209eedd9c4151ba381ca22e
e2954d9b45cd38b48b14aa3630671197b89b0b4915385934378264911eac553c501bce2c5ae7e1f66e2e480e4367e0ca30160337cfe22c8ec0ba67f2c7b2efc2fd3d7df4e8f92b3db2f448ef1708d9d2f3ffd11347fa7df4fd76b53d6e03c06a9d610314fecbeb7c3ec860779863e2773c820ed2bb6d6b1c853dbec3aadb73
a2eb9b9eafcd20cbf07b6d3be17aef5c1ed73b00c41741190000000000000000104a900162b7015fbf8a085e41002f510783bc96e7b68d7e2d819c96e9d776657dfd9aeb7c4106e9bbd98f20ba0d38f44ad79fba3e1797908c88fbebcbeff5a0eb4f3d421deec746f13a6f6eaf8771bfdedd70bd03407cd17a09000000a1f9
b55deaa62d1300000000203efc06e4bd0655fd065c830cf60f5ad8908c88fb40bcdfe0b61bbfe3b4b6f6c477b9710a9628a3de76299bbddaf579e936cc625db7f372c7fb7a77c2f50e00f1465006000000a78eb00c00000000c49b7758c17f30d66b9ab8b608e9e59874733cfcd6378a83e2a3d276c98f57e0c7ed18741bdc
0882ebbd13d73b00c41b4119000000000000000010987f58c1bfaa87df34711d3c771324a41066a07bd48e4f50a3d276c94f3ff6a55f556ab8de3b71bd03c0f09b1ef406000080d353adee983f6bda05d1b4b9c16d4c0c19465d0c635f44441289a4a4520b03dd1e000000000006c1af0548af1526d43a4629f8f0eebb899e
e6d7f5cdb6e311a40dcb28f20a0c8cea3e07d56bd517f7e572bd87c5f50e00c38fa00c00006340d737a554ba2586516f7b7c69a920ababeb83d8a45869361bf2f0e12dd9de7edcf6783a9d93d5d57502330000000080a1b4be7e8d01d453d2ef8a0fa31624e886576ba1713f36385d5cef00107f04658021d46c36a456db95
172ff6cd41ed83833f770c702b6a803693c989c8c9c02d0028d5ea8eeb0709e572514484b08c8fdbb7afb555e351aad51db979f33df9c31f7e94442239802d03000000008cb36cf62a2d3986845fc507f48ed73a8605d73b00c41f411960886c6d3d9272b9e81a8871a3066fd580772291946cf6aa643297491d03908d8d62
c763d3d3337278f846444efeed585e2e10f47051adee3886649466b3211b1bc58eb091619cb469aa544ee6add576a556db9566b321df7dd7ece3160300000000708260c1e9c96617fb7abcb3d9c5be2d3b0efc8e2d9593709ab8de0120fe08ca0043c430eaa143324e9acd866c6f3f96ededc7924824259f5f61101c18634e
210f1592516ab55daa51b95041172fb5da6edbefbdf62106000000002088b5b527beef41fbd17ec96f9058d7377dbfc0376a211ebffdedf50b8d61e70f720ee2c4ab82c728ede730e27aefc4f50e00f14750061871cd6643cae5a26c6d3d922fbe78c2403830861289a4349b8d416f06000000000018005ddf8c7c10d57f50
fc69a069bc8c5a85906c7631d273e017920a720ee2c42b6841f58d135eadd87a09aa70bd87c7f50e00c36f72d01b00e074349b0db97dfb5a47d50300a32f93f10fc8a5520ba7b025f114e44d26c70f000000003028410698d7d7af9d6a458720eb1ab50a1322de9f21f80505a2761ac7f7b4cea1df7a080804b3be7ead2fcb
e57aefc4f50e00c38fa00c30469acd86dcbcf91e95258031b3b454f07d9ed66cee52a905cf6a5c9a3627cbcbdec71800000000807e091a12585fbf26efbe9b083ca8bdbe7ecd731ebff57a0dcafb0dd8c735f8e055d944d737236fd5ec779ca258df30840168bb148c5f684e5dd7dde07aefc4f50e00f146eb2560cc349b0d
f9fcf3bc3c78f0c3a03705c02949a516646ded89944ab7c430eae6e3894452f2f915595d5d1fd4a6c5c6175f3c91870f6fc9f6f6e3b6c7d3e99cacaeae133402000000000cd4dada93c003e0d6e9ec83a2ee6d5b3adb7af8b702391928ce66af9a03cabafe34505027ae6d58820cf8ab6372327de740bb1a8c56c7e9bbef9a
aecbf23b07d6f5f9adcb6b3d6ed439b69f2fb5dca8dacfd0762938aff64b22ced7e5cfcfb50721ace795ebbd13d77bfb72a36e370500fd4650068891f9f98b72fdfa971d8fbf78b12f8651974ae57bd9db7beebb9cbdbde752adee78564800305a4ede205d955a6dd7ac2ac5bf01c12512492914eecbf5eb5f9a2dec34ed82
68dadc60370c00000000003979df1f262ca3046da5e1365d9075eafa66a8961d711d3457821e13eb7d2ffc82116a3d41a6711ae4ce66177de7f5dadf5e07ce47b51a49bf0409538884bf2ed5b2b9dedb71bd776e1f00c405411920466667df721cd8568fadaeae4badb62bc5e20ddfc04ca5e21c94a95677a456db35c33786
b1df568142e464c038955a104d9b93f3e72f483a9d93546ac1755dcd66432a951da954be975a6db763dbd4f232999c64b38b910c3cd76abb6dfbe2743ce6e72fcaecec5b924a2dc8ec6cd2b7bd8a9561d4a556db356f2227c7ce6b1d6a1f55e58966b321cf9e3d35977570f067d7f3363f7fd15cc6a54b8ba1aa57d46abb6d
eb308cbaebba346dce5c8fd3b9a8d57645d737c530f6cde52aea3cfe3cffe9fca7d8304e4262ea7c5bb749e4e77d4aa773a18f9da25ec327cbdf97838346e8f3dd2bc3f8793fbd5ed3e7cf5f104dbb20d9ec55f3ba348cba6c6d3dea98be5239d9074d9b937c7ec575ddfdda7fc3a88bae3f35af23c3a8774c934ee7daae4f
b54fd5ea8eb9fd4ef2f915cf7f4b0cc3f99828994caeeddf83adad470edbf7f3fac356e52995d67ca7f13b2f000000000058a92fc9443118eb647dfd5ac7a076d4eb54cb8bb3a88f89d371b75203f5bdaecfa96a90486ffb13c531f0ae2613efd74abf74139a0b82ebbd13d7bb7599fdf9db0300fd4250061831a9d482dcbd
bb251f7df46bc7416745d79f9ac11a5ddf34832541349b9d83e44b4b858e81e266b3211b1b45d9da7a6456b0f05a5eb5ba23a5d29aa4d339595e2e7455ed626beb9194cb45cf7d5754d0c0be2f2a6cb0bafaa539d0ae422dea380559bed33a1289a4fce10f3f4ab17823d47f1cf7f69ecbdede73d9de7e2ca5d29ae4f32bb2
bc5c700d2194cb45a95476029f53c530ea3f851736a5545a932b573e94e5e5cf646beb91e8fa53cffdb69e4791937d5d5d5defdb40bf61d46563e3ab8e56384ed319c6c93eddbbf789b94f5e210a6bb8ab97f32d22f2cd373ff614fe328c60fba9d6afb6a15c2e8aa6cd4936bb28994c4ecae5a2eb7ce974aee33ce9fa66df
f6df30ea522add0a740da865a9695578e4e0a0e1b94f994cce2728b3ef39bf487bc51d5ddff4bc9ec20665fcd6add64f50060000000010c6dada13d1f5cdbe0c92fb5595e975905455c51905511d9361595fd02a25a76d545e2f51ebb6c254105cef9db8de01209e2607bd0100a29748246569a9e0398d61d47f1aac5e9372
b9183a5061373bdb1ed8a85677e4fdf7df9172b9e819927152adeec8cd9bef49b17823f03c8651979b37df937bf73e093ca8ef666fefb9593545a9d576e5debd4f647bfb714fcb9f9d4d4a229134abd074a3d93c09087cfe79de7539dd84649c6c6f3f960f3e782770f8c8be9df7ee7d12ea3c06552e17e5830fde09141eb1
b3ee939b5a6d57d6d7aff57cbe1389644f21995269adebfd1451d7f9bedf648ea2d87f11e9d87fb54fddbe91338c7a4fd70f0000000000a32e9bbd2adf7dd78cbc5283d7f2d6d69ef434e8ddebfcc3e8b4f7a9d7f5f97d56d3edb27b19cca7c54bf7a2f877c0edf873bd77e27a0fb65c0018260465801175fefc05df69ba1d
4077626f5172f3e67ba1033276dbdb8fe5a38f7eedbb1c5ddf948f3efa7524c1907e536d6334cdfffcf8d9db7b2eebebd77a3ecefdb6bdfd38d2b04cb1782350db1abb73e7febaedf75269ad2f211e2baf96645e9acd86dcbcf95ea0aa237ebaa9cc1415ebbae3b04ff6d708000000000071b6b6f644befbae296b6b4fba1a
2c572d38accbf19b3ec8744edb38aaa107eb3109bb8fd6e3dfeff5056981d34df0a2d7d63ade6d9716bb5eee38e9f61a3b3977eec798ebbd13d77bfc5b6901182fb45e021009150850ed6da2b2b7f75c3eff3c2f0f1efce0f8bcaafc1117ea38a5520b91047b0ca32e0f1fde9242e17ecfcb8a9aa6cd99d548b6b71fcba54b
8b3d071c4aa5b5aeababbc7cf91711390943a89fb7b71fcbecec5ba1dbe604d56d50e6f6ed6b9105bf3299cb9186e2c2b0eeffe79fe7cdd65c0c70ea00001dda494441544cbdba74695136367a0fdcd89d3bf737e66b03000000008051611fbcd4f54dd1f5a72ed32e9af3f4b2beefbe6bbaae2b9b5dec69f96ad951897a79
4eace740853f9c8e8b9a7698d7a706f2bd961bc53ef855a638cd01f95e2a77f4f2fa8af2b569dd07b77f03ba39775cef9db8de01201e08ca00232a486b92743a17c960b30a3f1846bd2f153af6f69e4ba9b4d6116650152ae2e4e78a3273912d737bfbb12c2f7f16e932a36018f5b6b04cb17843bef9e6c7ae97a7eb9b9154
2379f9f22f6ddb552e1725955ae8cb7fe83399f0c1a052692db290ccfcfcc59ff675304119b5ffa5d25a642199743a278944d27f420000000000e0e834bff54f85814eea789ce639e8c7fafabd1f6e61ae7eae735cf4ebbae47aefc4f50e00c38ba00c30829acd866c6d3df29c26cc40b3a6cdb5b50ab20fe2abf047b17823
701ba0f9f98b323bfb96d46abb81e629978b92cd5e6dab50f1f0e1ad506d87d43a0d63df0c4944cd5a31c5693dea79a7d6588944b22d48d36c36e4c58bfd4001035d7f2a4b4b85d0dbabce6db7c7249dcec9c1c19f5db7d1fa3a338cbad46abb5d555969361ba14258ea38bb054e0ca3de5659a658bc21994cf80086dff90e
bbaf86510f150652af69b7f55fbad4df12b441f6df30a2dda76ec2470000000000008817da2e0100807e2228038c185ddf9452e9966fe82168f2f7ce9d6f1ddbe5d46abb52adee48a5b223994c4eaad59d40553096960ab2bc5c680b2454ab3bf2f0e12dc7b0c5f4f48c1c1ebe119193aa1477ee7c2b22278182202d78e6e7
2fcaf2f2678efb5b2aad4552a144e42430a0b6cdaad96c48a5b22395caf76da11e754caf5cf9503299cb9e218d6a75476edfbee6190a0a5241c8cae9bc1a465d6edffec03798b3b454907c7ea5a3824db95c945269adedb1bdbde7924824cd6daf5677ba0aca6c6c147d43518944525657d7259f5f697b7c6beb91dcbfff99
f93a52ac2d769acd866c6c1403b760f23bdfb5daae18c67ee8e0cdc6c657bed3b8eda7c8c939ac54be175ddf946a75a7e756576edcf65fe4e4df20ebfedfbeeddf1a4dd3e6ccd7959d61b4efd3a87c10721a655e010000000000e2687dddfbf324aa5a0000805e11940162e4e0e0cf1d6194172f4e2a2e18c6be542a3b812b
ac6432977bda96546a4152a905b38a49906a1f6ea19b743a2777ef6e49b178a3e39b02d67043b5ba63b6f3f1ab98237212422914eefb4ed74f8944d2b5e464d081f2743a2785c27dcf37886183324e346d4eeededd92f7df7fc7f37594c9e41cdb3c2d2d15e49ffee97fc89ffef47fdb1e4fa516ccd7ed8b17ddb500f22ab5
2a72729c1f3cf8c171bbf2f915c9642ecb3ffcc37f6d0bc788885cb8f05f647fff5fcd75040dca786d47b725460dc33ffc353f7f51eededd720de068da9ce4f32b92cfaf745dbda757d6fd378cba6f802e9dcec9175f3c09bc4fc3d6620c000000000000a787900c0000880241192046f6f69ecbcd9beff5bc9c743a17f91b
0aaf52982227a115afea16275532be745c8eb5aa8c6a3154a97cefb93e4d9b1b7848264a7ee7cb30ea91ac2791484a2693eb380fd673f0e2c5beebb97cfbed5f760465feeaaffea6a7ed3ca94ee23ddfeaeaba678042d3e6e4e38fffbbdcbbf749dbe3b3b3d1b4868a82df6b5a44e4faf52f0357a919d47e58f9059c44440a
85fbb1da27000000000000f497d767cd6b6b4f4e714b0000c0a82228038c19d5b6254ab5daae6f259be5e5cf7c97a3697372e5ca871d5535ac5565d4ba82b4078a0bc3a88bae3f955a6d575ebcd877dd376b0ba37ed2b40b1d8f59cf8161d45de7bd71e32bf9f8e3bf6f7bec3ffee3fff4b43d7e154954c5113ff9fc8a7cfd
f53fb65595f9977ff95f91b4868a825f55a0743ad7b7564afde2b74f57ae7c48851800000000000098bcaa6a534d0600004485a00c30660a85fb910701820419820e86a7520b9eed672a959d406d862e5d5a0cb4be41aa56776463a3e87bfc94d308c9f4cae9b5353bfb96f973372da282044882fabbbffb6f1dc7fb6fff36
25fff66fffbbebed8b8a61d43d9f8f633515bf565be7cf7786b200000000000030befc2a970300004481a00c30261289a4dcb9f36d5f06db0f0ebc031c61d6e9376d90b088a6cd056ee53228a5d29a94cbc5416f86a34c2617e9b64d4fcf983f7713f6f17b7d5983387e32995c4750e6e0e0cf81d7d54f7e81a94c265ed564
44c4b7f2531cc33f000000000000e81fafd64a5494010000512128038cb8442229f9fc8a2c2f1706161e716ae5e3268a81f330eb1b8462f18667d51c84132640423063b8703e0000000000006045180600009c068232c0084a249292cd5e95546a41f2f995416fcea9b356081936e57291900c000000000000000000000c08
41192046346d4eb2d945d7e7ce9fbf209a7641346dee7437cc47adb61b785abff63341f8b57b19a4adad4783de849153a9ec483a1dacaa4ca5d2fbeb0bd1a9d576039f3b000000000000000000200a04658018d1b40bb2baba3ee8cde8303bebddd2c930f6032febc50bef69356d2e50bb165ddf1cba329db5daae1846dd77
ba743a27a9d482ccce2625955a90838386d46abba2eb4f03cd3f6afc825f612a08394dfbf2e55fcc9ffd5ecbfd944ee73c8362710c9568da9ce76bf6c58bfdbeed53980015000000000000000000c6074119003df31b8c368cba54abc106ad757dd3f3f9546a411289a4cccf5ff4ac1cb3b5f568e882327ed5721289a4dcb9
f3ad6310289bbd1a3868336ace9fbfe0f9bcae6fcaf5eb5f4a22e11d7269361bf2cffffc4dc7e3fff99fffcffc394808ab5ffc423a612a330d8b546ac1f3351bc77d02000000000000000040bc4d0e7a0300c49f0aaf7879f6eca9ef726ab55ddf30890a326432973da7ab5677a458bce1bbced37470d0f07c3e9f5f196850
6358f905ac9acd46a09656cf9e3d95c3c3378ef3075d573ff99d7b5ddf8c5db044d3bc434edbdb8fbbde27bf4a43baeeff6f4e3f0579dd020000000000000000e0f41194011009bfea2ddbdb8f3dc30ccd662350b0259b5d0cb43eb5ce0f3e7847cae5a254ab3be6ad545a938f3efab594cb45df6560f052a905df50c4c646
d1337051abedcad75fff63c7e3c9e4dbe6cf41db7af54b90904eb178237055a1a001a27e0a729d168b370287469acd8679ddfa551a328cba6f85aa41aa54bc4381eadf2b000000000000000000448bd64b002271e9d2a26c6f3ff69ce6debd4fa45add91a5a582194868361bf2ecd9532995d67c07cbd3e99c199848a516e4
ca950f7dd76918752995d682ee465ff9853db6b61e89a6cd493ebf723a1b1423d9eca267b0a9d96cc8c71fffbd2c2d15249f5f318fb561d4656beb91ebbc8dc69fdad63148a9d482a4d339cf70c4dede73f9e8a35f4b3ebfd2b69f56babe2995caf7a2eb9bd26c36061afe09ba4fefbfff8e2c2f17249b5decd8a766b32195
ca4edb3e65b38b924ee72491487afebbb1be7e4d96960a92cd5eed380e7e159e7ae51feefaaa2304661875d1f5a7f2ecd953d9db7b2ed9ecd5815639020000000000000000184504650044229dce49367bd5b78283ae6f8aae6f4a2291144d9b93bdbde781d75128dc6ffb7d79f93373e03c0efc020bcd6643eeddfb44eedd
fb44e6e72fcaecec5b6dcfc7aded4e945657d745d79ffa565329978b522e17db82326ea6a767cc564c9a3627cbcb8508b6b437cbcb05df2a22aaaa8a0affcccf5f141171bd960ca32eb3b3deadd1fa29e83e954a6b66a8cd7f9ff645d3e6249bbdea1b96b31eabd3e457f1666fefb97cf0c13b9ed30c73451c000000000000
000080b8a2f51280c8acae7e298944b001f966b3112a24b3b454e8a8d0a069731de1996116a48590b2b7f7bcad5d54b5ba139b4050bfacae7e19785ac3a87b8664ce9dfb6b3324a3961df4b5db4fe9744eae5cf930d43c7b7bcf3dafa54107acfab14faa6dd1f2f2673d6d5b3f4555a188f64b000000000000000000d12228
032032fd0aaecccf5f94d5d575c7e7b2d9abf2e9a7bf8f7c9dfd1226ec8176d9ec55595a8aa6eacbcb977f317f56ad798645a170dfaca812854107654444ae5fff32d27d328c7d1139f93727aad744d4346d2e744048999e9e317f56a1200000000000000000004483a00c8048451d5c999fbf2877ef6e794e93cfafc8d75f
ffcf4807e2fb259bbddaf5e0795cfdfbbfff6b64cb5a5d5d8ff4f85db9f2a16b086b90eededd92743a17c9b254a86490128964a4fbf4e2c5cffbb4baba1ed9b5df68fc2992e528d7aff75ea96818824e000000000000000000a384a00c80c8a9e04ad036436e96960af2e0c10f81069a53a90579f0e007f9f4d3df0f7d60a6
50b83fb45530fa21ea965185c27df9f4d3dff71440482492f2e9a7bf1fdad65d894452eedcf93692d78961d47b5e4614a2dc277b5ba6070f7e18ca009adae7b0af556b5b305a2f010000000000000000446b7ad01b006034a5520bf2cd373f4aa9b4265b5b8f428525d2e99c140af7bb0adae4f32b92cfaf48b3d9905a6dd7
b16d492ab520a9d482dcbc99f70c114455fdc2c9eaeaba643239d9d828463210de6b28296ef2f915b97469511e3ebc25dbdb8f43cd7be5ca879154fa380dababeb92cfafc8c6c657a1f753e4e47591cfaff461cbba17c53e39856d0a85fb72e9d2a2148b377a0a0769da9ca4d339c964a2b9fe5588af54ba25babe196ade2b
573e944b971623d90e0000000000000000009c98383e3e1ef43600a7aed56a1d8b88fcee77bf933b77ee8888c89d3bdff63518118461d43ddba424124949a516225d67adb6eb196249a516220914e8faa6d46abb52abed8a61ecb70d64a7d339999d3dd9b76c763154e8636beb91643297430745cae5a2944a6baecfcfcf5f
94070f7e307f57c11b37bd9c9b66b321cf9e3d15c3a89bebb08667acaf4b4d9b93d9d9b744442493c9b9aeb797f3eab7af9a76c1f378fb057fa2beced4f13b796dd53bf63d9dce89a6cd492ab520972e2d067a3df7f37c77abd96c48a5b2635e47223f1f6bebf6a4520b323b9b94743a673ed6cdfe789dc7a8f63fcc3ea973
1864bdb5daae54ab27cb3d3868b4bd26accb9d9d4d9aafe7f3e72f785e177ed75490d775adb62bbabe2986b1dfb15d6afe546a413299dcc0ff1e7979f7dd848888689a26bffded6f656262c2bc4d4e4e9ab7a9a929999e9e96e9e969999999919999193973e68c9c3d7bd6bc9d3b77aeed667deeecd9b372e6cc19733eb52c
b56cebba2626264444646a6a6a6290c70600000000d4e78ed3d327df514da77372e7ceb703dd260000865da9b426e5725144447ef39bdfc82f7ff94b3e7704d0575494018688a6cd9d7a6590d31aeccf66af4a367b35f2e596cb45b977ef13999fbf2899cc65c964729e83dd865197adad47b2b5f5c873b999cce5b6df1389
64df06ae138964e4553f7a39afbdeeeb690ff0f7e3f8f5f37c772b9148767d1d75b33fa7b1ffbdec9397a0819ab0cb8c6219a71db0020000000000000000403b82320062cb30ea66659abdbde7b2b7f7dc4c1c8b740ef4876971c46036000000000000000000008c1e82320062cbab958c48b8608c55bfaadf000000000000
0000000000066b72d01b0000ddf20bca742391484aa1703ff2e50200000000000000000000068fa00c80d8ea4750a650b82f894432f2e50200000000000000000000068fd64b0062abdbd64a4e346d4e0a85fb924ee7225b260000000000000000000060b8109401104bcd664396960a52a97c2f7b7bcfbb5e4e3a9d936cf6
aae4f32b116e1d000000000000000000006018119401104b8944525657d76575755d9acd86d46abb52a9ec8861eccbc141430c635f0ca3de368fa6cd89a65d90546a41666793924ee724955a18c4e603000000000000000000000680a00c80d84b244e422fb44d020000000000000000000078991cf4060000000000000000
00000010b5898989b61b008810940100000000000000000000c48c3d04e37403002704650000000000000000000000031724fc42080640af08ca000000000000000000000062c12f3413e471f59cfd1ec078981ef4060000000000000000308a0c635f4aa5b5416f06000043ad56db6dfbbd9b4a3261433300c61b41190000
000000000000fac030ea522e1707bd190000c44698d64bbdb667223c038c2f82320000000000000000000080819b9c9c94c9c9c9b6b08b7accebe61692f10bd17413b001107f0465000000000000000088d01ffff8471111393e3e96a3a323f3bed56a99f7878787f2e6cd1bf35edd5ebf7e6ddeab9fd5edf0f0d0bcb55a2d
7379ea767c7cdc710300204ede7efbedc8abca78b56b02309e08ca000000000000000010a177df7dd70caaa8108b0ab6b45a2d33f4a2c230af5ebd9257af5ec9cb972f1d7f7ef5ea554770266860c68ae00c006018d9032bf6908bb572ccd4d454a06a32bdb6650230da08ca00000000000000001001fba05b98608ad3a060
9076136a1dd67909ca0000e2244c50a6db364c0463005811940100000000000000a00f827ea3dd6da04f7d6b7e6a6acabcd9abc638ad87a00c00204ec2569471bb751ba02150038c1f823200000000000000009c223508671fb4730bc8581fb70665d4b2ac6d9768bd0400889b20411975affe364e4f4fb7dddc02336ecb02
30de08ca0000000000000000708a825693b10e063a0560d432dc42320465000071e0149451f75e4119fbdfca20d565a81c034084a00c000000000000000091532d90c2b45f726b25610fcaa8e5ab413f8232008038eb262833333323d3d3d332333323333333beed9882fe3da60d13301e08ca0000000000000000d0675e01
19a74a322a1ca3c22f4747476dcb9a9c9c9456ab25ad568ba00c0020d67aa928a35a2fa9c08c5f2b26aacb001021280300000000000000405f05a924d36ab51cabc8a8f08b5a8e88b485645450468569bc8232d6b00d0000c3627272b2ed776b55366b48c62954aa42324e3fdb8332535353548f0120220465000000000000
00008884db37e2ad4117af4a324747476d6d96ac2119ebfcd6904c98a00c00007160af28e316945161196b1b261592095a5986e00c309e08ca00000060e078130a000000609459dfeb780dfaa90a32d3d3d36d4117fbf4f6a08c5b4886d64b008038f06bbde4d67ec95a55c6da7ec9af05139f4302202803000080bef2fa56
066f48010000008c137be0e5f8f8d81cf0b3875decf3d8db3459abc9385594112118030088276b5046dd3b5562534119b7364c6e2d98bc2ac900180f0465000000105a90f00b6f2e01000000a09d3df4727c7c6c8664dc022e5e2119afb64bf6e5000010176e41196b60c61e94b15797b13f6e0dcb04fdfc92cf3681d14550
06f8c9cd9bef0d7a13000018297ea199208f3bbd29060000008061e5d63ac2fab33d2863af2a636fb7e4d6724955922128030018256e7f3b9d82324e6d98dc0233f68a345e5565f8022030fa08ca000000a02bddbc910c1b9a0100000080389b9898680bbea87b6bdb255555c63e9f35247378786806658e8e8e3a5a2e5983
322242500600106b4e61196b50666262a22dfc620dcb380566accf5943324e811900e381a00cc6daaf7ef52bb97cf9b288b4bf79b4dfacdfcab0df5aad96e3737edfe2b0be49e50d2b00206e7ef18b5f846abfd4cbb73378830a00000020cedcaacc58c33276d6413b7b35996e3f830400200edcfe6e3a5595b1b626b40661
eced96dc4232046480f135c17f94318e5aadd6b18874846154f0a5d56ac9e1e1a1bc79f3460e0f0fe5f5ebd7f2faf56b79f5ea95bc7af54a5ebe7c69deab9fadb7d7af5fcb9b376fccf90f0f0f5ddfc85adfc02a5c97008061e4d722c95ab6d4fa8d8d999919999999913367cec8993367e4ecd9b372f6ec593977ee9c9c3b
77cefc593d7ef6ec59735a35efcccc4cc71b5aeb9b591191a9a929ded10200000018a863870ff6c27e294f7d31cfda66c95e49c6292043500600300a820465ac377b6519b7e08c53eb25af8a32b69ff9dc1118315494013c78b58d50f7f69fa3faf63c0000c3c62f28d3afca32fccd040000001047d6b64bea77ebbd532519
f5fcd1d191f9b31ac453e119af900c41190040dc790565ec5fdab35797710bcdd06e09801d4119c0855700c6feb8532954fbcdad720c156500007111b6a28cd7373308960200000018176e037e229d6119fbfb215569666a6a4a5aad964c4d4d05ae2663ff19008038f00acaa87b7b50c6edf349159e719bde3eee07607c10
94c158b2ffb10bf386d12fb1ea1594b1cf4f5006001027618232416e0463000000008c1aeb7b1ab7cff89cde5ba9c08cfd33c4c9c949331463fd325e906a3200008c02b7a08cd397d9ed9f51fa0564bc2a5cf3392530da08ca0012bc7584db409f53cf43f56d0feb9b54fbf208ca0000e2246c4519b75bb7011a0235000000
00e2c6efbd8b7afef8f8d8fcbcd07eaf02324e5564d4bc4e9f312a7cd608008813aff08abaf71bcb730bd0385591a1a20c309e08ca001ed41f45b734aa3d20637ddc1a9451cb528fd943340465000071102428a3eed5dfc6e9e9e9b69b5b60c66d590000000010672af06265ffdd5e29c63a9ff571a78a32d6f5109401008c
8220411975ef147c09fa453caf7501187d0465000f41abc95807039d02306a196e2119823200803870fb70d72f2863ff5b19a4ba0c9563000000008c02aff7344eefb19caac438b5552228030018556183324e8f790563f8cc1180084119a0ad9469d0f64b6ead24ec4119b57c35e8475006001067dd0465666666647a7a5a
666666646666c6b71d53d0bfc7b4610200000030ecacef55ac9f41fa519563443adb2a790565dcf0592300204e82864cbd82327ecf3b5594e1334660bc1094016cbc02324e9564543846855f8e8e8eda9635393929ad564b5aad1641190040acf5525146b55e528119bf564c54970100000030ea9cdee358db2d89886348c6
feb8fd39000046955bb0254850c6fea57900e38da00c6011a4924cabd572ac22a3c22f6a3922d2169251411915a6f10aca58c33600000c8bc9c9c9b6dfad6f30ad2119a750a90ac938fd6c0fca4c4d4d513d06000000c04873fb2282d7b45e5fb6a3a20c00605484695be8f45cd0ea3200c61b41198c25b737a2d6a08b5725
99a3a3a3b6364bd6908c757e6b48264c5006008038702a59ea14945161196b1b261592095a5986e00c000000807112e57b1dde3701004645d8a08cdf3c00c6174119c0c2295dea34e8a72ac84c4f4fb7055decd3db83326e21195a2f0100e2c0aff5925bfb256b55196bfb25bf164c8461000000008c12dedb0000d09b2882
32fc3d062042500670640fbc1c1f1f9b037ef6b08b7d1e7b9b266b3519a78a322204630000f1e4f4a6d3a9129b0acab8b561726bc1e4554906000000008654e8372c0ce001000000a78ba00ce0c01e7a393e3e3643326e0117af908c57db25fb720000880bb7a08c3530630fcad8abcbd81fb78665828663f8101900000000
000000000445500663c9eb5b1af636122a2863af2a636fb7e4d6724955922128030018256e7f3b9d82324e6d98dc0233f68a345e5565a82e030000000000000000c2222803c8c9c09e35f8a2eead6d97545519fb7cd690cce1e1a11994393a3aea68b9640dca880841190040ac398565ac4199898989b6f08b352ce31498b1
3e670dc9380566000000000000000000ba415006f8895b95196b58c6ce3a6867af2613a6920c41190040dcb8fddd74aa2a636d4d680dc2d8db2db9856408c8000000000000000080a81094c158b207539c06deec037e4eec03816ad04f05659c023204650000a3204850c67ab35796710bce046dbb040000000000000000d0
0d8232187bd6b64bea77ebbd5b48666262428e8e8ecc9fd580def1f1b1b45a2dcf900c41190040dc790565ecad09edd565dc4233b45b020000000000000000fd465006f889db809f486758c63e08a85a2ca96a3253535381abc9d87f0600200ebc8232eade1e94b1b72b540119159e719bde1a942130030000000000000000
7a41500663c93ac8e61652711a00548119358f75c04f8562545519af9bd77a01008823b7a08c3d30e31496f10bc8b88563a834030000000000000000c222280388ffb7d3d5f3c7c7c766ab26fbbd0ac838559151f35a7fb7233803008813aff08abaf7bab905639cda2d51510600000000000000004485a00c203f0760acec
bfdb2bc558e7b33eee5451c6ba1e8232008051102428a3ee9d822f6e956368b7040000000000000000fa89a00c20de03704e011aa72a314e6d9508ca00004655d8a08cd3635ec118da2a0100000000000000807e202883b1671d84b3b653f2a32ac78874b655f20acab8212803008893a02153afa08cdff34e156508cf0000
000000000000805e1094017c380dc859db2d89886348c6feb8fd39000046955bb0254850460556a928030000000000000000fa81a00ce0c1a9ed92dfb4f6300c15650000a3284cdb42a7e782569701000000000000000088124119a007510ee23120080018156183327ef30000000000000000004485a00c60c3401d0000bd
892228c3df630000000000000000d00f13b47b010000000000000000000000c038981cf40600000000000000000000000000a781a00c000000000000000000000000c60241190000000000000000000000008c85ff0f159a7ead65bdf6790000000049454e44ae426082}
 \par
\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_model_checking}1.2{\*\bkmkend BMfig_model_checking}: Model checking 
[{\field{\*\fldinst{\lang1024 REF BIB_clarke2008birth \\* MERGEFORMAT }}{\fldrslt{8}}}
]}{\field{\*\fldinst TC "1.2 Model checking 
[{\field{\*\fldinst{\lang1024 REF BIB_clarke2008birth \\* MERGEFORMAT }}{\fldrslt{8}}}
]" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 Model checking {\i statically analyses} the implementation and asserts on the properties of the logic. {fig:model:checking} shows the block diagram of model checking. A model checker reads program or circuit logic, converts it into a formula and compares it with the specification. Model checker matches the logic and the specification, and tells the implementation is incorrect if the logic differs from specification. Model checking is used to detect undesired behaviours of the system.\par
\pard\qj\sl240\slmult1 \fi300 Software model checking is complex since it operates based on information available statically, without running the programs and programs contain code segments controlled by dynamic conditions 
[{\field{\*\fldinst{\lang1024 REF BIB_godefroid2005software \\* MERGEFORMAT }}{\fldrslt{18}}}
]. Software model checking also has to cope up with loops which are bounded with run-time conditions, for instance, while loop in function {{\field{\*\fldinst{ EQ {{\i g}{\i r}{\i e}{\i a}{\i t}{\i e}{\i s}{\i t}_{\i c}{\i o}{\i m}{\i m}{\i o}{\i n}_{\i d}{\i i}{\i v}{\i i}{\i s}{\i o}{\i r}}}}{\fldrslt }}} ({fig:example:test:coverage:code}) is bounded by values of x and y. The dynamically bounded programs can be verified using {\i Bounded Model Checking (BMC)}, which considers a static bound on loops 
[{\field{\*\fldinst{\lang1024 REF BIB_biere2003bounded \\* MERGEFORMAT }}{\fldrslt{3}}}
].\par
{\i \pard\qj\sl240\slmult1 \fi300 CBMC} is a Bounded Model Checking tool which can process C and C++ programs and verify different properties 
[{\field{\*\fldinst{\lang1024 REF BIB_website_cprover_cbmc \\* MERGEFORMAT }}{\fldrslt{27}}}, {\field{\*\fldinst{\lang1024 REF BIB_clarke2006ansi \\* MERGEFORMAT }}{\fldrslt{10}}}, {\field{\*\fldinst{\lang1024 REF BIB_Clarke04atool \\* MERGEFORMAT }}{\fldrslt{11}}}
]. It converts the programs into intermediate forms which are called {\i goto-programs}{\xe{\v goto-program}}. The goto-programs are simplified C and C++ programs, represented in the form of Control Flow Graphs (CFG){\xe{\v CFG}}. In goto-programs, the variables are renamed so that each variable is assigned only once, the transformation is called {\i Static Single Assignment} (SSA){\xe{\v SSA}} 
[{\field{\*\fldinst{\lang1024 REF BIB_Clarke04atool \\* MERGEFORMAT }}{\fldrslt{11}}}
]. CBMC also supports pointers, arrays, structures, floating point operations and function pointers. CBMC handles loops by bounding the number of iterations each loop can be executed and unrolling each loop according to the bound. We will present CBMC with more details in later chapters.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 1.0.1  Contributions\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The thesis work presents a study done to develop a model checking tool for Ericsson\rquote s real time DSP multicore platform. The platform uses DSP-C as its programming language. DSP-C extends the ISO C programming language with key features of Digital Signal Processing{\xe{\v DSP}} (DSP) that enable efficient source code compilation 
[{\field{\*\fldinst{\lang1024 REF BIB_website_dspc \\* MERGEFORMAT }}{\fldrslt{16}}}
]. DSP-C adds the following features to ISO C: {\par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab Fixed point arithmetic operations and data types \par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab Divided memory spaces \par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab Circular arrays and pointers \par
}\pard\qj\sl240\slmult1 \sb60 \fi0 We will cover more about DSP-C in later chapters. Ericsson uses contract{\xe{\v Contracts}} based programing, which helps large teams working together on same software. It allows programmers to define the contracts for each module and/or functions. This style of programming provides a framework where module integration is less error-prone since each developer states the requirements for their modules in the contracts 
[{\field{\*\fldinst{\lang1024 REF BIB_Meyer_1992_ADC_618974_619797 \\* MERGEFORMAT }}{\fldrslt{30}}}
]. With this thesis we are providing a verifier to check validity of contracts among the function and/or modules.\par
\pard\qj\sl240\slmult1 \fi300 We developed techniques to handle Ericsson\rquote s parallel software running on multicore DSP platform. The major challenge with the parallel/concurrent software verification includes state space explosion due to several control flow paths of parallel programs. Software architecture used in our case study does not pose state-space explosion issue since the software is statically scheduled and software does not share much data between threads and threads run independent of other threads. We also identified some of the platform features which can be verified using model checking and proposed model checking techniques. \par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 1.0.2  Structure of the thesis report\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 In second chapter we will cover the features of DSP-C, programming model of Ericsson, satisfiability (SAT) solvers, introduce CBMC and discuss about platform specific properties. Third chapter describe the related work in verification. Fourth chapter describe the multicore hardware models and Ericsson\rquote s multicore platform. Fourth chapter briefly covers the extensions developed for CBMC to work with Ericsson\rquote s software and API stubs to handle platform API calls. In fifth chapter we will discuss about results of model checking, alternative approaches, conclusion. The last chapter is dedicated to propose possible future work.\par
\page{}\pard\qj\sl240\slmult1 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter {\*\bkmkstart BMchap_background}2{\*\bkmkend BMchap_background}\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Background\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 This chapter introduces the tools and techniques used in this thesis. We will briefly describe all the feature of DSP-C in first section. Second section concentrates on contract based programming. Third section explains satisfiability (SAT) techniques. Fourth section describe features and architectures of CBMC.\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 {\*\bkmkstart BMsec_back_dspc}2.1{\*\bkmkend BMsec_back_dspc}  DSP-C\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 DSP-C}}\par
\pard\qj\sl240\slmult1 \fi300 As the name suggests DSP-C is a programming language extension proposed by a private company, Associated Compiler Experts (ACE). It is an extension to ISO/IEC IS 9899:1900 (ISO C) standard to support the hardware features of Digital Signal Processors (DSP\rquote s) 
[{\field{\*\fldinst{\lang1024 REF BIB_website_dspc_specification \\* MERGEFORMAT }}{\fldrslt{37}}}
]. These extensions are proposed to overcome the standard C language\rquote s inability to handle divided memory spaces, circular buffers, dedicated register sets, fixed point data-types and fixed point arithmetic 
[{\field{\*\fldinst{\lang1024 REF BIB_dspcbenifits \\* MERGEFORMAT }}{\fldrslt{36}}}
].\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 2.1.1  Fixed point\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Computing machines like calculators, computers or embedded controllers represent all the numbers in binary. Integers can be directly mapped to finite bit stream of binary digits. The common way to represent fractions is using {\i floating points} or {\i fixed point}. Floating point arithmetic supports wider range of values as it has "floating" decimal point. The number is represented using {\i significant} and {\i exponent}. 
[{\field{\*\fldinst{\lang1024 REF BIB_overton2001numerical \\* MERGEFORMAT }}{\fldrslt{32}}}
] presents the various advantages and disadvantage of floating point numbers. Commonly embedded systems do not support floating point values since floating point arithmetic require large logic, needs more computation time and energy 
[{\field{\*\fldinst{\lang1024 REF BIB_tiwari1995power \\* MERGEFORMAT }}{\fldrslt{39}}}
]. Common alternative is to use fixed point values. Fixed point use fixed number of digits after decimal point. Fixed point values are stored similar to integer values and the decimal position is known since its constant.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 2.1.2  Fixed point data type\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Programmers can use fixed point data types as easily as any other data types in C language, to describe fixed point arithmetic operations. Explicit support for fixed point types in programming language will allow compiler developers to design fixed point specific optimisations in compilers 
[{\field{\*\fldinst{\lang1024 REF BIB_dspcbenifits \\* MERGEFORMAT }}{\fldrslt{36}}}
]. It also provides a standardised mechanism to define and use fixed point data types.\par
\pard\qj\sl240\slmult1 \fi300 DSP-C defines the following fixed point data types:\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 \'CC\'A3__fixed types\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 __fixed}}{\xe{\v __fixed}} Signed __fixed and unsigned __fixed types will have a mantissa value. A __fixed object represents values in the range of [-1.0, +1.0]. Number of bits used to store a __fixed is platform specific. For example, a platform specific variant of __fixed type is defined in {tab:fixedtypeexample}. Similarly, a platform may define short __fixed to be 16 bits.\par
{\pard\qj\sl240\slmult1 \sb240 \fi0  \par
{\pard\qc\sl240\slmult1 \fi0 \par
\trowd\clbrdrl\brdrs\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {{\b Type}}\cell
\pard\intbl\ql {{\b Size in bits}}\cell
\pard\intbl\ql {{\b Value range}}\cell
\pard\intbl\ql {{\b Step size (least value greater than 0)}}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {short __fixed}\cell
\pard\intbl\ql {8}\cell
\pard\intbl\ql {-1.0r to 0.9921875r}\cell
\pard\intbl\ql {0.0078125r}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {unsigned short __fixed}\cell
\pard\intbl\ql {7}\cell
\pard\intbl\ql {0.0ur to 0.9921875r}\cell
\pard\intbl\ql {0.0078215ur}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {__fixed}\cell
\pard\intbl\ql {16}\cell
\pard\intbl\ql {-1.0r to 0.99996928..r}\cell
\pard\intbl\ql {0.000030..r}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {unsigned __fixed}\cell
\pard\intbl\ql {15}\cell
\pard\intbl\ql {0.0r to 0.99996928..ur}\cell
\pard\intbl\ql {0.000030..ur}\cell
\row
} \par
\pard\qc\sl240\slmult1 \fi0 {Table {\*\bkmkstart BMtab_fixedtypeexample}2.1{\*\bkmkend BMtab_fixedtypeexample}: A platform specific definition of __fixed types}{\field{\*\fldinst TC "2.1 A platform specific definition of __fixed types" \\f t}{\fldrslt }}\par
\pard\qc\sl240\slmult1 \fi0 [NOTE: Succeeding \lquote r\rquote  and \lquote ur\rquote  in above value ranges represents a __fixed type signed and unsigned constants, respectively.]  \par
}\pard\qj\sl240\slmult1 \sb360 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 \'CC\'A3__accum types\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 __accum}} The __accum type is similar to __fixed type with extra 8bits bits to store value before decimal point. For example __accum can store 3.142, but __fixed can only store values between [-1, +1], like 0.142. The DSP-C specification 
[{\field{\*\fldinst{\lang1024 REF BIB_website_dspc_specification \\* MERGEFORMAT }}{\fldrslt{37}}}
] defines that \ldblquote __accum type shall have the same scaling factors as the corresponding __fixed types, with an extension of 8 bits, an __accum value can represent value between [-256.0 to +256.0]". For example, a platform specific variant of __accum type is defined in {tab:accumtypeexample}.\par
{\pard\qj\sl240\slmult1 \sb240 \fi0  \par
{\pard\qc\sl240\slmult1 \fi0 \par
\trowd\clbrdrl\brdrs\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrt\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {{\b Type}}\cell
\pard\intbl\ql {{\b Size in bits}}\cell
\pard\intbl\ql {{\b Value range}}\cell
\pard\intbl\ql {{\b Step size (least value greater than 0)}}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {short __accum}\cell
\pard\intbl\ql {16}\cell
\pard\intbl\ql {-256.0a to 255.9921875a}\cell
\pard\intbl\ql {0.0078125a}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {unsigned short __fixed}\cell
\pard\intbl\ql {15}\cell
\pard\intbl\ql {0.0ua to 511.9921875ua}\cell
\pard\intbl\ql {0.0078215ua}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {__fixed}\cell
\pard\intbl\ql {24}\cell
\pard\intbl\ql {-256.0a to 255.99996928..a}\cell
\pard\intbl\ql {0.000030..a}\cell
\row
\trowd\clbrdrl\brdrs\clbrdrb\brdrs\clbrdrr\brdrs\cellx1725\clbrdrb\brdrs\clbrdrr\brdrs\cellx3450\clbrdrb\brdrs\clbrdrr\brdrs\cellx5175\clbrdrb\brdrs\clbrdrr\brdrs\cellx6900
\pard\intbl\ql {unsigned __fixed}\cell
\pard\intbl\ql {23}\cell
\pard\intbl\ql {0.0r to 511.99996928..ua}\cell
\pard\intbl\ql {0.000030..ua}\cell
\row
} \par
\pard\qc\sl240\slmult1 \fi0 {Table {\*\bkmkstart BMtab_accumtypeexample}2.2{\*\bkmkend BMtab_accumtypeexample}: A platform specific definition of __accum types}{\field{\*\fldinst TC "2.2 A platform specific definition of __accum types" \\f t}{\fldrslt }}\par
\pard\qc\sl240\slmult1 \fi0 [NOTE: Succeeding \lquote a\rquote  and \lquote ua\rquote  in above value ranges represents a __accum type signed and unsigned constants, respectively.]  \par
}\pard\qj\sl240\slmult1 \sb360 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 Operations on new data types\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 __sat}} DSP-C also defines operations and behaviours of all the operations on data types. It supports all standard C operations on new data types, such as arithmetic operations, logical operations, relational operations and a special qualifier. A special qualifier is __sat, which is only applicable to the __fixed type, makes a __fixed into __sat a qualified value, which is used during the expression evaluation phase 
[{\field{\*\fldinst{\lang1024 REF BIB_website_dspc_specification \\* MERGEFORMAT }}{\fldrslt{37}}}
]. The sat qualifier adds a saturation operation to expressions. The saturation operation returns same value if the value is less than maximum storable value in __fixed type, otherwise it returns maximum storable value. This operation avoids over flow conditions.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 {\*\bkmkstart BMsec_memory_lable}2.1.3{\*\bkmkend BMsec_memory_lable}  Divided memory spaces\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 DSP-C allows programmers to provide distributed memory views to compilers. Since memories in DSP\rquote s can be physically located in different places, providing divided memory view to developer gives them flexibility to decide on memory location for each variable. This is achieved through memory labelling. When a variable is defined, the label on definition tells compiler which memory will hold a particular variable.\par
{\b \pard\qj\sl240\slmult1 \fi300 Example} {\par
\pard\qj\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{lstlisting\} ... \\end\{lstlisting\}}]\par
}\pard\qj\sl240\slmult1 \fi300 In above example, variable {{{\i a}}} and {{{\i b}}} may be allocated in different memory regions, which can be in different physical memory. For instance, memory label {{\field{\*\fldinst{ EQ {__{\i X}}}}{\fldrslt }}} will inform compiler that variable will be allocated in memory bank X and {{\field{\*\fldinst{ EQ {__{\i Y}}}}{\fldrslt }}} will inform that variable will be allocated in memory bank Y.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 2.1.4  Dedicated register sets\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 DPS\rquote s normally have register set for dedicated operations. DSP-C provides register labelling to directly access these register set. The programmers can define variables with register labels, similar to memory labels, and force compilers to allocate a variable into particular register.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 2.1.5  Circular buffers\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 __circ}} DSP-C allows arrays to be defined and used as circular buffers. DSP-C defines new data type (__circ) to make a simple array into a circular buffer. For example in {fig:example:circular:buffer}, \ldblquote arr[1] = 1;" will copy 1 in array index 1 and \ldblquote arr[12] = 2;" will copy 2 in index 2.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners] {\par
\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_circular_buffer}2.1{\*\bkmkend BMfig_example_circular_buffer}: An example of circular buffer}{\field{\*\fldinst TC "2.1 An example of circular buffer" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb480 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 {\*\bkmkstart BMsec_back_contact_prog}2.2{\*\bkmkend BMsec_back_contact_prog}  Contract programming\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The contract programming is a technique, in which the developer states specific requirements for software components. A software component can be function or a module. Contracts define rules on how a component should be used. The contracts contain prerequisites before using the component and define outcomes after using component. A component user has to satisfy all the prerequisites of component being used and agree on possible outcomes, to use the component. For instance contracts of function {{{\i f}}} can have precondition {{{\i p}{\i r}{\i e}}} and postcondition {{{\i p}{\i o}{\i s}{\i t}}}. Contracts of function {{{\i f}}} are satisfied if the function {{{\i f}}} is invoked in state satisfying {{{\i p}{\i r}{\i e}}} and either {{{\i f}}} does not terminate, or in final state of executing {{{\i f}}}, the post-condition {{{\i p}{\i o}{\i s}{\i t}}} holds. These contracts help developers to write code under a safety net and components with contracts tend to be less error prone. 
[{\field{\*\fldinst{\lang1024 REF BIB_Meyer_1992_ADC_618974_619797 \\* MERGEFORMAT }}{\fldrslt{30}}}
]\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_contract_programming}2.2{\*\bkmkend BMfig_example_contract_programming}: An example of contract programming}{\field{\*\fldinst TC "2.2 An example of contract programming" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 In the example {fig:example:contract:programming}, precondition checks if the pointer is a NULL pointer and post condition checks if the memory address reaches its max value.\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 {\*\bkmkstart BMsec_sat_solver}2.3{\*\bkmkend BMsec_sat_solver}  Satisfiability (SAT)\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 SAT}}{\xe{\v Satisfiability}} Satisfiability (SAT) has been hot research topic, since SAT has shown high potential in verifying large systems 
[{\field{\*\fldinst{\lang1024 REF BIB_moskewicz2001chaff \\* MERGEFORMAT }}{\fldrslt{31}}}
]. SAT solvers work using satisfiability procedures in the core for propositional logic 
[{\field{\*\fldinst{\lang1024 REF BIB_DeMoura_2011_SMT_1995376_1995394 \\* MERGEFORMAT }}{\fldrslt{14}}}
]. Propositional logic is predicate in which formula contains Boolean variables, known as atoms, and variables are connected using logical directives like conjunction, disjunction and negation. If {{{\i z}}} is Boolean variable and, {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 1})}}}{\fldrslt }}} and {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 2})}}}{\fldrslt }}} are expressions built from Boolean variables, then we can define following formulas.\par
{\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {{{\i z}}} is a Boolean variable and can be evaluated to 0 or 1. \par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 1})}}}{\fldrslt }}} is expression containing Boolean variables. \par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {{\field{\*\fldinst{ EQ {{\f6\u-3880\'D8}{\i e}{\i x}{\i p}\\s\\do5({\fs16 1})}}}{\fldrslt }}} is expression containing negation on {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 1})}}}{\fldrslt }}}. \par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 1})}}}{\fldrslt }}} {{{\f6\'DA}}} {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 2})}}}{\fldrslt }}} is a disjunctive expression on two expressions. \par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 1})}}}{\fldrslt }}} {{{\f6\'D9}}} {{\field{\*\fldinst{ EQ {{\i e}{\i x}{\i p}\\s\\do5({\fs16 2})}}}{\fldrslt }}} is a conjunctive expression on two expressions. \par
}{{({\f6\'D8}{\i X}{\f6\'DA}{\i Y}){\f6\'D9}({\i Y}{\f6\'D9}{\i Z}))}} from {fig:example:statemachine}, is an example for formula constructed from above rules. And the formula can be evaluated to 0 or 1 based the values of all the variables. For example with {{{\i X}=1}}, {{{\i Y}=0}} and {{{\i Z}=0}} assignment formula is evaluated to 0, and {{{\i X}=0,{\i Y}=1}} and {{{\i Z}=1}} assignment formula is evaluated to 1. This example illustrates, variables can be constrained through operators, for instance for formula to be 1, {{{\i Z}}} must be 1. {\i Boolean Satisfiability} of a formula is a process of finding an assignment which evaluates it to 1. In this example {{{\i Y}=1}} and {{{\i Z}=1}} assignment will make the formula to be evaluated to 1 and satisfy it. The formulas which cannot be satisfied with any possible assignment are called unsatisfiable. For example, {{({\f6\'D8}{\i a}{\f6\'DA}{\i b}){\f6\'D9}({\i a}{\f6\'DA}{\f6\'D8}{\i b})}} cannot be satisfied with any assignments and hence unsatisfiable.\par
\pard\qj\sl240\slmult1 \sb60 \fi0 The SAT problem is NP-Complete 
[{\field{\*\fldinst{\lang1024 REF BIB_Malik_2009_BST_1536616_1536637 \\* MERGEFORMAT }}{\fldrslt{29}}}
]. Most SAT solvers use restricted representation of formulas in Conjunctive Normal Formula (CNF). A formula in Conjunctive Normal Form (CNF) is a congestion of clauses. A clause is disjunction of literals. A literal is a Boolean variable, or negation of Boolean variable. For example, {{({\i a}{\f6\'DA}{\i b}{\f6\'DA}{\f6\'D8}{\i c}{\f6\'DA}{\i d}){\f6\'D9}({\i a}{\f6\'DA}{\i b}{\f6\'DA}{\f6\'D8}{\i d}{\f6\'DA}{\i e})}}, here {{({\i a}{\f6\'DA}{\i b}{\f6\'DA}{\f6\'D8}{\i d}{\f6\'DA}{\i e})}} is a clause with set of variables with or without negation. The approach for finding satisfiability differs in different tools. One of the commonly used approachs is DPLL 
[{\field{\*\fldinst{\lang1024 REF BIB_Davis_1962_MPT_368273_368557 \\* MERGEFORMAT }}{\fldrslt{13}}}
]. In DPLL, given a CNF formula, the algorithm heuristically chooses an unassigned variable and assigns it a value, 0 or 1, this step is known as branching step. Then solver tries to simplify the consequences based on deduction rule. In deduction it tries to deduce if any of clause become 0. If one of the assignments leads 0, the algorithm back tracks since it will not lead to any satisfiability. Once it assigns a combination of values to all the variables which can be 1, the formula is said to be satisfiable.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_statemachine}2.3{\*\bkmkend BMfig_example_statemachine}: An example state-machine for verification}{\field{\*\fldinst TC "2.3 An example state-machine for verification" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb480 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 {\*\bkmkstart BMsec_back_cbmc}2.4{\*\bkmkend BMsec_back_cbmc}  CBMC\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 CBMC}} \par
\pard\qj\sl240\slmult1 \fi300 CBMC is an open source tool for compiling C and C++ programs to goto-programs and checking properties of the goto-programs. The goto-programs are simplified C and C++ programs, represented in the form of Control Flow Graphs (CFG). The properties includes checking if an assertion is true, array bound limits, dangling pointers, arithmetic overflow/underflow and some other platform specific properties as listed in 
[{\field{\*\fldinst{\lang1024 REF BIB_website_cprover_cbmc \\* MERGEFORMAT }}{\fldrslt{27}}}
]. The {fig:CBMC:block} shows the block diagram of CBMC. Front end compiles source code to intermediate form, called goto-programs. The loops in goto-programs are unrolled.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em] {goto}=[draw, text centered, minimum height=5em, text width =8em] {frontend}=[draw, text centered, minimum height=2.5em] {backend}=[draw, text centered, minimum height=2.5em] {cbmc}=[draw, text centered, minimum height=2.5em] {line}=[draw, -latex] {\par
\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_CBMC_block}2.4{\*\bkmkend BMfig_CBMC_block}: Block diagram of CBMC}{\field{\*\fldinst TC "2.4 Block diagram of CBMC" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb360 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 Loop Unrolling\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Loop unrolling, also called as loop unwinding, is process of converting loops into sequential statements. For example:\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_loop_with_static_condition}2.5{\*\bkmkend BMfig_example_loop_with_static_condition}: An example of loop with static condition}{\field{\*\fldinst TC "2.5 An example of loop with static condition" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 The example {fig:example:loop:with:static:condition} can be simply converted as shown in {fig:example:unrolled:loop:with:static:condition}, which contains sequential statements. {\par
\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_unrolled_loop_with_static_condition}2.6{\*\bkmkend BMfig_example_unrolled_loop_with_static_condition}: An example of unrolled loop with static condition}{\field{\*\fldinst TC "2.6 An example of unrolled loop with static condition" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 Typically there are also loops which are bounded by run-time conditions, for example in {fig:example:loop:with:dynamic:condition}. {\par
\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_loop_with_dynamic_condition}2.7{\*\bkmkend BMfig_example_loop_with_dynamic_condition}: An example of loop with dynamic condition}{\field{\*\fldinst TC "2.7 An example of loop with dynamic condition" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 The C code in {fig:example:loop:with:dynamic:condition} contains a while loop which terminates when array_b encounters an end of string character ({{\\0}}) in its index. The static analysis may not provide any information about the contents of arry_b and it is impossible to know the number of iteration loop will run during execution. Most of the tools use bounded loop unrolling, i.e. if the exit condition for a loop cannot be determined statically, loops are unrolled a maximum of N number of times. Number N can be adjusted according to application. For instance above loop in {fig:example:loop:with:dynamic:condition}, with N set to 5, can be transformed as shown in {fig:example:unrolled:loop:with:dynamic:condition}.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_unrolled_loop_with_dynamic_condition}2.8{\*\bkmkend BMfig_example_unrolled_loop_with_dynamic_condition}: An example of unrolled loop with dynamic condition}{\field{\*\fldinst TC "2.8 An example of unrolled loop with dynamic condition" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 Assert statement, at last, can be used to check if unrolling was not enough.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 Goto-programs\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Goto-program is compiled source code, which stores program\rquote s information in a structured way. The information includes Control Flow Graph (CFG), data types of the variable, type conversions, library functions and etc.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 Variable renaming\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Programs also have variables with multiple assignments on same control flow path and it adds complexity on the way we verify programs. To avoid the complexity variables are renamed whenever new values are assigned, it is called as Static Single Assignment (SSA{\xe{\v SSA}}). This process is done on goto-programs before converting programs into propositional logic. For example, source code shown in {fig:example:multiple:assignments} can be represented as: \par
{{\field{\*\fldinst{ EQ {{\i a}=10{\f6\u-3879\'D9}{\i s}{\i u}{\i m}={\i s}{\i u}{\i m}+{\i a}{\f6\u-3879\'D9}{\i s}{\i u}{\i m}>{\i M}{\i A}{\i X}_{\i V}{\i A}{\i L}{\i U}{\i E}}}}{\fldrslt }}}\par
\pard\qj\sl240\slmult1 \fi300 As we can see it is tricky to handle it in propositional logic since a variable is assigned a value and reused in the formula. To avoid it the CBMC converts logic as shown in {fig:example:renaming:varibales}.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_multiple_assignments}2.9{\*\bkmkend BMfig_example_multiple_assignments}: An example of Multiple assignments}{\field{\*\fldinst TC "2.9 An example of Multiple assignments" \\f f}{\fldrslt }}\par
}{\pard\qj\sl240\slmult1 \sb480 \fi0  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_renaming_varibales}2.10{\*\bkmkend BMfig_example_renaming_varibales}: Renaming variables}{\field{\*\fldinst TC "2.10 Renaming variables" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb360 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 Bit vector flattening\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 After compiling a source file, we get goto-program. The next step is to check assertions or any other properties and technique used to check these properties is called decision procedure. A decision procedure is a program which terminates with definite answer, true or false, for a decision problem. The decision procedure can decide on control flows based on previous assignments/operation. For example, decision procedure can identify if a control flow can trigger an assertion based on previous assignments and operations. \par
\pard\qj\sl240\slmult1 \fi300 Standard ways of implementing decision procedure is bit vector flattening followed by a call to a propositional SAT solver. In this process first step is encoding statements from goto-program into bit vectors. Encoding variables and constants to bit vectors is a straight forward task, for example a variable X of size N, can be encoded into bit vectors b of length N. Bit vector operations have to be handled on individual bases. For example, let X, Y and Z be integer variable and a[n], b[n] and c[n] be the bit vectors for each variable respectively. For addition of two bits, we can use a one bit full adder circuit as in {fig:bitadder}. The circuit will provide us with following formula.\par
{{\field{\*\fldinst{ EQ {{\i S}\\s\\do5({\fs16 {\i i}})=({\i a}\\s\\do5({\fs16 {\i i}})+{\i b}\\s\\do5({\fs16 {\i i}})+{\i C}\\s\\do5({\fs16 {\i i}{\i n}})){\i m}{\i o}{\i d}\\s\\do5({\fs16 2})({\i a}\\s\\do5({\fs16 {\i i}}){\f6\u-3899\'C5}{\i b}\\s\\do5({\fs16 {\i i}}){\f6\u-3899\'C5}{\i c}\\s\\do5({\fs16 {\i i}}))}}}{\fldrslt }}}\par
{{\field{\*\fldinst{ EQ {{\i C}\\s\\do5({\fs16 {\i o}{\i u}{\i t}})=({\i a}\\s\\do5({\fs16 {\i i}})+{\i b}\\s\\do5({\fs16 {\i i}})+{\i C}\\s\\do5({\fs16 {\i i}{\i n}})){\i d}{\i i}{\i v}\\s\\do5({\fs16 2})({\i a}\\s\\do5({\fs16 {\i i}}){\f6\u-3881\'D7}{\i b}\\s\\do5({\fs16 {\i i}})+{\i a}\\s\\do5({\fs16 {\i i}}){\f6\u-3881\'D7}{\i C}\\s\\do5({\fs16 {\i i}{\i n}})+{\i b}\\s\\do5({\fs16 {\i i}}){\f6\u-3881\'D7}{\i C}\\s\\do5({\fs16 {\i i}{\i n}}))}}}{\fldrslt }}}\par
\pard\qj\sl240\slmult1 \fi300 Bit flattening is a process of transforming bit vector logic into propositional logic 
[{\field{\*\fldinst{\lang1024 REF BIB_3540741046 \\* MERGEFORMAT }}{\fldrslt{28}}}
]. For example above bit vector logic can be converted to a propositional logic for {{\field{\*\fldinst{ EQ {{\i S}\\s\\do5({\fs16 {\i i}})}}}{\fldrslt }}}.\par
{{\field{\*\fldinst{ EQ {({\i a}\\s\\do5({\fs16 {\i i}}){\f6\u-3878\'DA}{\i b}\\s\\do5({\fs16 {\i i}}){\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i C}\\s\\do5({\fs16 {\i o}{\i u}{\i t}})){\f6\u-3879\'D9}({\i a}{\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i b}{\f6\u-3878\'DA}{\i C}\\s\\do5({\fs16 {\i i}{\i n}}){\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i C}\\s\\do5({\fs16 {\i o}{\i u}{\i t}})){\f6\u-3879\'D9}({\i a}{\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i b}{\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i C}\\s\\do5({\fs16 {\i i}{\i n}}){\f6\u-3878\'DA}{\i C}\\s\\do5({\fs16 {\i o}{\i u}{\i t}})){\f6\u-3879\'D9}}}}{\fldrslt }}}\par
{{\field{\*\fldinst{ EQ {({\f6\u-3880\'D8}{\i a}{\f6\u-3878\'DA}{\i b}{\f6\u-3878\'DA}{\i C}\\s\\do5({\fs16 {\i i}{\i n}}){\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i C}\\s\\do5({\fs16 {\i o}{\i u}{\i t}})){\f6\u-3879\'D9}({\f6\u-3880\'D8}{\i a}{\f6\u-3878\'DA}{\i b}{\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i C}\\s\\do5({\fs16 {\i i}{\i n}}){\f6\u-3878\'DA}{\i C}\\s\\do5({\fs16 {\i o}{\i u}{\i t}})){\f6\u-3879\'D9}({\f6\u-3880\'D8}{\i a}{\f6\u-3878\'DA}{\f6\u-3880\'D8}{\i b}{\f6\u-3878\'DA}{\i C}\\s\\do5({\fs16 {\i o}{\i u}{\i t}}))}}}{\fldrslt }}}\par
\pard\qj\sl240\slmult1 \fi300 Similarly we can build carry chain adder for bit vectors, subtractor for subtract operation, bit wise operations etc. The multiplication, division and modulo operations generate large formulas. To handle large expressions and large operations incremental flattening is used 
[{\field{\*\fldinst{\lang1024 REF BIB_3540741046 \\* MERGEFORMAT }}{\fldrslt{28}}}
].\par
\pard\qj\sl240\slmult1 \fi300 As we know from {sec:sat:solver}, a proposition logic can be verified using SAT solvers. The SAT solver can work on propositional logic of program logic to verify expressions and check different properties of the program logic.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300 \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em] {input} = [coordinate] {output} = [coordinate] {line}=[draw, -latex] {pinstyle} = [pin edge={to-,thin,black}]\par
{\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_bitadder}2.11{\*\bkmkend BMfig_bitadder}: One Bit Full Adder (FA) {\xe{\v Full Adder}}}{\field{\*\fldinst TC "2.11 One Bit Full Adder (FA) {\xe{\v Full Adder}}" \\f f}{\fldrslt }}\par
}{}\pard\qj\sl240\slmult1 \sb360 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 CBMC keywords\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Apart from automatically checking properties of program, CBMC also provides set of keywords, which can be used to aide CBMC with more information about program. These keywords can be used for programs instrumentation. The program instrumentation is a procedure change or adds part code to verify some properties of the code.\par
{\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 1.\tab {{{\i a}{\i s}{\i s}{\i e}{\i r}{\i t}({\i e}{\i x}{\i p}{\i r})}} or {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i e}{\i r}{\i t}({\i e}{\i x}{\i p}{\i r})}}}{\fldrslt }}} can be used to assert on any condition. It takes a Boolean expression {{{\i e}{\i x}{\i p}{\i r}}} as argument. When CBMC encounters one of these keywords, it tries to generate a formula to check assertion failure. The generated formula is verified using SAT-solvers. If the formula is satisfied then assertion fails and CBMC generates error and produces counter-example showing possible trace of error. \par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 2.\tab {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i u}{\i m}{\i e}({\i e}{\i x}{\i p}{\i r})}}}{\fldrslt }}} keyword reduces the number of program traces that are considered and allows assume-guarantee reasoning. As {{{\i a}{\i s}{\i s}{\i e}{\i r}{\i t}}}, {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i u}{\i m}{\i e}({\i e}{\i x}{\i p}{\i r})}}}{\fldrslt }}} also takes a Boolean expression 
[{\field{\*\fldinst{\lang1024 REF BIB_clarke2006ansi \\* MERGEFORMAT }}{\fldrslt{10}}}
]. \par
}\pard\qj\sl240\slmult1 \sb180 \fi0 {\s5\ql\sb240\sa60\keepn\f13\b\fs24 Use cases of CBMC\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 CBMC was used in several case studies, including Bounded Model Checking of Concurrent Programs 
[{\field{\*\fldinst{\lang1024 REF BIB_Rabinovitz05boundedmodel \\* MERGEFORMAT }}{\fldrslt{35}}}
], Equivalence Checking 
[{\field{\*\fldinst{\lang1024 REF BIB_Staats_2008_PTV_1482985_1483006 \\* MERGEFORMAT }}{\fldrslt{38}}}
], Worst Case Execution Time analysis 
[{\field{\*\fldinst{\lang1024 REF BIB_springerlink_10_1007_978_3_540_88479_8_30 \\* MERGEFORMAT }}{\fldrslt{43}}}, {\field{\*\fldinst{\lang1024 REF BIB_Kim_usinga \\* MERGEFORMAT }}{\fldrslt{24}}}
] and many other can be found in 
[{\field{\*\fldinst{\lang1024 REF BIB_website_cprover_cbmc_applications \\* MERGEFORMAT }}{\fldrslt{26}}}
].\par
\pard\qj\sl240\slmult1 \fi300 \ldblquote A program verifier uses automated mathematical and logical reasoning to check the consistency of programs with their internal and external specifications" 
[{\field{\*\fldinst{\lang1024 REF BIB_Hoare03theverifying \\* MERGEFORMAT }}{\fldrslt{23}}}
]. The Hardware and software verification considers checking the correctness of functionality and finding undesired behaviours in the designed logic. There are several stages and ways in which a system can be verified. During the design process a system specification is developed and a mathematical model can be implemented to verify if the properties of specified system are as expected. The implemented logic can be converted into mathematical logic and this mathematics logic can be verified for its correctness. There are already tools which can work with system specifications like UML and automatons. For example {\f16 \field{\*\fldinst{ HYPERLINK "http://move.lip6.fr/software/BCC/index.html" }{{}}}{\fldrslt{BCC}}} and {\f16 \field{\*\fldinst{ HYPERLINK "http://www.uppaal.com/" }{{}}}{\fldrslt{UPPAAL}}}. Also there are tools which can work with implementation done in programming languages like C, C++, Verilog or VHDL. For example, {\f16 \field{\*\fldinst{ HYPERLINK "http://www.cprover.org/cbmc/" }{{}}}{\fldrslt{CBMC}}}, {\f16 \field{\*\fldinst{ HYPERLINK "http://www.cprover.org/satabs/" }{{}}}{\fldrslt{SatAbs}}} and {\f16 \field{\*\fldinst{ HYPERLINK "http://www.cs.cmu.edu/~modelcheck/vcegar/" }{{}}}{\fldrslt{VCEGAR}}}. \par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 2.5  Verifying properties of thread local and concurrent threads\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Model checking is also used to verify specific properties of a system. Some properties are local to a single thread running in the system and some depend on multiple threads running concurrently. The software concurrency in a single core system is introduced by context switches and parallel computing platforms have concurrent execution paths.\par
\pard\qj\sl240\slmult1 \fi300 The thread local properties include memory access mechanisms, correctness of memory management and pattern of mutex accesses. For example work done in 
[{\field{\*\fldinst{\lang1024 REF BIB_Donaldson_2011_AAD_2034876_2034900 \\* MERGEFORMAT }}{\fldrslt{15}}}
] is used to identify DMA race conditions in IBM cell processors. The DMA race detection is been achieved through {\i program instrumentation}. In program instrumentation, a part of code is added or modified to verify some properties of the logic. For example, to verify array bound, one can add an assertion to check the index value on every array access.\par
\pard\qj\sl240\slmult1 \fi300 In concurrent programs we can observe more complex properties concurrent access to shared resources, signalling between the threads and dynamic memory management among threads or race conditions among the threads. Behaviour of these properties depends on the hardware and operating system support. The instrumentation can be used to verify these properties.\par
\page{}\pard\qj\sl240\slmult1 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter {\*\bkmkstart BMsec_verification_tech}3{\*\bkmkend BMsec_verification_tech}\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Related work\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 Initially logical systems were verified using proof based systems. In proof based verification, system description is represented using a set of formulas {{{\f6\'67}}} in a suitable logic and specification is represented using another formula {{{\f6\'71}}}. The verification of system is done by finding proof that {{{\f6\'67}}} {{{\u8866*}}} {{{\f6\'71}}}. As we can see this process is deductive and usually requires human guidance 
[{\field{\*\fldinst{\lang1024 REF BIB_Hoare04communicatingsequential \\* MERGEFORMAT }}{\fldrslt{22}}}, {\field{\*\fldinst{\lang1024 REF BIB_Apt_1981_TYH_357146_357150 \\* MERGEFORMAT }}{\fldrslt{1}}}
].\par
\pard\qj\sl240\slmult1 \fi300 The work done by Vardi and Wolper in 
[{\field{\*\fldinst{\lang1024 REF BIB_VardiW86 \\* MERGEFORMAT }}{\fldrslt{40}}}
], provided a way of modelling the program specifications into formulas which can be verified automatically. According to this proposal, once expected behaviours and use cases are decided, all the requirements are written into formal specification, which is mathematical description of the system. The formal specifications are written in Linear time Temporal Logic (LTL) and the LTL logic are verified to check the properties of the system. If the system described using LTL behaves as expected, the system is said to be bug free.\par
\pard\qj\sl240\slmult1 \fi300 Currently we have techniques to convert programs described in high level programming language to mathematical formulas and automated verification technique to verify the properties of the formulas. The {sec:back:cbmc} describes more details of converting programs to verifiable mathematical formulas and verification using Bounded Model Checking.\par
\pard\qj\sl240\slmult1 \fi300 Specifications and program are converted into mathematical formulas and the formulas have to be verified for correctness and/or check for incorrect behaviour. For example consider model checking of state-machine in {fig:example:statemachine}. The state {{\field{\*\fldinst{ EQ {{\i S}\\s\\do5({\fs16 3})}}}{\fldrslt }}} can be reached through {{\field{\*\fldinst{ EQ {{\i S}\\s\\do5({\fs16 1})}}}{\fldrslt }}} and {{\field{\*\fldinst{ EQ {{\i S}\\s\\do5({\fs16 2})}}}{\fldrslt }}} under the condition {{({\f6\'D8}{\i X}{\f6\'DA}{\i Z}){\f6\'D9}({\i Z}{\f6\'D9}{\i Y})}}. Suppose we want to know if {{\field{\*\fldinst{ EQ {{\i S}\\s\\do5({\fs16 3})}}}{\fldrslt }}} is reachable under certain conditions, which may violate the specification and is an incorrect behaviour. We need techniques to process the formula {{({\f6\'D8}{\i X}{\f6\'DA}{\i Z}){\f6\'D9}({\i Z}{\f6\'D9}{\i Y})}} and check if it is satisfiable. Such techniques are called {\i decision procedures}. Two of the commonly used decision procedures are {\i Binary Decision Diagrams (BDDs)} and {\i Satisfiability (SAT)} 
[{\field{\*\fldinst{\lang1024 REF BIB_kroening2008decision \\* MERGEFORMAT }}{\fldrslt{25}}}
]. In previous chapter we have discussed about satisfiability and next section describes BDD briefly.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 3.0.1  Binary Decision Diagrams (BDDs)\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 BDD}}{\xe{\v DAG}}Graph based verification techniques like {\i Binary Decision Diagrams (BDDs)}, as described in 
[{\field{\*\fldinst{\lang1024 REF BIB_Bryant_1986_GAB_6432_6433 \\* MERGEFORMAT }}{\fldrslt{5}}}
]. The BDDs are proven to be very effective in verifying binary logic 
[{\field{\*\fldinst{\lang1024 REF BIB_brace1991efficient \\* MERGEFORMAT }}{\fldrslt{4}}}
]. In this approach the model is described in-terms of a Directed Acyclic Graph (DAG) consisting of decision nodes and terminal nodes. \par
{}\pard\qj\sl240\slmult1 \fi300 Although BDDs are effective in solving verification problem, as the number of variables/nodes increase the size of BDDs increases exponentially and it is not practical to use BDDs, since verification process will be too slow and too memory consuming 
[{\field{\*\fldinst{\lang1024 REF BIB_clarke1997model \\* MERGEFORMAT }}{\fldrslt{7}}}
]. There have been attempts to develop techniques which can avoid the exponential growth, for instance work shown in 
[{\field{\*\fldinst{\lang1024 REF BIB_Burch90symbolicmodel \\* MERGEFORMAT }}{\fldrslt{6}}}, {\field{\*\fldinst{\lang1024 REF BIB_Balarin_1993_IAL_647762_735495 \\* MERGEFORMAT }}{\fldrslt{2}}}, {\field{\*\fldinst{\lang1024 REF BIB_Pixley_1992_ECS_113938_149645 \\* MERGEFORMAT }}{\fldrslt{33}}}
] and work by Bryant in 
[{\field{\*\fldinst{\lang1024 REF BIB_Bryant_1986_GAB_6432_6433 \\* MERGEFORMAT }}{\fldrslt{5}}}
] showed that ordering variables will increase the efficiency of the algorithm. But despite all the efforts state explosion has been a major hurdle in applying BDD-based model checking to large and complex systems 
[{\field{\*\fldinst{\lang1024 REF BIB_springerlink_10_1007_3_540_44577_3_12 \\* MERGEFORMAT }}{\fldrslt{9}}}
].\par
\page{}\pard\qj\sl240\slmult1 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter 4\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Multicore Hardware Model\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 The computers are used in diverse applications. The applications may provide unique challenge on the way computers process the data. For example some application may have one algorithm to be run large amount of data and some others may require large amount of instructions to be executed on small amount of data. These requirements have defined the architecture of computers.  In this chapter we briefly present the Flynn\rquote s taxonomy, discuss about multicore memory models, data sharing concepts and introduce to the Ericsson\rquote s DSP multicore platform.  In this chapter we briefly present the Flynn\rquote s taxonomy, discuss about multicore memory models and data sharing concepts.\par
\pard\qj\sl240\slmult1 \fi300 The Model and architecture of hardware used for this thesis are intellectual property of Ericsson. This chapter only presents common multicore architectures. \par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 4.1  Computing platforms\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The computing platforms are generally classified based on Flynn\rquote s taxonomy 
[{\field{\*\fldinst{\lang1024 REF BIB_flynn1966very \\* MERGEFORMAT }}{\fldrslt{17}}}
]. The classification is based on number of data and instruction streams. The classification is as follows: \par
{\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 1.\tab {Single Instruction Stream-Single Data Stream (SISD)}\par
\pard\qj\sl240\slmult1 \li600\fi0 A computing unit with single instruction stream and single data stream. For example: single core micro-controllers and micro-processors.\par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 2.\tab {Single Instruction Stream-Multiple Data Stream (SIMD)}\par
\pard\qj\sl240\slmult1 \li600\fi0 Multiple computing units process same instruction on different data stream. For example: Graphical Processing Units (GPU).\par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 3.\tab {Multiple Instruction Stream-Single Data Stream (MISD)}\par
\pard\qj\sl240\slmult1 \li600\fi0 Multiple computing units process different instruction on same data. For example fault tolerant systems run different algorithms on same data and analyse the result from both the algorithm.\par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 4.\tab {Multiple Instruction Stream-Multiple Data Stream (MIMD)}.\par
\pard\qj\sl240\slmult1 \li600\fi0 Multiple instructions streams work on different data. For example, general purpose parallel computers.\par
}\pard\qj\sl240\slmult1 \sb100 \fi300 Parallel computing makes use of multiple computational units to process data at same time (in parallel) 
[{\field{\*\fldinst{\lang1024 REF BIB_hennessy2011computer \\* MERGEFORMAT }}{\fldrslt{21}}}
]. The architecture of parallel computers can be SIMD, MISD, MIMD or {\i heterogeneous computer}, which is a combination of this classification.\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 4.2  Multicore Memory models\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The memory model defines the organisation and access mechanisms of computer memory. The memory models are designed to address application specific requirements. The memory models can be classified into Uniformed Memory Access (UMA), Non-Uniform Memory Access, Cache Only Memory Access and Scratchpad Random Memory Access (SRAM).\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 4.2.1  UMA\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 In UMA architecture, all the processors share a common main memory and any processor\rquote s memory access time to any of the memory region of main memory is independent 
[{\field{\*\fldinst{\lang1024 REF BIB_hennessy2011computer \\* MERGEFORMAT }}{\fldrslt{21}}}
].\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 4.2.2  NUMA\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 In NUMA architecture, all the processors share a common main memory and access time to a memory region depends on the address space of main memory it is accessing 
[{\field{\*\fldinst{\lang1024 REF BIB_hennessy2011computer \\* MERGEFORMAT }}{\fldrslt{21}}}
].\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 4.2.3  COMA\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 In COMA architecture, processors do not have a main memory, instead the processors are interconnected and support caches. The data is accessed through caches and {\i cache coherency} protocol is used.
[{\field{\*\fldinst{\lang1024 REF BIB_hagersten1992ddm \\* MERGEFORMAT }}{\fldrslt{19}}}, {\field{\*\fldinst{\lang1024 REF BIB_hennessy2011computer \\* MERGEFORMAT }}{\fldrslt{21}}}
]\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 4.2.4  SRAM\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 In SRAM architecture, all processors support memory blocks supported controlled by programs, called scratchpad memories, as replacement for cache 
[{\field{\*\fldinst{\lang1024 REF BIB_hennessy2011computer \\* MERGEFORMAT }}{\fldrslt{21}}}
].\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 4.3  Data sharing\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The parallel programs running in different cores or processors can share data to produce results. The data sharing can be done through sharing memory or through message transfer. In multicore systems, cores are physically near and it is less time consuming to share memory. Any of the above memory models can be used for data sharing. To maintain the correctness of the data shared by parallel programs, programmers have option of using mutex and {\i coherency protocols} to keep the data consistent among different cores.\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 4.4  Ericsson hardware platform\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The platform used for this thesis is a home grown ASIC processor from Ericsson. The platform is designed for {\i LTE} base stations. The {\xe{\v LTE}} is a wireless network standard with high speed data access facilities for mobile phones.\par
\pard\qj\sl240\slmult1 \fi300 The LTE has large data and instruction parallelism, which has influenced the architecture of the platform. The platform contains multiple cores arranged in heterogeneous architecture with scratchpad memory. {fig:ericsson:platform} shows the block diagram of the platform. The platform contains master cores and slave cores with local scratchpad memory. The cores also share a common scratchpad memory. The master cores are designed to handle incoming radio signals. The master core fetches the incoming signal data through peripheral interface. The master cores distribute work computation among the slave cores. The slave cores are utilised to accelerate the computation by the master cores.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300 \par
\pard\qc\sl240\slmult1 \fi0 
{\pict\picscalex80\picscaley80\picw18346\pich11302\picwgoal10401\pichgoal6408\pngblip
89504e470d0a1a0a0000000d4948445200000877000005370806000000de9a1b0400000006624b474400ff00ff00ffa0bda793000000097048597300002e2300002e230178a53f760000001d74455874536f6674776172650047504c2047686f737473637269707420382e3731033f68340000200049444154789cecddbf6e
1b67d6c0e157814ab9b03b77bb85b7ce275dc0c02059aa907a97f61d08aa9685d20830b0171003dba8496515494712026f60ec5a2e763b777690a8d7577847a1680ec5e11fbd87e4f30041e8686678a860b182f3f37b766e6f6f6f13000000000000000021fd907b000000000000000000ea893b0000000000000000021377
00000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b80300000000
00000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081
893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc010000
00000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e00000000000000
80c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee00
00000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b80300000000000000203071070000000000
00004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc010000000000000010d86eee010000601dedecece41e0168a8dd6ea75eaf977b0c0000000068ccc91d000000000000000081893b000000000000000002b396050000
163418dce41e01a8519657e9e4e430f71800000000b010277700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002dbcd3d00f3ebf7fbb94700d818ed76
3bf7080000000000003091b8638d753a9ddc23006c8cdbdbdbdc23000000000000c044d6b2000000000000000004e6e48e0db1bfff32f708006ba72caf728f000000000000000fdab9750efddadad9d9b97b3d18dc649c04603db55a7b77affddf21d0d4223f8b9d9c1c0acc600df97901000000805cac6501000000000000
00084cdc010000000000000010d86eee010000609bbd7dfb6bdadf7f997b0ca0c6e81a3700000000c8c5c91d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000
000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060bbb9070000009a6bb5f6728f005b67676767a1fbdbed76eaf57a4b9a06000000806de2e40e0000000000000080
c0c41d00000000000000008159cb0200006b6e30b8c93d0250a32cafd2c9c961ee310000000058734eee0000000000000000084cdc01000000000000001098b8030000000000000020b0dddc03b0beaeaf3fa477efbab9c700588a4ea793f5fd0f0e0ed2f9f979d6190000000000008849dcc1dc6e6e7e4f6579957b0c80a5
e8f7fbb9470000000000008089ac65010000000000000008ccc91d2cc58b173fa6376f7eca3d06c05ab1de0a00000000008059883b588a274f9ea6fdfd97b9c700000000000000808d632d0b000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002dbcd3d000000f0b84e
4e0e53595ee51e03b64ebfdf4f3b3b3b73dddb6eb753afd75bf24400000000ac0b277700000000000000000426ee000000000000000008cc5a160000d8626fdffe9af6f75fe61e0398a02cafd2c9c961ee310000000008c0c91d000000000000000081893b000000000000000002137700000000000000000426ee00000000
00000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000086c37f7000000c0fa393939cc3d026cbc3ffffc72f7ba2ccbd4e974167adec1c141
3a3f3f5f742c000000003210770000008d95e555ee1160ab7cf9f225f5fbfddc63000000009089b52c00000000000000008139b903000058c8dbb7bfe61e01a8717dfd21bd7bd7cd3d06000000000b12770000000bd9df7f997b0400000000808d26ee6063d8fb0eac9b4f9f3edebdfef2e54beaf7fb19a7b9afdd6ee71e01
000000000080ff1177b0314e4e0e738f0030b7b22c53a7d3c93dc69ddbdbdbdc23000000000000f03f3fe41e0000000000000000807a4eee6023d9fb0ed09cf55600000000000031893bd8486fdffe9a7b0480b5d36aede51e0100000000008009ac650100000000000000084cdc01000000000000001098b8030000000000
000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081ede61e000000d82eefde75d3f5f587dc63c056f8f3cf2f77afcbb24c9d4e67aee71c1c1ca4f3f3f3658d050000004043e20e0000e0515d5f7f486579957b0cd83a5fbe7c49fd7e3ff71800000000ccc15a160000000000000080
c09cdc01000064f3faf559fac73ffe2ff718c004d7d71fd2bb77dddc630000000090c41d00004046fff8c7ffa5fdfd97b9c7000000000008cd5a160000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b80300
00000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc010000000000000010d86eee010000009a6ab5f6728f005ba5dfefa79d9d9d859ed16eb753afd75bd24400000000dbc5c91d00
000000000000008139b90356e4e4e43095e555ee3100e6b2e89fcc5db65eaf97daed76ee31000000000000b210770000006b6d30b8c93d0250a32cafd2c9c961ee3100000000d69eb52c00000000000000008139b9031ec1dbb7bfa6fdfd97b9c700582bd65b0100000000007ce3e40e0000000000000080c0c41d00000000
0000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081ede61e000000e0319d9c1ca6b2bcca3d066c9d7ebf9f767676e6bab7dd6ea75eaf
b7e48900000000d687933b0000000000000000021377000000000000000004662d0b0000b0b5debefd35edefbfcc3d063041595ea59393c3dc630000000084e0e40e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc010000000000
00001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002dbcd3d000000c0bab8befe906e6e7ecf3d066c854f9f3edebdfef2e54beaf7fb733fabdd6e2f6324000000806cc41d000000337af7ae9bcaf22af718b075cab24c9d4e67
eefb6f6f6f97380d000000c0e3b396050000000000000020302777000000cce1c58b1fd393274f738f01d470ca0e000000b049c41d0000007378f3e6a7b4bfff32f718408d566b2ff708000000004b632d0b000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700
000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081ede61e000000601b7cfefcdff4f9f37f728f015ba9dfefcf7defc1c1417afaf4e912a701000000684edc010000f0087efbeddfe9
975ffe957b0cd84a9d4e67ee7b7bbd5e6ab7db4b9c06000000a0396b590000000000000000027372070000c0237bfefc6fe9f9f3bfe71e03a8717dfd21dddcfc9e7b0c000000803be20e000080475614c7e9f5ebb3dc6300354e4e0e53595ee51e03000000e08eb52c000000000000000081893b0000000000000000021377
00000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b80300000000
00000020b0dddc03000000309bebeb0fe9e6e6f7dc63c0c6fbe38f2f77afcbb25cf879ed767be16700000000db4ddc010000b026debdeba6b2bcca3d066c95d3d3d3859f717b7bbb8449000000806d662d0b0000000000000040604eee00000058432f5efc989e3c799a7b0ca086537600000080651277000000aca1376f7e
4afbfb2f738f01d468b5f6728f000000006c106b59000000000000000002137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b0000000000000000021377000000000000
00000426ee0000000000000000086c37f700000000acdee7cfff4d9f3fff27f718b095fafdfedcf71e1c1ca4a74f9f2e711a000000601d893b000000b6c06fbffd3bfdf2cbbf728f015ba9d3e9cc7d6fafd74bed767b89d300000000ebc85a160000000000000080c09cdc010000b0659e3fff5b7afefcefb9c7006a5c5f7f
483737bfe71e030000000844dc010000b0658ae238bd7e7d967b0ca0c6c9c9612acbabdc63000000008158cb02000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000
000000084cdc01000000000000001098b8030000000000000020307107000000000000004060bbb907000000603d5c5f7f483737bfe71e0336de1f7f7cb97b5d96e5c2cf6bb7db0b3f03000000c84bdc010000c04cdebdeba6b2bcca3d066c95d3d3d3859f717b7bbb8449000000809cac65010000000000000008ccc91d00
000034f6e2c58fe9c993a7b9c7006a386507000000368bb803000080c6debcf929edefbfcc3d0650a3d5dacb3d02000000b044d6b200000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d00000000000000
0081893b000000000000000002137700000000000000000426ee0000000000000000084cdc010000000000000010d86eee01000000d87c9f3fff377dfefc9fdc63c056eaf7fb73df7b7070909e3e7dbac4690000008079883b00000058b9df7efb77fae5977fe51e03b652a7d399fbde5eaf97daedf612a701000000e6612d
0b0000000000000040604eee000000e0513d7ffeb7f4fcf9df738f01d4b8befe906e6e7ecf3d060000003042dc010000c0a32a8ae3f4faf559ee31801a272787a92caf728f010000008cb0960500000000000000203027770000c0824e4e0e1b5dffe9d3c7154d0200000000c02612770000c0821c5d0f00000000c02a59cb
02000000000000001098933b0000600ebd5e6fee7b4f4f4f5359964b9c0600000000804d26ee00008039b4dbedb9ef7df6ecd91227010000000060d359cb02000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002
137700000000000000000426ee0000000000000000086c37f700000000308bebeb0fe9e6e6f7dc63c0c6fbe38f2f77afcbb25cf879ed767be167000000c0b61377000000b016debdeba6b2bcca3d066c95d3d3d3859f717b7bbb844900000060bb59cb02000000000000001098933b000020a39f7ffe677af2e469ee3160ed
bc78f1a3ffed40604ed901000080e51277000040469f3e7dcc3d02aca5376f7e4afbfb2f738f01d468b5f6728f000000001bc55a160000000000000080c09cdc0100008fecfcfc3c7dfdfa75a167743a9d254d03000000004074e20e00007864070707b9470000000000608d58cb02000000000000001098b8030000000000
000020306b5980add66aed4dfce7ddee452a8aa3c6cf1b0e2fd3d9d9ab895f1b0c6e1a3f0f000000000000c0c91d00130c87ef1ff5be75d56aedddfd5517b5000000000000008b1177004c301c5e3eea7d0000000000000075c41d00359a861a4eae000000000000005641dc0130a2288eee5e2fb26265f439000000000000
008b1077008c288ae3bbd74d4fee18bd7ef439000000000000008bd8cd3d0040244571948ae2e82ed4383b7b95badd8b07ef1b5dc9523d030080383e7ffe6ffafcf93fb9c780add4eff7e7beb7dd6e2f7112000000585fe20e8029663dbda3e9291fd38c8622939e5b8523b344270fbd47dddcd3dea3d5da9b78cf707859fb
b5a2389a69dee1f0f26e1dcef86cf37ceefbd1cdf1bde8a6ee7b3018dcccfc7c00607dfcf6dbbfd32fbffc2bf718b0953a9dcedcf7dedede2e7112000000585fe20e8031ddeec5bd486138bc9c7a12c7781c306f747176f66aa648a4baa6d5da9b399a58e43d1e2376a8a28e69b3cdf3b9270522c3e1e5bde8030000000000
00a21377004c30ba9a65387cff40dcf1fede7df39ae7f48f2a54987575cc324f18599679628b269f7b54d4ef0100f0b89e3fff5b7afefcefb9c7006a94e555ee11000000201c7107c00445713c12774c8f0146bf5e14c74b78effaf523934eb8982574f876dff7a7588caf2aa94c5bdb327a92c7e809274d4f11199d7d7cae
94befffce361c63c814775ffb4f70000365f511ca7d7afcf728f01d4a85bf708000000db4cdc0130c178f0501711d48509f3e8762f1ebcff5b907174f7deb30728efeffdfaa1f79a77b54c53e3dfbf697355338d7fee87d6e65446c38ebacff7589f1b0000000000009a107700d4185dcd32ebf58bbe5f13ddeec5bd3fd136
ed148bfba78b1c2d3ceb3234093bc6af1bfddc0fadcd1935cfe92200ebe0e4e4b0d1f59f3e7d5cd1240000000000ac82b803a0c643ab59c6579d2c63254b534d03944816094e463f77b300e7f1ff1d013c86b2bcca3d0200000000002bf443ee0100a21a0f0ec64f9a185d7512e1348c758a3c169d753cd298f579b9ff1d01
0000000000c03c9cdc0130a3f1806095314515922ceb3dc64fba383b7b958ae2385bec301ac6a4941aaf4a199f7b96d52cc20e60d3f47abdb9ef3d3d3d4d65592e711a00000000005649dc013045b77b915aadbdbb5f0f87971357a1348d13ea54e1c5b28dae98a9dea7fa75153d2ceb33cc63f47b0cc06cdaedf6dcf73e7b
f66c89930000000000b06ad6b2003c60f4c487eac489f1952ccb7076f66a2561474adf66ac8b37aad0a3d5da4badd65e3a3b7bb5562b5e00000000000060d339b903e001a3a75e8cffbdfafaa2464fd2f8ebb90f9fa8d124c4a8028fe1f0fdd47baa598ae26865ab5bc423000000000000303b7107c003c6e386f11522cb88
1fc64fece8762f5612557c0b368eeebd675d6851451eab9a65d46070b3d2e7030000000000c03ab3960560067571c332a287492776ac3aa648e95b40d2ed5ea4c1e0260d0637b5ef3bba8266591ee3f3010000000000c0a6107700cca06ef5ca7256b2dc8f27a6ad6159a5d1d86334be98b43266d9c64f2e01000000000000
fe22ee0098c1a4532d1eeb848d6956155d8c472bcb3ebd6319510c0000000000006c8bdddc0300ac8bf1202177a0b0cad32e561dad8c3fbf3a1d24772c030000000000001139b9036046457174b7baa4dbbd585988304bb4d16455ca2a57aa2cf23df83ef098ef749055af8c01000000000080dcc41d009975bb17f77efd50
ac301c5e363ab563387c9f5aadbd46f78c5f3b3ee332e69af4b99b7dae6fd72f7b650c00000000000044632d0b40004571742fea68b5f6ee4e0aa97c3bade3fdbdebc6ef9b6638bcbc7b6e4a93838d2aae187f8ffab98fef5d5bbdc7f7d71d4d7cbf6ef7e25ed0313a63511cd7ac6ff9fe7b000000000000009b4cdc011040
b77bf15d1451174a8cde33cfa915551831edd995ba2863fceb4d4edc98e5fe266b6700000000000060d3893b0082a8628d59a2866ef7e27fa7763c1c7714c5714ae9e1752fdfdf373dec18bfae9a659ef7190c6efeb762a5f9bdd5e703603e3ffffccff4e4c9d3dc6300000000003085b803d86a83c14d98677f0b158e26ae
46a9be9ed2fd752ab3840dd573534adfad409974edf87b34997d11d57bd67dfed1f946af9f6695ff7e0136c5a74f1f738f0000000000c003c41d00c134092b9a46154da38d1cd66146000000000000784ce20e0000d832e7e7e7e9ebd7af0b3da3d3e92c691a00000000001e22ee0000802d737070907b0400000000001af8
21f7000000000000000000d4137700000000000000000426ee0000000000000000084cdc01000000000000001098b8030000000000000020307107000000000000004060e20e0000000000000080c0c41d000000000000000081893b000000000000000002137700000000000000000426ee0000000000000000086c37f700
0000c07a3b39396c74fda74f1f57340900000000c06612770000000b29cbabdc2300000000006c346b590000000000000000027372070000d058afd79bfbded3d3d35496e512a70100000000d86ce20e0000a0b176bb3df7bdcf9e3d5be22400000000009bcf5a160000000000000080c09cdc01c0da180e2fd370f8feeef5
2483c1cd638e040000000000002b27ee0020bc566b2ff708000000000000908db52c000000000000000081893b00584b4571948ae228f718000000000000b072d6b200105e157114c5f1774187952d0000000000006c3a710700e175bb17b947000000000000806cac65010000000000000008ccc91d00331a0e2fd370f83e
0d8797df7d6ddada90879c9dbdba7bfea4673639b5a27ad6a459eade6730b8996bbe6ac6793e33000000000000303b7107c003a6451da3d78cfefda16022a56fd1c42ccf6cb5f652511ccd14794c0a4486c3cb7bd1c7ac66b9efdbf7e652e4010000000000002b24ee0098e2a100e3b19e5b85164d4ef198e77de6bdaf8a3c
badd0b81070000000000002c99b803a0c6a4c0a16e554a75ba47f57a9ee78e9e7c31e9b49079028feafebab9279dcc31cb7c75339e9dbd9ae9d41200a8fcfcf33fd393274f738f0100000000109ab8036082ea248a51d356a37c8b1ffe0a33ea4c0a27269d76513d6f7c354a93c06334eca8bb7e72a4f2d77cb37ce6f119e7
39610480edf5e9d3c7dc23000000000084f743ee010022aa4ee1a84c8b1cc64d5b4b32f9448cfaeb277dbdc9ba942673a774ff248f59ef1d9f71521803000000000000cccfc91d006326c509cb38896252f030cb73bbdd8bd46aed7df7ac695148a5288e679e6f7c454b937bc7671c0edfcf341f00dbe9fcfc3c7dfdfa75a1
67743a9d254d0300000000109fb80360cca4533b723fb75a7f32faacd9e28ef9676f7aeff88c0050e7e0e020f70800000000006bc55a16804c9a9c8cd1e4dabfee6916678c86198b062d220f000000000000581e2777008c59c54a9649cf6d7a72c7b4672ddb7078f9dd2a18000000000000200f2777000000000000000004
26ee00209d9dbdca3d0200000000000050c35a160052511cdf5bf55214474b5b47030000000000002cc6c91d00a4a238ca3d020000000000005043dc0130663c7458d6ca92f1e78e9e94f190f16b571d6334990d000000000000582d71074026c3e1fb955c3baf45e2130000000000006075c41d00638ae2f8deaf9715392c
f2dcef4fee38aeb972791e2328010060739c9dbdbafb4b280c000000b05cbbb9070088a6288e52511cddfb0de9b3b357a9dbbd58f8b9e36679eea4b530ab58cbd2ed5ea4566befeed7c3e1651a0e2f1bbfd73cf70000f078befd9cf7feeef5b8d19fe59afc0cfcd8ab0401000000b689b8036082a238bef79bd3c3e1e54c21
46f51be575d775bb17f7628d87028aeaebe3cf5895baa865d6df98affe94e66070b3d4b946ff03c42c334c5214c7fe030300b0d5aa9fa91e3a5563f4eb55fc5b14472bfd391400000080e9c41d00134c3abda30a3c52fa3eb0a8fef943bf515e772ac8b77ffe577c50f71befd5fdab52c52793e6abbe3e6ed6cfbe8859fe23
c45fd7d65f27ee0000b6d5a2ab52ac5901000000c84bdc01506352e850bd1e5d5fb2ace7ce12863cc69f965cd5e70600208f496147ee781700000080667ec83d004064ddee45e3a06296d3219aac3aa99ef998c760cff3b92b4ec70000886552d831ede7bdea6b83c1cdca4f8e0300000060364eee007840511ca5c1e066ea
8ef2697ff2b14e756ddd9f8c9ce79983c1cdccd73e6496cf5d5df7edefc72bfb8d7ffbdd0198e6e4e4b0d1f59f3e7d5cd124104ff5b366a5693486f7b82600002000494441543cfe332b0000000079883b0066b4aa3fb5183d5cf0a7350188ae2caf728f00617d1f101fcff59ce83fb3020000006c3a6b59000000604b8876
01000000d693933b000080b5d3ebf5e6bef7f4f4349565b9c46980798dae7b59c6fac3566befdebdf39c3832fa8c94665b7d58ad32ac5e8f9a67dd22000000c03871070000b076daedf6dcf73e7bf66c899300f3383b7b3531e618575dd36aedcd146b14c5d1dd3db33cbfeefd469ff7d0f5c3e1fba9efd5f433000000004c
622d0b0000006ca8f13861f4a48c9ce60d2f9acedff4faeaf48dcab410a39aa7c96799e73300000000a424ee00000080ad112d2e288aa35414476930b8f9eeaf6ef7e2bb38e5a1f9173d156334d498766ac7a439ea3e4bd3cf000000003089b52c000000b0a1badd8bd46aedddfb67c3e1e5dd8a90a2387e70f5c8aae67ae8
7dab5822a5fb6b5c1e3a2963ded52c4d828bf16ba77d9e2a3819ff0cc3e16596ef3d000000b09e9cdc010000001bacee348bea0489566b2fb55a7be9ecec55e33523f36a1a358c7f86692146511ccf7c6d93f7ac7bde2ca1caa4e78daf80010000009846dc010000001bac288e660a10aad324aae0e3b1428f59cd1a844c5a
83f290eab3cff25ee3d735095546af8df4bd05000000e21377000000c086ab028f594f9948e9af933de63df962956659cdd2e4faf15334c64fff98f5390f197faec00300000098d56eee0100000080c7317ad2c4b7d32adedfbdae53451e756b4a1655c523cb0c1dbadd8bd46aedddfd7a387c3ff3691cffcfdefdc3386ea7
79c2ff95e1d0079c9c4d76270397bfa30616d8a476d12a6083d9c006a864e164031536d870a04ade0e3aaac201c6a6a505ee02273d12300eee1cb58cbbca5b83373f8c6e9285332b71ae37e8a59ac522259222454afa7c00a1bb4a24f523f5a744f2cbe70921bf72473a0452769bbc0c9dec1e17000000404cb8030000002e
50564b91bca04513018f78994db9befe7abb1efbc22be9f98a4a0648000000009aa42d0b000000104208dbd62d59ed5b3e56faa8a7ba461bed5ef21eefd06a1c00000000c720dc010000003c737dfd754ec0e38f39731497151289ab88fcf4d3afb9b7b2ed4b8a86349263d9f71875b68e0100000028435b16000000a0903a
c20de90a1a592192baec6bcd7268f5909f7efaf5a0f9010000008a12ee0000002ed674faff86fff01f7a85a7ff3fffe7ff6b7034d03d6fde7c1f5ebffea2b6e5e555ec68caf5f537cf1ef3eddb6f7756f4d857ed231916010000003826e10e0000e062096bc071a5dbba146d9d52d5cbb6323f3cfb7f99962c59f685450000
0000eaf259db0300000000d8a76ac58cbc80473a68727dfd4d8165ed9f06000000a0092a7700000017e5fefe3eacd7eb4af34e2693f0a73ffda9e61141739e9e7e38a8ed49561b9536bc7dfb6de579d3ad659e9efe98d95ea5c8ba6505450eddc60000000045087700000017653018549ef7cb2fbfac7124d0bca7a73f86a7
a73f566e1d92ae6e51b7226d4dd2ed53aa488639b29657269c910e86c46191b284420000008032b4650100008033f6f4f44378fdfa8bd2d52fdebefdf64508a26a48246ffe7da18da7a71f0eaada9127bdcc32eb95b50e65c6184fdf747006000000382fc21d000000700192218fbc30421c3c78fdfa8bda831db174b58aac
e0493c8ee4ef0fa972b16bec55969b15f088d7232bb092dcae79d300000000eca22d0b0000005c903858f0faf51785e779f3e6fbda5a88bc79f3fd8bc78ec311bbe639b4d245ba9dcaa1cb7af3e6fbcc508ae006000000d004953b000000e04cc5a18caac18c38c45057b0233daebaa7dde5fafa9bdce5575bded7e1a79f7e
ad34b68fcf49f67800000000b2a8dc01000000672c195e48569ac8ab30118715ca861e7efae9d7c2d3c68193783ce9b1648de1d030441cc6a85b3cc6bc75891f3b3d3d0000004019c21d0000007021ba162c28339e432a901c43d7b62d000000705eb4650100000000000000e830e10e00000000000000800e13ee00000000
00000000e830e10e00000000000000800e13ee0000000000000000e8b0cfdb1e000000c029fafdefffbeed2100000000001742e50e00000000000000800e13ee0000000000000000e830e10e00008082debf7f1f369b4da5db6432697bf800000000c08912ee0000000000000000e830e10e00000000000000800e13ee0000
000000000000e830e10e00000000000000800e13ee0000000000000000e8b0cfdb1e00f578fdfa8bb68700000000000000003440e50e00000000000000800e13ee0000000000000000e830e18e13b6d96c5abdbd7fffbeed4d0000000000000000674fb80300000000000000a0c33e6f7b0000000000e7e8eddb6f4308213c
3dfd9079ff4f3ffd7acce100000000274cb803000000a0266fdf7e9b1be600000000a84ab8030000e0c8debdfb2ebc7bf75ddbc300000000004ec4676d0f00000000e09c5d5f7f1daeafbf6e7b18000000c00953b903cec8fffc9fff2dfcfcf35f5a1e0570097ef7bb7f0cbff9cd7f6a7b1800009d737dfdcdf6ff6fde7cff
ecbed7afbf38f670000000803321dc0167e4e9e987f0a73ffdafb687015c80c1e06f853b004ababfbf0ff7f7f7072de3e6e6262c168b9a46043441950e000000a009dab200000000000000007498ca1d70b6c621845edb8300ceca3c84b06a7b100040014f4f3f84a7a73f86a7a71f5edc175795b8befea6748589b76fbfdd
2e3f6b99e9362445c6184bce9b37feebebaf773e46def8e279abac3300000040170877c0d98a4208c3b607019c956510ee00806edb15ea484e93fcf7a79f7eddbbdcb76fbf2db4ccd7afbfd81bc0f8344ff638f73d56dee3c7c18e5dd33c3dfd20e4010000009c24e10e00000038035542114d2c370e5a94a9e2117bfdfa8b
d2f35419dfd3d30fe1cd9bef053c000000809321dc01000000272e2be090d72a25d90e655f28226fb9c9ca1759d542aa043c929537b2aa6b14adf291376f7a8c6fdf7e5ba86a0900000040170877000000c0098b2b5124ed6a8df231fcf0299891272b389155ed225e5eba354ad98047fc58791535d2bf4baf7791754e8fb1
6a85110000008063fbaced0100000000d5c5553862bb420e69bbda926457c4c89f3eebfeb26d62cab44a4957fa28b2cee93166056300000000ba48b8030000004e545638a18e4a1459818722cbcd9aa66878625f78242919ecf838ef3785e60b21ab4dcd1f73a604000000e80ee10e000000385159553bda5eeecbea1dcd87
27caae775ddb09000000e058843b000000809dca54c628336d52998a23c96a20870635b465010000004ec1e76d0f00000000a8a689962c59cb3dac7247b3e189a7a71fc2ebd75f34fa18000000006d53b90300000000000000a0c3843b0000008093f1f6edb76d0f01000000e0e8b465010000004ec6f5f537cf5abd5c5f7f
5d5b3b1a00000080ae52b9030000003819d7d75fb73d0400000080a353b9030000e004fdfef77fdff610e880ebebaf9f55b178fbf6db5aaa58a497fbf4f443e1504572be78594d4a3f1e000000c03952b903000000d8e9e9e98f8d4c5b553a3022e0010000009c3be10e809644d1a71b000054717dfdcdb39feb0a391cb2dc
97953bbec999b23ec7089400000000b4495b166af1f3cfff37fcebbfbe697b18b428195098cfdb1bc72999cd3efdffeaaabd710000a7e3fdfbf795e7bdbbbb0b0f0f0f358e862eb8befeba91d62c59ad548a2cf7eddb6f0b2deb506fde7c1f5ebffe62fbf3d3d30fa55ac724e76bba6d0c000000401d843ba8c5cf3fff25bc
7bf75ddbc3a045c9a0c27c1ec268d4de580000e0925c5f7ff32cdcf1f4f443a120c6c740c41f73a77bf3e6fb67618d7d018af8fef4329a92176a291ad678fbf6dbf0f4f443f8e9a75f6b1f5b56c8a5ec744d6e3b000000e0f40877000000c009cbaade11073c42781912887fbfafd54a5e55908fbfff661ba28843222fdbb1
7cdd68558c387c9235bef8feb4a2eb7ea8a2cb6f7a1c000000c0f910eea0b27ebf1f269349dbc3d852621a0000b854594187f8ffc9f625752db74830e41895279a5a6f00000080ae11eea0b27ebf1feeefefdb1ec6967007000070c9debcf9fe59c58e228a54d6c80a50ec5be6315b8a5459ef5893954500000000ea24dc01
00000067e2fafaebf0d34fbfe6b64a89a70921bb6d499e78dabcb626872cb30e45d63b9eeee3bfdf341aecf8e9a75f1b5b360000007099843b80ce8ba28fb7104298cf3fde0e5d5ef2df2acb4d8ea9ea328ea9ec36ac6b9ba7b7539ddba8cc18eb7c0dd5fd7acc5bf668f4e977f163955d56acabaf4b00a039d7d75f37125e
3866458e2a9a5a6f00000080b60977009d144521cc66d9bf8f8d46e54e5acf662f0319e9e5c627ebb396bb6bfef432e213f3c7b4d97cfaffd5d5c77fb3c6bc6b9cbba62fb3bdf3b655d96d54769de269768da3caf354e7eb316b9d92bfdbf5b8e9f5cb53753e000000000000bae9b3b6070090369b659f48af3a5d081f4f9e
ef0a66c4b22a7224ef2b228af24fd61fd3be754e0600e231ef9a7e5fb8a5e872ca4c97b66f9ee4762f12c6a9f37556e6f5981cc3aed74a3a6854e635985c06000000000000a74db803e894ac361ea3d1c7ca0357572fab23ec0a63c4d227cfe7f34fcbcb5b6e9e783cc931c5b7f4fc654ff4d7295ee7f4f64b8f33de7ef158
f74dbf6f9dd2f7a79795dece65b651bc4ebbc6172f330e761459ff5d9a783da6c71a8b5f57f12df99845c79b355d1b5564000000000000a897b62c40a7244f7667b5cd882b1924ab32cc66f96d27d2e181bce9f25ab1149937168f350e21c427fadbaa9c90d77664347ab9fdca4e9f35ddbee72efe7dd6f35734809015c249
8f6f5fdb95a2eb53649dcabe1eb3ec6b0f5336dc911e33000000000000a74fe50ea033d227ae779df04edf57a4954a9913ee87488ead6cdb91ba94090c54993e2d5db1625f58a3ca36da15c0a97b7db2c655c7ebb1c8bc59ca543bd192050000000000e0fc0877009d51f6a4f4be8a066d5530a8d246a3c93114b9bfccf459
eb54255050b63dcbaee5d6bd3ee9dfd7f17adc37cf2e45c330e9fb843b000000000000ce83b62c40675439999e6ec571c8f2aa682bbcb14fd9f53d74fb94a9da51559931d6f17cd7fd7acc52665ba5979f3526553b0028eaddbbefc2bb77dfb53d0c00000000a020e10ea093ca564aa873da7d66b3ee863abaa048158e104e
6b1bd6fd7aac3a8632e18ea642360000000000001c9f7007404151543cb870c94e29b4714abada8608000000000080e609770014943e791e9f40cf3a91bed91c674c5d542558208c504cb27ac76cf6bc3a87962c00ec737f7f1feeefef0f5ac6cdcd4d582c16358d0800000000284ab803a08074b043cb8b7cb64d7346a34f
c1a15d1552843b000000000000cecb676d0f00204b91d61e65da7f1cda2a2439bff0c26ee7d896a5eed7e321b2dab368c902000000000070de843b80cec83a69bdcbbe361465975797e489f64bd1d6b66e52ddafc7ba648d4bf8080000000000e0bc0977009d51f7c9f4e449ee63060ece25dc508670477be10e553b000000
000000ce9f7007d019e913d3bb2a60a4efcb3ba99dfcfd66b37f0c51b4ff447e99715d8af9bcfcb68e75759b35f17aac4b5ef044b8030000000000e03c7ddef60080f393ae26b04f3218301a7d9a375e4ef2fe387c51b40dc568f43c68b0d97c5c567a9ee472d34185788cc91618b3d9cbca20458221e72c6f5b676dcf53d9
5e75bf1eeb1c57568046b8030000000000e03c0977008d287bd23e3e291d072f9227d4772d6b34da7f42fbeaeaf989f0282a5759227e9cd9ec79c0236f19e9c7bb2459dbbaeb018e5d9a783dd63936553b0000000000002e83b62c40e76455d6c852e644fad555b169773df6bec79bcf3f3ecea5bbba2a5ebda2e873dda626
5e8f75483f56d7b723000000000000d5a9dc01d4a2ee5043322891ac9690d5e2a3a8f8e477bafa42b26a489565648da9c8f6a87b9b955d5e93d3c7cf5fb2d249f2bee4bf753de631d62784c35f8f753defaa760000000000005c0ee10ea0f30e097434b5bcbac774aeca04394e45179ffbae8d070000000000807a69cb0200
2726affa0c000000000000e749b803004e8c60070000000000c065d19605003a6e36fbf4ff64b023841046a3e38e050062bffffddfb73d0400000000b818c21d00d071e940474cb0030000000000e032087770965ebffea2ed210034663e17ec000000000000b8249fb53d000060b7ababe737c10e00daf2fefdfbb0d96c2a
dd269349dbc307000000809325dc0100000000000000d061c21d9c8daa571036751b0e876d6f1200000000000000ce80700700000000000000408709770000000000000000749870070000000000000040870977000000000000000074d8e76d0f000000004ec5bffeeb9bf0eedd776d0f033aebbffed7ff117efbdbbf6d7b
180000007076843b000000a0b44108a1d7f620a04356ff7e030000009a20dc01000000a5dd8710866d0f023ae42e84f0d0f620000000e06c7dd6f6000000000000000000c827dc0100000000000000d061c21d00000000000000001df679db03000000e0b2bc7bf75d78f7eebbb68701000000002743e50e00000000000000
800e13ee0000000000000000e830e10e0000001a777f7f1f369bcd41b7e170d8f66a34268a3edeced16cf6f10600000040759fb73d00a029f310c2a2ed41006765d5f60000e06cc5e187f93c84d1a8ddb1d4ed5c432b00000000c724dc01676bdaf60000000000000000a88170070000009cb8645b97f9fce3adec7cf1bcc9
7fd3d326ff2dfb586525d727fe79d73a56d90665d7e99031951d579975d935aed1e85365987d55618a4e070000001c9f70079c91ebebafc37ff92fff4fdbc3002ec06f7ef39fdb1e02001042d86c3efd3f3eb11f9fa00f2184ababecf966b3978180103e8502d2ed61e2e9d3218326dbc924979d7cec74702139e6f4fd79eb
1f45cfb753deb277ad6f7afb25ef9bcf9fff5c745c873c9f79e38ac5eb9cf73ce53dc700000040370877c019f9ddeffeb1ed2100000047900c27648510e2fb379be7f7ef9b2fcfaee0461c0ad8151c38543ad4907cccf97cf7fde93115dd76f1bc79554cb28216f1e3660564768dabeaf359745ca3d1c779d34198e47cc950
0b000000d03d9fb53d00000000a09c5dd52542781e2c48b605d9375f91c78d830ff12dbdecba65850d92bfdb757fd698f6855b926d50f2d629af8246d571557d3e8b8e6bd76387a01d0b0000009c02953b000000e0c4e4b5de48ca0a2814992f4bdc2ee49c5a76248329799a0aace43d4ed9e7b38c38b492d5c626793f0000
00d04dc21d00000040ae38d8b1abda473ccd29d955e5e25cc5ed5966b34febaf6a070000009c066d59000000e0c4c4218b5dd527e2fb92818c22f3ed7bccbcc73915876c83a6547d3eab88431cc9b63a2a7600000040f7a9dc010000001db2afedc67cfef104fd6cf671dacde665d585e449fbe47de9f9b25a71c42d3be2df
c7ad3cd28f13b7f7383545b74108c76b5552f5f9ac22d99e25f9f800000040b70977000000404714094cc4ed3446a34fd3a72b3ec427f0b38209c9f9b21e2f3d4fdee3c4cb8f8309a7a4ec3638f698ca3c9f551f2bd96e07000000e83ee10e00000068591cd828abea09ffb2f3ed9b7e5740a0eabaed9befd0fbab6cbb22eb
72c8b8aa3e9f65b771b21288962c000000701a843b00000000ce5c5c9d2459a944d50e000000381dc21d7004fffb7fff312c97ffabed61009c949f7ffebf6d0f0100e06ca45bea0876000000c06911ee8023f8f1c7ffdef610000000b86055dbe300000000dd20dc010000c0c9f9fdefffbeed2100000000c0d108774043a2
280a83c1a0ed61009c857ebfdff6100000000000005a23dc010d198fc76d0f010000000000008033f059db030000008022debf7f1f369b4da5db6432697bf8000000005099700700000000000000408709770000000000000000749870070000000000000040877ddef600000000e0f4dcb43d00000000002e887007000000
14f49bdffca7f0dbdffe6ddbc380cefae28bffd8f610000000e02c09770000004041bffbdd3f86dffdee1fdb1e060000000017e6b3b6070000000000000000403ee10e00000000000000800e13ee0000000000000000e830e10e00000000000000800e13ee0000000000000000e830e10e00000000000000800efbbced0100
0000c031bd7bf75d78f7eebbb687010000000085a9dc0100000000000000d061c21d00000000000000001d76b5d96c366d0f0200000000000000806c2a770000000000000000749870070000000000000040870977000000000000000074987007000000000000004087097700000000000000007498700700000000000000
40870977000000000000000074987007000000000000004087097700000000000000007498700700000000000000408709770000000000000000749870070000000000000040870977000000000000000074987007000000000000004087097700000000000000007498700700000000000000408709770000000000000000
74987007000000000000004087097700000000000000007498700700000000000000408709770000000000000000749870070000000000000040870977000000000000000074987007000000000000004087097700000000000000007498700700000000000000408709770000000000000000749870070000000000000040
8709770000000000000000749870070000000000000040877ddef600000000f6592e9761bd5e1fb48cc56251d3689a311c0e0f9abfd7eb85c16050d36800000000802eb9da6c369bb6070100001cdf6ab50aabd52af3bef57a1d96cbe5ce798b862d763d0eddd2eff743bfdf2f346dafd7db39ed603008bd5eefe0c7010000
0000843b0000a013765595d857b5625708a3ebd52a20cbae2a26bbaa93ecab5e7268751400000000688b7007000094900e5a6455b8c80a5ba85e71b83ada8ef4fbfddc6a126d59afd707bf36ea685b73e9f2aa89a45f73e98a24dae100000000700cc21d00005c84bc10463aa8913ec97eee952f76b5ced8d776a36c150455
13baadec6b7dd7f4bbdaf6ec6bf9730ed2aff574a8282b10b2ebbd0800000000c21d0000745e956a19a7562963dfd5ffbbeecbab381013aae094ec0b8dec7a5fef0a8d9c5a7593acf7b52a2200000000974bb8030080a3489eb04dfeff14ab65a4c312e993a9792758f785308076e48546b20221e900c9a97d5ea5ab8824ef
170403000000e82ee10e00004a4b56ce4857d148febf6b273dd3e18aacb623e92be105328032d24191ac4a43e9b6355dac34940c7a24c36ac9cf48ad64000000008e47b80300806757a7274f3226ab6ab47df2b14ab50c57a103a72a1d8eeb7a159164102e591d24fd7b6139000000806a843b0000ce50f2045f3ab811ff3f
eb446193f24efc85a05a064013f655116933c0970ce425ab28a5837a427a000000001f09770000745c575ba0a44bf3c75ca50d70da92418f74e823efefd1316815030000005c32e10e008016c527cd9227c9e27f8f7d1575de49b3f4ef9d340320291df448578fcafa7dd392e1c2f86f5afc374cf0100000003845c21d0000
0d894f6225431af149aea64f701529779f2e7d0f00c7d295f661718031fe7b980c7e68090300000074897007004049c92b94e39353ebf5fa45058e3a252b66f4fbfd67ffd70205807397d72a26fefb1bffbfc9bfc1c9bfbfc950888a56000000c0310877000024b4d126257dd570b2a286ab8601a0bc387c99acfed164f52c
6d6000000080a60977000017e3d86d5292218df4891e2d5100a05d71f0232bd0d9544b186d6000000080aa843b0080b310073692b7f4099b3a25431ae993324ab403c079c86ac576acef18711b983800a202080000005c36e10e00e064c457d1a64badd77d62c555b5004019c76c0313873f922ddc540403000080f327dc01
0074461cd448febb5aad6a2b8d9e0c69a4dba4b81a160068d231dac0c4218fb8ea473208a2aa180000009c36e10e00e0a8e29629e9aa1b755cd59a75256bf2f700005d96f5dda8ce4a65e9ef46711044c015000000ba4fb80300a8dd62b17871556a1cea3844fa6ad4f86484f006007009e2ef57f1f7aad56af5ace2d92192
dfab42f81400d1920e000000ba41b80300282d7942217962a1c9ea1b4e2c0000ec167f17abbbea47b2b54b1c0249de00000080e60977000099e293014d95048f4f0e28090e00d0bc746bbca6c3b9c99f01000080c3097700c0855b2c16cf0ef6d7d13e25792567f24a4fd5370000ba29d9562f0e7fd4f9bd3019e6f59d1000
0000ca13ee00800b51778823798566fa5f0000ce47b2825bfadfaa843e000000a01ce10e00383375853892ed5292fdd5e310070000c4218ff83b675cf5230e809425f401000000d9843b00e044d515e270001d0080a6f8ce0a000000f510ee00808e73401c008073e33b2e0000009423dc01001de10037000097ce77620000
00c826dc01004714f7248f7b9027ff5f9603d600005c0aa10f0000002e9d70070034240e6ec407a085380000a05e4d853e068341180c060d8c18000000aa11ee00801aa4831c8bc5a2f43284380000a01e75853e86c3a1c0070000009d20dc0100251d1ae410e200008076d411fa10f8000000a00dc21d00b0c321418e5eaf
b73dd82bc4010000dd950e7d946da928f001000040d3843b00e0dfd515e448063a000080d3940c7a1c12f8b07f000000401d843b00b8480ed402000065ad56ab6d950f81700000008e49b80380b35757904389650000204d05400000008e41b80380b322c8010000b44de003000080ba09770070b204390000805321f00100
00c021843b003819f101d0e441d1a20439000080ae3924f0d1eff7c37038dcfe6b1f070000e0bc097700d059c930c762b1285c956330186c0f720a72000000a724deff49562a2ca2d7eb6d431ec21e000000e747b80380cea812e64896248e0f620200009c93783fa94ce043d8030000e0bc087700d09ac562f12ccc5144f2
e0a42007000070a9caee4ff57abd6d38defe140000c0e911ee00e06884390000009a617f0b0000e0bc097700d0982a5792291b0c000070b8785fac4cdb4b610f000080ee12ee00a016ebf5fa5990430f68000080ee48eeab950d7bc4fb6cbd5eef0823050000208b70070095540973f4fbfd6707068539000000da5125ec91
dc9713f6000000382ee10e000a59ad56cf4afa160d73240ffcf5fbfd238c14000080b256abd5b3b0c76ab5da3b8fb0070000c0f10877009029aecc11df8a1cd813e6000000380f55c21ef13ee170380c51141d61940000009743b80380add56a15e6f379582e97613e9fef9d3e19e210e6000000385fc9b0477cdb278aa230
180c421445f617f181374f00002000494441540100000e24dc0170e1e2204791562b4aee02000010c2a76a8f455b77c6fb9171e00300008072843b002ecc7abd7e569d63bd5ee74e9b2ca92bcc010000409e32ad3d7bbd5e88a2c8be2600004009c21d0017206eb7121f64dbc5d5540000001caa4c95c838e4a17d0b000040
3ee10e8033150739e6f3f9de2ba69207d25c31050000409d56abd5b3aa1efb2a4826ab7a000000f0917007c09988dbad94395836180c421445471c25000000972ed92ab448fb9678dfd5c5080000c02513ee003861cbe5725b9da36899dbe170a8dd0a0000009d5066bf360e79d8af0500002e917007c089718513000000e7
28ae4819eff3aa48090000f089700740c7257b13cfe7f39dd3ea4d0c0000c0b948ee0befbbb82159adb2dfef1f7194000000c721dc01d041abd52a4ca7d3b0582cf696a54d5ea9e40016000000e768b55a85f97cbe0d7cec12ef23db4f060000ce8970074047c4e567a7d3e9ce4047dc6e25be2249bb150000002ec97abd7e
56d56357fb96c16010c6e3b176a50000c0c913ee0068d97c3edfdef20c0683301c0eb7553a000000808f96cbe5b6aac7ae8b25e26a1e51141d7174000000f510ee0068c172b90cd3e974e71546f1d545fa05030000403171fb96f97c9e1bf4e8f57adb6a1e2ea00000004e857007c091ac56ab6da063b55a654ed3eff74314
45613c1e0b74000000c0018aee87c7410ffbe1000040970977003468bd5e6faf185a2c1699d3f47abd6da0c3154300000050bfc562b1dd3fcfaba019b7438da228f47abd238f1000006037e10e8006c4618ee9749a3b4d144561381c86f1787cc491010000c0659b4ea7dbb0479eb84d6a1445471c190000403ee10e809a2c
97cb309fcfc3743acdbd0a6830186cab74b80a08000000dab35eafb76d5b96cb65e63471fbd4288a54db0400005a25dc017080d56ab50d74eceadf1b073af4ef05000080ee892fd898cfe7b9fbf7f1051b5114d9bf0700008e4eb803a0a4f57abd6dbb9257c2b5d7eb6d0ff80c87c3238f10000000a82ab9cf9f579933dedf
8fa248654e0000e028843b000a7270070000002e878b3b0000802e11ee00d861bd5e878787076559010000e0829569cb3a994c5cf0010000d44eb80320c36ab50a0f0f0f613a9d66de1f1fb089a2280c0683238f0e00000068cb72b9dc063db22a7bc6d53c2693898b40000080da08770024c4a556f3421de3f178db760500
0000b86c71db965dc711c6e3b10b4300008083097700848fa18e878787b0582c5edcd7eff7c3643209511429ab0a000000bcb05eafc3743acd6ddb321c0ec3643209c3e1b085d1010000e740b803b868d3e9343c3c3c641e78190c06db2b6c000000008a70ac0100006882700770715c4d03000000346d5f95d038e4a14a28
0000508470077031d6eb7578787808d3e934acd7eb17f7eb830b000000d46db15884f97c1ea6d3e98bfb7abd5e188fc761329908790000003b097700676fb55a6d431d69bd5e2f445114269349e8f7fb2d8c0e000000b804bb8e4f8410b6210fc7270000802cc21dc0d972650c000000d035452a8b4651a45d2c0000f08c70
077076f6f5b49d4c26218a22a10e000000a035ebf53a4ca7d3309d4ec36ab57a71ff70380c93c944c8030000082108770067643a9d86878787cc032283c1208cc7e3301e8f5b181900000040be5dc734e20b551cd3000080cb26dc019c3457b900000000e7625f35d2f8c215d5480100e0f2087700276b3e9f87dbdbdbdcfe
b4e3f1380c068316460600000050dd62b108f3f93c4ca7d317f7f5fbfd707f7f1fa2286a61640000405b843b8093b35aadc2ededed8bab587abd5e88a2284c2693d0eff75b1a1d000000403d56ab55787878c80c790c87c3f0f8f8e8180800005c08e10ee064acd7ebf0f0f0101e1e1e9efdbed7eb85f1781c269389b2a400
0000c0d9898f894ca7d317154c279389632200007001843b8093309fcfc3dddd5d58ad56cf7e1f4551b8bfbf77950a00000070f656ab55b8bbbb0bf3f9fcd9effbfd7e787c7c0cc3e1b0a5910100004d13ee003a2daf058b8316000000c0a572110c00005c1ee10ea0b3eeeeee72cb8ddedfdfb7342a00000080f6ed6b5feb
d80900009c17e10ea073168b45b8bdbd7d71f5c970380c8f8f8fae3e01000000f877aa9e0200c065f8aced0100c456ab55188d46e1e6e6e659b0a3dfef87d96c16debf7f2fd80100000090d0eff7c3fbf7efc36c367b76dc64b55a859b9b9b301a8d5e54450500004e8fca1d4027ec6ac132994c42afd76b696400000000a7
6157ab96f8180b0000709a843b80562d168b7077771796cbe5b3df6bc10200000050cd72b90c7777772f5ab50c0683707f7faf550b00009c206d598056acd7eb707b7b1b6e6e6e9e053b7abd5e787c7cd48205000000a0a2c16010debf7f1f1e1f1f9f55435d2e97e1e6e626dcdede6ad50200002746e50ee0e8e2f2a05ab0
00000000344bab160000380fc21dc0d1acd7eb17953a42f8d882e5fefe3e0c068396460600000070de96cb65b8bdbdcd3c2e339bcd5c6c0300001da72d0b7014abd56a670b16c10e00000080e60c0683f0e1c387707f7fff2cc8b1582cc2cdcd4d58ad562d8e0e0000d847e50ea071713fd7641b96288a5ef47d05000000a0
79ebf53adcdede86f97cbefd5dafd773010e00007498ca1d40a3a6d3e98b60c7643251ee13000000a025bd5e2fcc66b330994cb6bf8bdbe926031f00004077a8dc0134e6e1e121dcdddd3dfbdde3e363188fc72d8d0800000080a4e9741a6e6f6f9ffdcef11b0000e81ee10ea011b7b7b7613a9d6e7f56da13000000a09b16
8b45188d46cf2aaf8ec7e3f0f8f8d8e2a8000080246d59805aadd7eb301a8d9e053b068381600700000040470d87c3f0fefdfbd0eff7b7bf8b2b7a24031f0000407b54ee006a13f7665d2e97dbdfc5c18e5eafd7e2c800000000d8c7b11d0000e82e953b805a2c97cbf0d5575f3ddbf91f8fc776fe010000004e44dc56378a
a2edef96cb6578f5ead5b3633e0000c0f1097700075b2c16e1e6e6e65999cec964121e1f1f053b000000004e48afd70bb3d92c8cc7e3edef56ab55b8b9b9098bc5a2c5910100c06513ee000e329d4e5f043b1e1f1fc3fdfd7d8ba302000000e0108f8f8fe1f1f171fb73dcb2653a9db6382a0000b85cc21d4065777777e1f6
f676fb735cba3379650700000000a7693c1e87d96cf6ac32ebeded6db8bbbb6b715400007099ae369bcda6ed4100a765bd5e87bbbbbb67576ac4c18ec160d0e2c800000000a8db72b97c51b9753c1e3fabec010000344be50ea0b487878767c18ec16010fefce73f0b76000000009ca1c160103e7cf8f0ecd8cf743a55c103
00008e48e50ea094c562116e6e6eb63f4751141e1f1f9f95e704000000e0fcacd7eb301a8dc262b1d8feeefdfbf761381cb6382a0000b80cc21d4061ebf53abc7af52aac56ab10c2a7ab3600000000b80cebf53adcdcdc84e572194208a1dfef870f1f3eb8f00700001a26dc0114767777171e1e1eb63fa7cb710200000070
fe96cb6578f5ead5f6e7c96412eeefef5b1c1100704ae6f37998cfe7db9f67b3598ba3397fa3d168fbff288a4214452d8e864308770085cce7f3671ffe76da010000002e57fa2220ed590080a246a3d1b37087d3d5cdbababadafe3f8a22619a13f659db0300ba6fbd5e87dbdbdbedcf83c140b003000000e082dddfdf3fab
e87a7b7b1bd6eb758b230200f28c46a3707575b5bd01a749b803d82bb973deebf524fa00000000088f8f8fdbffaf56ab67170701dd903ea17b7575f5ac42335c8af4fb60df6d341a79af009d23dc01ec94ee7b36994c42bfdf6f7144000000007441baba6bfa3812d04ddea7eca3cac3a7bf6902514097087700b9d2575c0c
87c330994c5a1c11000000005d32994cc27038dcfeac3d0b744b5e90c3c96a286e3e9f7bcf009d20dc01e44ab7634996da0400000080103eb667e9f57a218410d6ebb5f62cd0114e4643becd66937b9bcd66218aa267d39f7ac0238aa26737e034097700991e1e1ec262b1d8fefcf8f8a81d0b00509bb877ed6834521298a3
880fc4e99b0c00f5ebf7fbcfaabdcee7f3f0f0f0d0e288e8a2f57a1d96cb65dbc3b828c97dadf4095d6d94205f144561369b85d96cf6ecf7a7fcbe49ae537abd80d321dc01bcb05aad9eed804b720200758b0f88b471602479823fd94338be099d9ca7365f730070092693c9b3e3470f0f0f61b55ab53822baa6d7eb85e974
1abefaeaab707b7b1be6f3b9163e0dcaface9b558900c897756ec4fb0668937007f0c26834d28e05e004659da4de7573029b4b138739f69de08fef8ba757e58122ca7e06c7af2d9fc1009c13ed59d8e7f1f1310c87c3309d4ec368340a5f7ef965b8b9b9090f0f0faa7ad42cfd3d336e3391aede01ec7689e18ebc6aabc963
2559c718ebd2f4e3ecbbe0a7cc73bcab4ae8aef5d8b7ac2e1c47c81b7ffaf970dcecc83600098f8f8f9b10c2f6369bcdda1e120005253fbfabdca228eaece77e7a9c9cbe633ea7b3d9ece0f7c7257c2f8aa2e8d9fa9e9ba6d7ef5c3f7f01a0acf477afc7c7c7b68744078dc7e3ccef45fd7e7f331e8f37b3d96cf3cb2fbfb4
3dcc9396b7cf95fe5e7ce8f7d0d96cb689a2e8c572938f5d659faf8de5565d666cd77893cb2fb3cd9b58e62e55f7670e599743b77b51e9c76d7ade7dafdf32cf59f2759bde56f17dfb9e9732fbc459cbd9f53aacf29992359ebc75a9eb184dd16597798ef2b6ebbef76d5295e356655f4365deb3659e87b29f031ceefc8ed8
0107497e608fc7e3b6870340095576c04fe5cb78d7c74779c77a4eab1c08dc7500e69c09771ca68ecf5f010f00ce85e34b149117f048de86c3e1e6fefe7ef3e1c387b6877b52f60538ead81f6beae45f57965b368051f6bb7f1bcb2ca289e348654fa837e590ed5566deae06080e0977947d3d5659a72a0187a6dfa7451e23
6bbb967d9d571d5b996d50f47d56f50229c76b8f475b16e099c562b1fdff783c6e7124001c6af331c89b7bcbea1b1ac2c7927b71eb0a386559ad57a2280a9bcd26cc66b3309bcd32e78bef8bdf27504591cfe034a54c013817da3e50c4e3e3e3dee38f8bc522dcdddd8557af5e85afbefa2adcdede86f97cbe6d294d31e9ef
9e87be47e352fd75bfbfbbb4dca2ad069a18ef39b56facdae2e254555ddf2acff7318fdd251f273eae12dfe2964f4955d629f9bc4751b43d2eb3eb718a3e46d678d2ebb16b5dea5c8f5dc79ae263b559f3e41dcbadfbfd92b59db2b655727b397676644da54680d3934ce4f57abdb6870340492195982e232f21de95abc883
24f8d969fa39cdbad2a0eaeb39b9ac73a672c761aa7e06a7e7f31907c0b9e8f57adbbf6fefdfbf6f7b387458910a1e5937553db2a5f785b2be5f1699a6e8f2f72d2379d57f95abc59b586e5eb58422ad2daa2e3b3de6632eb38a3af69ff2b667725d8ab614a943d57db6ace7244bd1f5c85be75dd2d3277fce7b7da47f57b5
7247d1e7a4ece74ad56391fb2a13ed9bbe68a59fa2f3d4714cb5ecf1aa2a9fe145a63fe46f03c7737e47ec80ca923b524a66029c9eaa3ba9b1bc03085dd0c5317198a69fd32a3befbbc4075fce9970c761aa7e06973da80700a722799c693299b43d1c3aae6ac023bef5fbfdcd783cdecc66b3cd2fbffcd2f6eab4aae8f7de
2adf8f9b3a6ed0e4f1882a275c8b9e3c2e7b92b988269659c7380e9d7fdfbad47981469ebaf6d9b25e9ba710203834dc51e531caae5391f5291b40a8fab952f5b3f458efdbb2efd122dbe1dc8f0b9d0b6d5980ad644b96e170d8e2480068435cf62fe9d4cb617299d2e536b35edb65d5b10cc8e27505c0b91a0c06dbff9f4b
7b019a53a445cb2eabd52a4ca7d3301a8dc2975f7e196e6e6ec2c3c343582e97358ef234a4f785aacc57749abaf6939a5a6efa784656cb852c455b3fa4b7751dad099a58661bf25a3be43946bb892af2da79a4553906915ee7b27f2b8bbe9eeb50f4710e79df167dbd9759e7f46ba8ccbce97529fa7a3cd6fbd6b184cb25dc
01841042582e9761b55a6d7f16ee00b84c87ec80c44190d16814aeaeae326f657a6e26e74b3fceaee5ef128f2f6f8c457bead6a9a93125979bdee6798f57475fdfbce5b67950a68d8361bbb671979ecfe47ce969f3de67e9f7e421632cb2ce5d7b3d754199cfbda4f4f62c2afe7cdff5d97b4e7dc101a847f23bd86ab5bac8
93ec947368c02369b15884bbbbbbf0ead5abf0d5575f85dbdbdb309fcfc37abdae65f95d55e6fb58d6c51dfb969d9ea6ae604713cb8d971d2b73bce3d093ee972e6b7b15794eb3a6696bdbe7ede31409a19c53802056e63d59f5bd53667d8ef11855a66f5313c7497cf67554dba543806e984c26b597bc03e0b842285f2eb1
e8b2ca96cedc77dbd52f366f0c45979b25af7c659565d5a5e93165cd57f4b9aab2ee45971d3fef4d6deba2bd709b52e679edc2f359e57598b74dab8cf198dbb0ab6d59aacc7bac6d90d70bbacdcf4e004ecb7038dcfe8db8bfbf6f7b389c88435bb4ecbb0d87c3cdfdfdfde6c3870f6daf6aedca7edf2b337dddad2f9b5e6e
7a5fa46c9b8422dba6897177e5bbf521fb4f873ca74dbd1e369b6ac7998a8ca5ce1636451fa3ca76a9da96a5ec63157defd5f91a6b623d8a3e4e13c71aa228aa7d5fbcc8b45d6ed9cd272a77002184e72d5992653301b84c454b90eebb6fd73cc7bccafb903136e5d8632a336fd9c7295349a1e9e7bd48b9d4a6945db7ae3e
9f75a95261e398dbb02b0eb9caab49c7fe9c06e03c252bc3fa9b42517556f0c872ce553dcab664e9621b8cba1cba6f58a4a242ba7a401ddf9f9b5866dbaa5664e8925dad56aab642dab7ac5dbadc92a3cc31c563da550938ef76ecb1c71533b32a1a1d4356459878bba9d8d91dc21dc08bd2985dfd020540b7c53b00b3d92c
6c369b17b7b2fd5393f3a61f276bf99bcd66efce6d3c86bc79b376609a3eb875ac31c5f3e43d5ed6e314edb99cd71f396f3dcee980612caf5cebaeed1042fbcf67727ce979f2de67e9f7649ef8f18a8ef1d8dbb02bba7a6024affcf0aecf2afb1100a425ff362c97cbb33879ce71341df088ad56ab309d4ec368340a5f7ef9
65b8b9b9090f0f0f27d946a84a68b8ccf7b763b44ea973b969654fea16696398b76f72483bc92696796c87046bba140c48ee03157d5d9e4280e0529cc27b2516bf6ebaf05ac83aee12c2a7e34aa7f67974966aab01029cacc7c7c76d89a5c160d0f67000a828a4cae61d6b79654b9ba64bfc1529ef5776fa43c7d874fb8663
8c29fdfc15d976873e37614fa9dbbc161d4d96593d86ac529965b74399f2994d3d9f87beee0f796e8fb10dbbd696256b9d8b6eafaaef9fa2dba0ca670100e4e9f7fbdbbf298f8f8f6d0f8713d3748b965db77ebfbf198fc79bd96cb6f9e5975fdade147b65b56d287a2bf23dbca97dad632df7d05b99360679f3173d0ed0c4
32cb3a64ffe9d0e7f4945e6b655b6714b915799c3ac6bacba1fb8345e66fba2dcb293f37f176aba3d54a9569f3c654f6f391660877009bc964b2fd109e4c266d0f07808aeade496d6a677ab3392ca870ac1d862eeea454dd692bb30e659e9bac838765975ff7f66df2755bf431ab6e87ba1f23eb71ea9ab6ce31569db7ec36
3c76b8a3ecadeaf66a22dc718c801b0097c371270ed566c023791b0e879bfbfbfbcd870f1fdade242f140d031cf2bdb4a97dad632db7c9efebb3d9acf089d0a2818c26965986704731a71c20d8a5e86bff90f98f1dee68ead8dea1cfcd21e32c335fd5c7883f8bf6bdd6bb72ecf4127c1e0000e0c866b359a112a76d8aa2a8
13e510930e1953d112a2e9c7188d4685e72d32dd293cf765e4b53ad9276b3bcce7f3c2e56a8ff17c1eaae8bab4b50dbb246e3f0300e7ee2f7ff94b582c166d0f8313134551f8b77ffbb7f0e38f3fb63a8ec562b17dfdfee637bf09bffded6fc3dffddddf857ff8877f08bd5eafd5b1d5b9efdab5fde0ba6c0ab697ac22d9a2
306e5390b71de3d60679ad0f9a5c26cdb36fd71da77afca96baf9f740bd6f8f326fd7914ffce6750f3843b000068dd314f3857d1c5835b65c674487fdba26328fb185ddca6551cda4b38397fd19de0a69ecfba550d771c631b764ddc5fb7ab07024f75bb02d03d7ff8c31fc21ffef087b6870107fbf9e79fc38f3ffe187efc
f1c7f0cffffccf61381c6e6f83c1e0e8e3a97bffea1cbeffb5b5df99fe3e9f17cc3824dc5fc732a9c7a906089a74c83e7e93ba7a1caaeab1b5b6d62719f698cfe7dbcfa3f8e7ae3cdfe7ecb3b6070000c0f988bfd48f46a3707575b5f3d696a2e33be64e5217c7b4cfa127e4cf95edf0d121eb762edb70f3b10deace5bd615
30c903236d496fd7f8330a00806c8bc522dcdddd8557af5e8557af5e1db5424dd6be5991efa2e9dbae65c6cb4daaebfb6153cb4d6b6b7f7a369b85d96cb6fdfe9f1ccf219539eb5e669dd2cf699931753518505417b67fddcaaed3a93f87a7a20bafb5ac631a344fb80300805ac427ffba7230212dbe32be4be3ebe2988a12
eef8a8ceed706aaf81ba5cf2368c0fca26afc4eb42c0237d8026844f9f57c9cf7a00003e1a0c06613299840f1f3e840f1f3e84e17078b4c74e7f2fab5a09eedc4fd075619d9ad87f39857da243c21d7443997dd4aa95289a70acf0581bbc572e97b62c00001ca40b2722f7e9e289c82e8e0968471ca6883f13bad0ab76369b
657e4e25c718c2a783655d6c270340f7fcd55ffd55f89bbff99bd0ebf58edaba62b95c86f57abdfd793018845eaf5768dabc93f4abd52aac56abcc652697915cd7f57a1d96cbe58b6517fd7d2cb9ccf478d3cbc8ba3f397f910a13fd7e3ff4fbfd17eb5cc57038dc2e275e6e11fff22fff127efcf1c7831ebb4e5f7cf145b8
bebe0e7ffdd77f1dfee99ffe29f7f5740c4d9d484db74fcd6a895887a6969b6e97d185fdef26bedfb77df23ccb21cfe929567d48af6fd75b0f5751f439ecdaf1c1accf812afbdac7da3f6f7b3bb77d1c828236c0c59b4c269b10c22684b0994c266d0f07808ae2cff2f87688288a9e2d2b8aa2c2d3c6d3cf66b3c2e3ddb5fc
b2d3a6cd66b3ccf1ed5b4e7abdea748c311db2cd8acc7be8f639647cbb9479edd6e1d0f75dd1f99b7e3e379bf69ed3636dc326dfd365c69127fdb9b06b1b56ddd655b641d6677cdeade9f71b00a7693c1e3beec44192afa1366f83c16033994c361f3e7c687b936cd5bdffb3ef3b6d53fb5b5d5f6ed6f18d7dc73cf2ec1a4f
13cbacaaccfec9be31159d3f6bdfa34ec75c7695e772d73c75eccf563da654f439cc3ad655d7780e9937eb7555e6f989e7af632c45e62f7b6cb0e87c45a68def2bba7d0efd9ca01a6d598067574a7421c10cc0e9485fd51df7f69dcd669d497aa7d3ec596d108ead8b6302dad5d572ca712feff8737dd767fb29547202e0f8
927fd38e59ad83f3707b7b1ba6d3692b8fddebf5c2783c0e8f8f8fe1975f7e091f3e7c08f7f7f79d7e1d1fba4fb9ef3b69d6fd45bfffc5edfd8a3e6e1dcb4d6f8fb2df57e3e9b3be9b27db161695752ca0e9655695f59c94d947c95ab75df367dd7f4ac748b2da7f94d95ebb5ec76d8bd72deff519bf4f9a7a2d1e2aeb1865
3cdebc6d1edf17b7526e52dee75ffa71d32d529b3aee1a3f7efc5ce77dfe656dbfae1c0b3e77c21dc0b3f292abd52ab3dc230097a56a19ccaeecb8c5b2d6a3ed1d8d2e8ee99c74f504399cba288ab621b45d21beb2077d01386fe99620bef752461bc18ec16010269349f8f0e143f8e5975fc2e3e363188fc7adb65dc993fe
ded5c4fb2b6bffb54c2021799270d777c4a6961bc2ee00c5ae9396bba6c95bdebe13c5459faf26965945d609f1ababab17b7ac31661debc81af3ae93c4a7f437a3eb01824325df47f1eb33f9fc670573baf4fc658d27fe0ccd7a4d1f73bf36ebb59efc1cca1a53d6676613b2c6712acff93913ee0042afd77bf6a1dbf52f12
0034abcc0e75d58308c7fa5bd3c5ab3eba38a62a0e095134f9fce7ed1437f978551feb147b0937c1363c4df1c1a438e891647f028058d3279e395fc70a769c62758e5813dfb98a7cafcb3ba9987592b44cf58236965bf4a46511654e14173d31dbc432cb38f4646dde09f5e476cfdadec73a715db72e07080e55e639e9ea49
feaa15738f11342ab3cd9a7c7f5459cf783c5d7ccecf9570071042785e1673b158b4381200da94b563798cab7fbaa88b63ecd298ba1aee68f2f18a2ca7cbdbe1545cea363cc6ba34f518e9835de7f4bc007098e431a664e558d8a5e960c72955e7d8a5a90b07b2aa0f644d53e564debee99b5cee66b3a97ce2326bbeaa277c
779d986d6299878a4f88573d365476de530d76c4ba1c203854f27d941e6bfcbb32efb3f86281f85646d5798bb6934eaecfbee7f490f5482f67d7b892d534d3e32cf2fa498e316f7dcab4654d8ea7ebafddb3b301d86c367ffef39f372184ededcf7ffe73db4302a0a4e4e77895af79b3d9ecc532a2282afc98fba6dd35d6a6
1e278aa24adb243d5f9d5f9b8f35a6aadbacccbc55d7a5ecf35f457a6c873e46fcfec8fb7d1ddb61369b159ab66bcfe7a1633cd6363c74fdca8ea5ac32afd92aeb72c8762ea2e9ed0bc0e971ac892ac6e3f18bef2c87de7abdde663c1e6f1e1f1f37bffcf24bdbab787666b359e6fe6afc9d368aa29ddfd38fbddccd66b39d
bfae65c7f3ec5b669531d6b9ccb6e5adcf29ae4b11bb5ec35d5fefa68fd900d57d1e004208fd7e3f0c0683b05c2e43081fafac188fc72d8f0a8063c92b3b5ae66a83a2576ae7f51add258aa25aae041f8d467bd7e9d86531bb38a6aa8aac4b95e7bf8af46b26de8655ae2688cbc6e63d4e5ad5edd0f6950e59dbec18633aa7
6d58d5a155938a3c57652ba2fcffecddeb75e2cab606d0ea334e02a4408720878043c021e01070081002846042684230211c42d80ac1f7475fb1852c40120f2d60ce3118b6318f12608c4a5fad75af8f25007194fff764599686c3618fa3e11e5cb26247966569341aa5f1787c172d56eed9b52a0e5cb392c135da975cda3d
57af38e411b7e9987ba8c601dc1f6d59809d72794cad59001edfdbdbdbaecf69d760479372add5df9f1b523876a0bdaa49bfe0aeb7dd55c4317555b72dc7b6e7962195ba52aec56bbe8d26d7b9c4e3106192eb506fe05b7894c7b0ade2f5557d8d35297f5a76ea796afbde5b8ca9e975eafa7d0340b1802825ff1b38eddc60
c760304893c9242d168bf4cf3fffa4afafaf349bcd043b00808722dc01ece8930df0587efdfa75f474e8e0699b1e99750718eb0e08560f149edb3f77b55ad56e539395fc75972bc65d3eff9a13d011c7d4d5a10045b50244795b6eb51d7507c88bd7ceb1d0c6a9e05393fb69f2381cbb7e5faa9f078bc7a17abac6fd3eca63
5838f51e7ce87db8498fe9eaf65ee3bdb7fcfc1f0a7a1c7b3e00786e799eeffdef282f2882aaaec18e2ccbd2743a4d5f5f5fe99f7ffe498bc5224d269334180cae304a008000faee0b03c4321c0e1bf52c07208595824400002000494441549e74a08767d353d77eb5c7fa871eba9fea789bf4effcfcfc6c7cdbe73e36757d
512fedda636afbf89e73ddb6af8173c7d75693d7ce25fe3eda3e0e6db63ddaf379e931b6b9efae8f61b4bfe973b6e5fbbbfdebbacd7bc839db601f0280efefefefc562b1fbdf301c0efb1e0e814d2693c69f330683c1f76432f95e2c16dffffcf34fdf43077858b79cb301da51b903d8535e4971a91e9700c454acfcfefcfc
4cdfdfdfe9f3f3b3d36aeb36d76bb222fdd475bbacd06f33c6ae8f435b11c7d4d5e7e767e3363e7db4ce68538da6eebac5f69dba7edbe7a9afc7e394ae7f6797bcefa6a23e866d54df87db5eaf892e8f6b5be5f7680028cf29f9dfc0214d2a76a8ce0100f0af5fdfdfdfdf7d0f028863bd5ea7d7d7d7ddcfd3e934cd66b31e
4704c0bd28da0b1c6af5523d585c6d37728b49dfe23eebda20a4b4df62a4ba2dd73a801c714ce7a86bdf50b72d7d3cff75f77de8f57aeeb8da3cafd4f3183657f7585de23da47cf9432d8aeadedf01786e1f1f1f693e9fef7efef3e78fb62cfc7028d831180cd2783c4e5996a5f1782cc401d083723bd6475854018f44b803
f8a1ba73f5f5f595b22ceb71440000000044b7d96cd2cbcbcbee678b86a8539d7bccb22c8d46a35da803807ef5b92007384eb803f821cff3f4f2f292b6db6d4ae9ef0ed6d7d757cfa30200000020b2979797b4d96c524a290d87c3f4f5f5a5f2027bdedfdfd36ab5529d0300a003e10ea096f62c0000000034a51d0ba7e479
9eb6dbadea1c00001d097700075577cab56701000000a0ca22210000b83ee10ee0a06a7b16e5340100000028d3de1700006ee33f7d0f00886b3018a4cfcfcfddcfdbed76af920700000000cf6d3e9fef821d29a5b4582c7a1c0d00003c2ee10ee0a82ccbd2743addfd3c9fcfd37abdee71440000000044b05aadf616024da7
532d7d0100e04ab465011a797979499bcd26a5a43d0b000000c0b3cbf33cfdfefd3be5799e52d28e050000ae4de50ea0917249cded769bdedfdf7b1c0d000000007d7a7f7fdf053baaad7d010080cb13ee001ac9b22ccd66b3ddcfabd52aad56ab1e4704000000401faaf342d3e9340d87c31e470400008f4f5b16a095d7d7
d7b45eaf534a7f5765fcef7fffd39e05000000e0496cb7dbf4f2f2b2abda311a8dd29f3f7f7a1e1500003c3e953b8056168bc52ecc91e7797a7979499bcda6e75101000000706d9bcd662fd831180cf65af9020000d723dc01b4321c0ed3743addfdbcdd6ef7aa7900000000f078d6eb757a7d7ddd053b52fabb08483b1600
00b80de10ea0b5e974bab72a23cff3f4fafa9a96cb658fa302000000e01a96cb656db0633c1ef7382a0000782ec21d402793c9247d7e7eee5ab4a494d2fbfb7bfaf8f8e87154000000005cd2c7c7477a7f7fdffd3c180cd2e7e7679a4c263d8e0a00009ecfafefefefefbe0701dcafcd66f363e5c66432d16f15000000e08e
e5799e3e3e3ef62ab50e0683f4e7cf9f9465598f23030080e724dc019c6dbbdda6b7b7b7b4d96c76e7655996fefcf9b357d90300000080f88a16bce67a0000200e6d5980b30d87c3f4e7cf9f341a8d76e715153db6db6d8f2303000000a08d624ea71cec188fc7821d0000d033953b808b7a7f7f57ae13000000e00e69bf0b
000071a9dc015cd462b148b3d96cf77351c6b31cf8000000002096e572995e5e5ef6821db3d94cb00300008210ee002e6e3a9deeedf8e7799ededfdfd37c3eef715400000000d4f9f8f848efefefbb9f0783415a2c16693a9df6382a0000a04c5b16e06a94f204000000884d8b5d0000b80f2a7700579365d98fc980e57299
dededef6021f00000000dc565d2bdd2ccbd2d7d7976007000004a472077075c564c166b3d99d9765599acd6669341af5383200000080e7b35eafd3fbfb7bda6eb7bbf38a453a83c1a0c79101000087a8dc015c5d51ce733299ecce2b5ab6bcbfbfabe2010000007003799ea7b7b7b7f4fafaba17ec984c26e9ebeb4bb00300
000213ee006e623018a4c56291a6d3e9def9cbe532fdfefd3bcde7f39e4606000000f0f8e6f379fafdfb775aad567be74fa7d3b4582c7a1a150000d094b62cc0cd6d369bf4f1f191d6ebf5def95ab5000000005cd67abd4e1f1f1f7bed72534a69341aa5d96c96b22ceb69640000401bc21d406f96cb65faf8f8f8d196653a
9da6e974aa14280000004047799ea78f8f8fb45c2ef7ce1f0c0669369bedb5cf050000e213ee007a65a201000000e0b2e6f3799acfe716d40000c00311ee0042502214000000e03cc75ae12e160bf32b000070c7fed3f7000052fa1be2f8fafa4ab3d96c6ff5c87abd4e2f2f2fb5ed5b00000000f8b732eacbcbcb5eb0a3a8
8cfaf5f525d8010000774ee50e209c63ad5a168b451a8fc73d8d0c0000002096e57259bb28663299fc5844030000dc2fe10e20acf57a9ddedfdfd376bbdd3b7f341aa5c5629186c3614f2303000000e8d7b1162cb3d92c8d46a39e460600005c83b62c4058a3d128fdef7fff4bd3e9f447ab96dfbf7f6bd5020000003c9d26
2d58043b0000e0f1a8dc01dc85ed769b3e3e3ed26ab5da3b7f381ca6d96ca6550b000000f0f056ab55faf8f8f851e5743c1ea7d96ca6ca2900003c30e10ee0ae1c6bd5329d4ead4c010000001ece7abd4ef3f9fc470b96e17098168b85f91000007802c21dc05dfaf8f848f3f9fcc7f9c3e1304da7d334994c7a1815000000
c0e52c97cb349fcf7f2c72190c06693299a4d96cd6d3c80000805b13ee00eed676bb4defefef3f56ada4f437e431994cd264324983c1a087d101000000b497e7795a2e9769b95cfe0875a4f4b77ae962b1d0820500009e8c700770f7d6eb755aad5669b95cfef85db192653a9d0a790000000061e5799ee6f3795a2e9729cf
f31fbf2f16b16459d6c3e8000080be0977000f63bbddee2641ea14210f2b5b00000080288ecd670c0683341e8fcd67000000c21dc0e369b2d2653c1ea7d168d4c3e8000000005422050000da11ee001e56931eb5d3e954c803000000b899f57a9de6f3795aafd73f7e371c0ed3743a4de3f158a8030000d823dc013c85e572
99e6f3796dc8a39838994c263d8c0c0000007806c7e626b22c4b93c9c4dc04000070907007f0544ead8e292652ac8e01000000cea5aa2800007029c21dc053d2d716000000b8963ccfd37c3e4fcbe532e579fee3f7c5e2922ccb7a181d0000708f843b80a7b6dd6e77932d758a90c77038bcf1c8000000807b736c9e613018
a4f1786c9e010000e844b80320355b51331e8f9549050000007e58ad56bb53950aa10000c025087700949cea853b1c0ed3783c4e93c9c42a1b0000007862dbed362d97cbb45aad0ece214ca7d3341e8f853a000080b30977001cb05c2ed37c3eaf9da04929a52ccb76410f9334000000f0f88a4521abd52a6d369bdacb6459
962693499a4c26371e1d0000f0c8843b004e58afd769b55ad5f6cb2d8cc7e3dd09000000782ccbe572373f708896ae0000c0350977003494e7f92ee4716875ce6030d855f3c8b2ecc623040000002ea50873ac56ab94e779ed6546a3d16eb187aa9e0000c0350977007470aaaf6e4a7f7beb16418fe17078e311020000006d
35dddf2faa74d8df0700006e45b803e04c9bcd6637f17368254fd16fd74a1e0000008845a54e0000e01e0877005c5051aef5540fdea26c2b000000d08f26fbf045cb15fbf0000040df843b00ae20cff35d358f63ab7e8a6a1e56fd000000c0f5a9be090000dc2be10e802bd3af17000000fab3dd6e776d578eed97176d57ec
9703000011097700dcd07abdde957c3db442a868d96285100000007493e7f96eff7bbd5ed75e663018ecf6bf47a3d18d47080000d08e7007404f96cbe52eec51a79864cab24cd0030000004e28021d45eb95438a30c76432b9e1e8000000ce23dc01d0b3a23c6c310175c86834da55f550221600000052da6c3669bd5eef4e
87140b27269389c5130000c05d12ee000864b3d9ec821e87fa00a7f46f2fe062720a0000009e45b138a2e9bef36432b148020000b87bc21d0041359dac1a0c067b553dac40020000e09114ed568aea1c799e1fbc6c11e828f6930100001e857007c01d685a6636a57f4bcd8e46a39465d98d460800000097532c7658afd747
5b98a6a48d290000f01c843b00ee4cb162a998e83ab562a93cc9050000005195ab739caa60596e55aa82250000f00c843b00ee5cb9a2c7a9d54ce5d2b45633010000d0a7ed76bbdb9f5dad56472f9b65d96ee1822a950000c03312ee007820dbed76afaac73126c6000000b8b536ed56cad5392c500000009e9d7007c083ca
f37c6f05d4b1f62d4549dba2aa8792b60000005c429b7dd3726b51fba6000000fb843b009e84d551000000dc82aa920000009727dc01f084baf4352ebe5a390500004059519da308736cb7dba3972f578eb4a0000000a019e10e0076153dd6ebf5c94938610f000080e7560e7334a90e391c0ef72a44020000d09e7007007b
8ac9b9a284ee29e5b0479665565d0100003c98a2fa63f1b5e9be6251a143bb15000080f309770070509ee7bb904793aa1e29fd5d9155aeec21ec010000705fca218e2efb82e3f15895470000800b13ee00a0b1f2045f713a45d803000020b62e618ef23e9e7d3d000080eb13ee00a0b3b67d9653da0f7b14270000006ea71c
e2681be628beaacc010000705bc21d005c4c97b0c76030d89b2014f6000000b8acf23eda7abd4e799e9fbc8e30070000402cc21d005c4d39ec514c229e22ec010000709e2e618eea7e9830070000402cc21d00dcd47abdde9b643ca5087b14ed5c46a3d10d46090000703fcafb599bcda67598c37e160000407cc21d00f4aa
6dd8232593900000c073b31f050000f07c843b0008a5dac6a5692fe82ccbd27038dc4d560200003c82621f69bbddeef6954ed1ee120000e0f1087700105a975ed129097c000000f7a74b902325610e0000806720dc01c05d29873d8a49cfa6043e00008028ba0639524abb7d1a610e000080e721dc01c05dcbf37c17f82826
45053e000080482e11e4180e87bb20c76030b8e2680100008848b803808773a9c047f9040000d044755f4490030000804b10ee00e0299427568b539ee78daf5f4cac96cb1f030000cfaddc2eb208753435180c7eb45611e4000000e010e10e009e96c0070000d0d4a5821ce5d690000000d09470070094087c000000821c00
00004423dc0100275c2af0519ee4556e190000fa97e7f9de677c410e000000a212ee00800ece0d7c54831e421f0000703ddbed366db7db5d70e3dccff0821c000000dc9a7007005c483159dca57473a12ef4311c0e4d1a03004003e510479ee77b818eb68a0a7c821c0000004420dc01005754eed35d4c346f369b4eb7351a
8dd270384c83c160f7bd096600009ed125431ce54075f17d9665171e310000009c47b803007a20f4010000a70971000000c05fc21d001088d0070000cf4888030000008e13ee00803b20f40100c02310e2000000806e843b00e08e097d0000109110070000005c967007003ca04b863eca13e929fd9d5c2f022000003caf22
b8517cce2c7ff6ec4288030000000e13ee00802772c9d0474a290d06835dd8a398882f9f0000b85fc5e7c5f2a90873e479def97647a3d1eef3a310070000003423dc0100fc087de479deb96c765911fc2826eb8b897c93f700003114418de2b35ff1f33901e082b67f0000007039c21d00c041e59599c5d7f2cacd7314218f
62c2bf1c04190c0617da020080e7567c8e2b57de2842bde754df4829ed556c2b7f8ed3be0f0000002e4fb80300e8ac1afcb8f44acf94f6ab7f58ed0900f0d3a1cf6297aec456fd0a000000dc8e7007007015b758255a1c54b04a14007874ebf57a2fb851fe9c758e6a35b5f2e72cd5d4000000200ee10e00a017c54ad24bf7
772faf282daa7c14a10f953f008088ca218de2b351118ebd74f58d94fefd6c24180b000000f743b8030008a738c051043e2e797023a5b47770a3f85aed170f007009e5cf334580a35c7de3dc8a6685d168b40bb76a69070000008f47b80300b83be5b2e4e58325e79625af2a57fc180c06b52b5e0180e755ad40567c2e29ff
ee528aa04639bca12d1d0000003c0fe10e00e0a194dbbb940fb25ca2e54b9df241166d6000e03114a1d1f2e787e2e76b044a533a1c2a55550c0000004849b803007842b72a8f5ed0060600e2f03900000000b847c21d00003522add82dff0e00a857fe9fad8217000000f068843b00003aeae320524a6957a2bdf8beee7c07
9400b877e53065f5ff6af1fd35ffdf0a5d0200000091087700005cd9adcbbf5795831ec501aaeaf9cac203706de5ff79d5e046f1fdb5aa6395699302000000dc23e10e008000ca07b3d6ebf5eebc6bb68139a47c60ab5c663ea5fd95ca562d033cb7e2ff55f5fbe2ff574ab70931966993020000003c2ae10e00803bd27789
fa43ca418f43ad62cadf03104bf97fc7a1ff2f29ed87386e412b3200000080bf843b00001e58f5005df9a05c948375d5ea20d5dfa7e4c01d4013d54a4f7561bf72558d48614095a1000000008e13ee0000604fb9847ef9fbf201c15bb78aa9533df8573e4898d27e7b9943d70188a21ab2ab6b67520d62dc3a9857550ede95
837ad5f65ed5f76200000000da13ee0000e02ce5a047b56dcca1163251542b82a82202b4d5b65a46dd75a2a8b63aa96b7be23d10000000a01fc21d0000dc54f5c06775757a391452e87b75fa29a7aa88a4747af5baaa22705da742667595328af3cbeeedfda81cd248e9e77b5135c006000000404cc21d0000dc9dba4048f5
006cddcaf9882be59b38b652beaeda48d9b103b756e0d397637f8fa74218d52a184d6f37bababfc76a20acfaf7ace509000000c0f310ee0000e0291d0a84dc7b15914b3a564da4cd01e54b8448541738ed12ed8fda86238edddf33ffad9caa969192d73400000000ed08770000c0199a5411292ed7f436b88ee8ad6f9e290c
d19753952eea7ea75a060000000011087700004060a7aa311c0b04d4551e697abb706da75a061dab6a71aaaa8c8a18000000003c1ae10e0000e08763d544dab4ee3837402284d2de25c20d4d2b531c6bb9a3c205000000005c8e70070000f0d0eea9ed8d4004000000005047b8030000000000000020b0fff43d0000000000
000000000e13ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e00000000000000
80c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e1
0e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb8030000
00000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee000000000000
0000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b000000000000000002
13ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee0000000000000000084cb803000000000000002030e10e0000000000000080c0843b00000000000000000213ee000000000000000008ecbf7d0f0000a0abcd6693f23cef7b180000e10c87c3341c0efb
1e060000007021bfbebfbfbffb1e04004017afafaf69bd5ef73d0c008070a6d3699acd667d0f03000000b8106d59000000000000000002d39605007810594a69d0f72000007ab4fdff13000000f068843b008007314b298dfa1e0400408f3e524af3be07010000005c81b62c00000000000000008109770000000000000000
0426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d0000000000000000810977
00000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000
000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000
004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc01000000000000001098
7007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc0100
00000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d00000000000000008109770000000000
0000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d0000000000000000
81097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d
000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000
000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc01000000000000
0010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426
dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d00000000000000008109770000
0000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d0000000000
00000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc0100000000000000109870070000000000000040
60c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007
000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc010000000000000010987007000000000000004060c21d000000000000000081097700000000000000000426dc01000000
0000000010d87ffb1e0000003c8af1f8efa9f0f6d6df58a8e7390200000000ee91700700004fab38d05f3ed85fb65afdfbb5f8bec9ed1197e70800000000b847c21d00003c9df138a5cfcf66972b7f2d421e4d821e00000000007029c21d00003c95cfcfee951bca210f0000000000b815e10e00009e465db0a3086abcbdd5
5f3e256d3c0000000000e897700700004f613cae0f76d4853a0ae5df9d53f103a88ac18e00000ff4494441540000000000ce21dc0100c053681beca87a7b13ee0000000000a01fc21d00003c8543ed58dae8721d000000000038d77ffa1e000000f441500300000000807b21dc01000037301ea7f4f999d2f7f7fee9f3f3ef
e99cdbacbbddf2edb76d2753beddead88e6dc731c7c6d9658c87c67c8ddb6ea3fcb855efb7ee3168f2fc1f7aecbabe6e9adc7697c7aeebebe6d87d5cf3793df6b876796cdb3ef7dfdffffeae7c5e97edbac46d0000000010dbafefef624a0900e0bebcbebea6f57afdff3ffd49298dfa1c0ec1553ff5fefa75f9fba81ed4fd
f5ebefcfc5e994b7b76615458a03de6dac56ff9e4ea9db8ebaf3abb7fff676de58db8cf1d8788f8defd0b65d4af97556dc67d3c7a0fafc77bd5e13d7785ebabc6ecaf7517dfd74bdde296d82216d6ebfcb735fbc47942fd3659b6ef1fec6bdf84829cd534a294da7d3349bcdfa1d0e00000070312a770000f014aa07a62f51
f5e094e2a06dd303c94d2fdb65557edbb15475a906d0b602429731361d579740cc25b4b9dff2b677bd5ed3cb5ffb79693bb6eaf676bddea5c6d3f5f6abf7d5e4bad5e04c974a3bd5db03000000e0f108770000f0949a56d33847dd6afc5fbffe3dd5555c6833a6e2a070f5768b535db585aeed26da6e47dd41f436d76d3bae
e2f657abc38fc12d9ef34363ac1bdba1e7bfae92c3a55e37b7785eeaeeabee3e8e6d7b97ebb5194fa17afb871edb2e7f37e56da83e8775db511d6bdbfb29b4adfa01000000c07dd0960500b85bdab2d0d6a14fbe5ddb81541daa0a70aa6d46f57aa72e3f1eb71b6bdbb60f5db7a3ebfd5d628c5db7e99a6d590a5dc7d6f67a
4d5e37d77c5ebabc6e8e0527da5cafcb63dc765ca7eea3cb737fe8fab7b81e8f4a5b1600000078542a770000f0340e1df42c0ee47e7fffdb4ae1522d3c9a0422da5661681b4239b7ed434acd831d29b50f101497ab8ef1d838db562be8eb807793ed3ff4fb538f77f57aa79ed75b3c2f75633cb61d874255a7c2566d5fd375
153bda8eabeddf4ddba04597c7b92e8002000000c06312ee0000e06934ad54509c8ab047d7561e4dab815c227c71ca39e18636554dce39d8dc34ac5077a0be893e0e7c377ddcab636bf3da291c7bdddce279a9eab20d87eeb3c9f50e05b20e551339a5ee326ddb26b5d1254cd2f56f0100000080fb23dc0100c05359adfeb6
e2687ae0b9a8ead1a59247e403ad97aa4c72cab907b8ebb4addad1f6729772cef37fedd7ce359e97aed7a90bb65cf2f6cf09409c53bde3da1576043b000000009e8b700700004fe9ededefa91cf4387670b40879b4718b83ade5f0c9f7f7f153576d4211e503cee76e7f9303e9b70829f4e1d2e3bcf5f37289fbb99673c21d
b7bedeb1f79cae212700000000eed37ffb1e000000f4adaeed4471aa9efff919e720ea392d636ea1686d738ddba5bb6b3d2f51f555b9a38b3663bb64600700000080f854ee0000808ad56abfaa47595de8e3d68a83f37d8f03b8bc6a6b96babff36a450fe10e00000080c727dc01000047bcbddd7ef5fe2975f75f0ea41c3a
5d5bdbb635dc86e7e5bed45512aa3aa71a0900000000f749b8030080ff6befde72db3602008a524096562f21de4aba84742d5a42b337e5c32522b0d45b26afcc7300034d2d594352e2cf5ccd704129ee986ec5b2df7f841b7311cad2a6af3f8eed911f1ee7babc9ee9ea1dc7841d00000000db24ee0000800bca93a7d36ff9
afa97c9eb6cc75793dd36b76bcfaca34ee28dd0300000000f83ce20e00007821d3553bee79de523eeb35c50a8f597b5ba1a53db2f2ce5aab64ecf7a75febde7b0000000000af4ddc0100001bb0d484fed25bd8dcfaf7b716368c4a5b0baded91b8632ddfbf7ffc1cafe0310ce20e000000802d11770000f0e53d3a41bbd6b7
f79f69ad49eacf78dd735b569c73ede3b6a0122d2ce11557ee1886ff6fb732061ec76379c57b1100000000f711770000f0e5edf71f13fbf74e685727c2af1dd79251c3a509e96b9d7bcebd93f5d5ebb88425ae4bd55c0071cd6762ee314bc714c7aff78ae71e00000080e711770000b009e39606b7461e738f9f4e942fe9d6
552b1e895aee3537c65bcff9a5e3bae73c6cdd12d7a5ead6b865eef76b7ceecfc5246bde8700000000589eb80300804d398e3c4e4d6e8f8f391c1a13bcc7e656ad983b8ee9f12dbd9dc45c48702e0e187f3777ceaf798de3eb3af777d7380f354b5c97aab92d4ce6ee01a7de476b6d8172ea75b7fc3e06000000d8aa6f6b0f
000000d6304ee8de3261bdd604efdc18a613d297b631797fff98a05fcafbfbfcc4f9303c6f1cd363baf4f7d7be76054b5c97aa53c77ee91e307e7ed632fdbc8fff0f000000806db1720700009b30b76ac1b5c6c9ddb557ed18dd722c6b4e4c3f72ceae3dbeddeebac7ae3d415fb2c475a9baf53e5078df4cc75b88cc000000
00589e953b0000d884e309d1e36feb9ffad6fef8d85b26521f9904bef5b9efef7f8e63ee18c6711f8ffdd47f3f3a9673f6fb8f00e3dc588fc773cfc4f5b973313d0f9f3d29bedbddf7bc7bcff92391c6b3afcb23ef9b7bcfdb3dcf1bc7396ebd726a558c5b8fe7de63b8e4d49639000000006ccbee70f8ea8bef02005fd5db
dbdbf0ebd7affffef5ef300c7fad391c0078bae956329f1591f055fc3d0cc33fc3300cc38f1f3f869f3f7fae3b1c000000e0696ccb0200000041d355556cc702000000b05de20e000000089a6e19f3cc2d9300000000782de20e00000088996ec762d50e000000806dfbb6f60000000060eb0e87f3bfb76a07000000c0b659
b903000000c2841d0000000058b90300000082f6fb3f3f000000006c9bb80300f822ded61e0000dc6db75b7b040000000094d9960500000000000000204cdc010000000000000010b63b1c0e87b5070100000000000000c03c2b77000000000000000084893b0000000000000000c2c41d000000000000000061e20e000000
0000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee
0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d00000000000000
0061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000
000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d
000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000
204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b00000000
00000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b803
00000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee00000000000000000813770000000000000000
84893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e000000000000008030710700000000
0000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee000000000000000008137700
0000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080
307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000
000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e00
00000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc010000000000000010
26ee0000000000000000081377000000000000000084893b0000000000000000c2c41d000000000000000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee0000000000000000081377000000000000000084893b0000000000000000c2c41d0000000000
00000061e20e0000000000000080307107000000000000004098b80300000000000000204cdc01000000000000001026ee000000000000000008fb0d83ea8464869618840000000049454e44ae426082}
\par
\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_ericsson_platform}4.1{\*\bkmkend BMfig_ericsson_platform}: Ericsson\rquote s DSP multicore platform block diagram}{\field{\*\fldinst TC "4.1 Ericsson\rquote s DSP multicore platform block diagram" \\f f}{\fldrslt }}\par
}\page{}\pard\qj\sl240\slmult1 \sb240 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter {\*\bkmkstart BMchap_implementation}5{\*\bkmkend BMchap_implementation}\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Implementation\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 In this chapter we will present the implementation part of the thesis. The first section describes about DSP-C support implemented in CBMC, second section is dedicated to contract programming, third section talks about memory overlay handling and last section presents the support for parallel programs in multicore platform.\par
\pard\qj\sl240\slmult1 \fi300 Note that, software we were working with was property of Ericsson and we cannot publish real examples, to avoid Intellectual property rights violation. We are using hypothetical examples to present the ideas.\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 5.1  DSP-C support\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 DSP-C}}\par
\pard\qj\sl240\slmult1 \fi300 As we can see in the {sec:back:dspc}, DSP-C extends ISO C with new data types and operations. Also we looked at the framework of CBMC in {sec:back:cbmc}. As we can see CBMC processes source code, produces goto-programs, the goto-programs are converted propositional logic and verified using SAT-solver. To begin with we needed to add support in parser for parsing new data types, constants, operations and memory labels. Then the parsed data formats have to be stored in goto-programs in a structured way to be processed during propositional logic conversion. The propositional logic conversion module has to be updated for handling new structures in goto-programs.\par
\pard\qj\sl240\slmult1 \fi300 We updated the new grammar to handle the new data types, constant types and memory labels. With the working parser to parse the new type, we added logic to handle automatic type conversions between fixed arithmetic to any of the ISO supported basic data types, like int, float or character.\par
\pard\qj\sl240\slmult1 \fi300 The CBMC has been updated recently to convert fixed types to propositional logic. It works by remembering the number of bits for fraction and number for integer. We developed a logic in which we can feed these numbers dynamically, during conversion. By this we can handle multiple types of fixed point conversions and operations. The current implementation can easily work with addition, subtraction and multiplication of fixed point type.\par
\pard\qj\sl240\slmult1 \fi300 The modified CBMC tool can process the features of DSP-C and some of the simple test runs are been presented in Appendix A.\par
\pard\qj\sl240\slmult1 \fi300 As we understood from {sec:memory:lable} memory labels provide information about storage location of each variable and pointer\rquote s pointing location. In the current implementation we store all the memory labels in goto-programs as property of the variable. In future one can use this information to verify the properties related to memory.\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 {\*\bkmkstart BMimpl_contracts}5.2{\*\bkmkend BMimpl_contracts}  Contract verification\par
}{\xe{\v \pard\qj\sl240\slmult1 \sb60 \fi0 Contracts}} \par
\pard\qj\sl240\slmult1 \fi300 We studied the use cases and advantages of contract programming in {sec:back:contact:prog}. Our goals were to implement a mechanism to verify the post condition can be proven true based on precondition and verify if the caller\rquote s contract violate the callee\rquote s contracts or callee\rquote s contracts can violate the caller\rquote s contacts. For instance {fig:impl:contract:funcall} shows a generic pseudo code for function caller and callee with contracts. As we can see there can be two kinds of contract violations possible in {{\field{\*\fldinst{ EQ {{\i f}{\i u}{\i n}{\i c}{\i t}{\i i}{\i o}{\i n}_{\i c}{\i a}{\i l}{\i l}{\i e}{\i e}}}}{\fldrslt }}}. First, postcondition of a function can fail because of its own preconditions. For example, {{\field{\*\fldinst{ EQ {{\i p}{\i r}{\i e}\\s\\do5({\fs16 {\i c}}){\i o}{\i n}{\i d}}}}{\fldrslt }}} can be {{{\i s}{\i t}{\i a}{\i t}{\i e}=={\i X}}} and {{\field{\*\fldinst{ EQ {{\i p}{\i o}{\i s}{\i t}\\s\\do5({\fs16 {\i c}}){\i o}{\i n}{\i d}}}}{\fldrslt }}} can be {{{\i s}{\i t}{\i a}{\i t}{\i e}=={\i Y}}}, and there can be feasible path with state to be X, but does not have assignment to state variable to be Y. This will violate the postcondition based on precondition. Second, precondition of callee, {{\field{\*\fldinst{ EQ {{\i p}{\i r}{\i e}{\i c}{\i o}{\i n}{\i d}{\i i}{\i t}{\i i}{\i o}{\i n}({\i p}{\i r}{\i e}_{\i c}{\i a}{\i l}{\i l}{\i e}{\i e})}}}{\fldrslt }}}, can fail because of precondition of caller {{\field{\*\fldinst{ EQ {{\i p}{\i r}{\i e}{\i c}{\i o}{\i n}{\i d}{\i i}{\i t}{\i i}{\i o}{\i n}({\i p}{\i r}{\i e}_{\i c}{\i a}{\i l}{\i l}{\i e}{\i r})}}}{\fldrslt }}}. For example, callee can have precondition with {{{\i s}{\i t}{\i a}{\i t}{\i e}=={\i X}}} and caller with {{{\i s}{\i t}{\i a}{\i t}{\i e}=={\i X}}}, and a feasible path from precondition of caller to precondition of callee with assignment {{{\i s}{\i t}{\i a}{\i t}{\i e}={\i Y}}} can violate the contract of callee.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300 \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, minimum height=4.5em, text width = 20em, rounded corners] {goto}=[draw, text centered, minimum height=5em, text width =8em] {line}=[draw, -latex] {\par
\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_impl_contract_funcall}5.1{\*\bkmkend BMfig_impl_contract_funcall}: Function calls in contract programming }{\field{\*\fldinst TC "5.1 Function calls in contract programming " \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 The implementation of mechanism proved to be much simpler since CBMC already provides APIs like {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i u}{\i m}{\i e}}}}{\fldrslt }}} and {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i e}{\i r}{\i t}}}}{\fldrslt }}}. To verify contract violation within a function we had to replace all the callee preconditions with {{\field{\*\fldinst{ EQ {___{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i e}{\i r}{\i t}}}}{\fldrslt }}} and the caller initiator with {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i u}{\i m}{\i e}}}}{\fldrslt }}}. It can be simply done by defining appropriate macro to replace during pre-processing stage of CBMC. When the CBMC starts processing the preconditions and postcondition, it assumes on initial function entry and asserts on every callee\rquote s precondition.\par
\pard\qj\sl240\slmult1 \fi300 For second type of contract verification, we replaced preconditions with {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i u}{\i m}{\i e}}}}{\fldrslt }}} and post condition with {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i e}{\i r}{\i t}}}}{\fldrslt }}}. When CBMC starts processing a function it assumes all the preconditions and starts processing statements between precondition and postcondition. If assumption together with following operations violates the postcondition, violations are caught in {{\field{\*\fldinst{ EQ {__{\i C}{\i P}{\i R}{\i O}{\i V}{\i E}{\i R}_{\i a}{\i s}{\i s}{\i e}{\i r}{\i t}}}}{\fldrslt }}}.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners] {\par
\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_typical_contract_programming}5.2{\*\bkmkend BMfig_example_typical_contract_programming}: Example of contract programming}{\field{\*\fldinst TC "5.2 Example of contract programming" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 The example shown in {fig:example:typical:contract:programming}, {{\field{\*\fldinst{ EQ {{\i o}{\i p}{\i e}{\i n}_{\i d}{\i o}{\i o}{\i r}}}}{\fldrslt }}} function is written to automatically open the door. It has preconditions for checking if the lock is not on and door is not opened already. The post condition checking door is open once the operations are performed. The CBMC tries to check contracts between caller and calee, it will make sure that caller satisfies the requirements before it calls the function. Also when the contacts are used to verify the functionality of a function, we can easily find any issues with post condition and invariants based on preconditions. Appending B presents some example runs.\par
\pard\qj\sl240\slmult1 \sb240 \fi0 {\s3\ql\sb240\sa60\keepn\f13\b\fs32 5.3  Platform specific libraries and macro support\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 In this section we will briefly summarise the platform related library support we implemented.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 5.3.1  Memory overlays\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 In some applications some part of data is never reused or written back to permanent storage. Also, when we look at embedded systems, in most cases executing instructions are always kept in read only memory and whenever necessary data is brought to instruction memory, cache or scratchpad. Memory overlay is a process in which part of memory is overwritten without worrying about previous contents of it.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners] {\par
\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_multiple_funcalls}5.3{\*\bkmkend BMfig_example_multiple_funcalls}: An example of multiple function calls}{\field{\*\fldinst TC "5.3 An example of multiple function calls" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 In example shown in {fig:example:multiple:funcalls}, main generates a random number and prints it before going further with other processing. In case, programmer knows she or he is not going to use {{\field{\*\fldinst{ EQ {{\i r}{\i a}{\i n}{\i d}{\i o}{\i m}_{\i g}{\i e}{\i n}{\i e}{\i r}{\i a}{\i t}{\i o}{\i r}}}}{\fldrslt }}} again, the same address can be taken by {{\field{\*\fldinst{ EQ {{\i p}{\i r}{\i i}{\i n}{\i t}_{\i n}{\i u}{\i m}{\i b}{\i e}{\i r}}}}{\fldrslt }}}. Possibly one can also rewrite the program as shown in figure {fig:example:memory:overlay}.\par
{\pard\qj\sl240\slmult1 \sb240 \fi300  \par
\pard\qc\sl240\slmult1 \fi0 {module}=[draw, text centered, minimum height=2.5em, rounded corners] {\par
\pard\qc\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{tikzpicture\} ... \\end\{tikzpicture\}}]\par
}\pard\qc\sl240\slmult1 \fi0 {Figure {\*\bkmkstart BMfig_example_memory_overlay}5.4{\*\bkmkend BMfig_example_memory_overlay}: An example of memory overlay}{\field{\*\fldinst TC "5.4 An example of memory overlay" \\f f}{\fldrslt }}\par
}\pard\qj\sl240\slmult1 \sb240 \fi0 As we can see function {{\field{\*\fldinst{ EQ {{\i o}{\i v}{\i e}{\i r}{\i l}{\i a}{\i y}_{\i a}{\i n}{\i d}_{\i c}{\i a}{\i l}{\i l}}}}{\fldrslt }}} takes a pointer to memory region, function pointer and variable number of argument to be supplied to the called function. When the function executed, instructions of the function, whose pointer is supplied as parameter, are brought to specific region of the memory mentioned in the argument. This avoids any memory write backs and provides faster processing. Also this reduces the amount of memory required for the applications 
[{\field{\*\fldinst{\lang1024 REF BIB_verma2004dynamic \\* MERGEFORMAT }}{\fldrslt{42}}}
].\par
\pard\qj\sl240\slmult1 \fi300 In the tool we added support to handle memory overlays. For data overlay we treat each new memory overlay as new memory block allocation and old block as removal. The new instruction overlay and call to those instructions is treated as simple function call. This allows CBMC to handle memory overlays in simplest manner. In future work one can add support to verify the dangling pointers due to overlays.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 5.3.2  Support for parallel programs\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Parallel programs have several control flow paths and produce large formulas during model checking. The platform we analysed did not pose threat of state space explosion since processes are scheduled to reduce the concurrent processes accessing same data. Tasks created by a processe are designed to operate on independent data block and process waits until all the task finish their job. Once all the tasks finish their operation, the process collects the results. To handle this kind of parallelism we modified CBMC libraries to treat each task creation as function calls. When multiple tasks are created once, we call the task one by one and order of the call does not affect the result since each task works on independent data blocks.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 5.3.3  The internal macros\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The home grown compiler for the platform supports various internal macros. These macros are specific to compiler and platform. With these macros programmers can perform platform specific tasks. For example, Open-MP like macro can parallelise a loop over different hardware threads.\par
\page{}\pard\qj\sl240\slmult1 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter {\*\bkmkstart BMchapter_discussion}6{\*\bkmkend BMchapter_discussion}\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Discussion and Conclusion\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 During this thesis work we extend CBMC to handle features of DSP-C, provided a model to verify contract programming and based on hardware model of Ericsson multicore DSP processor, proposed solutions to detect issues in parallel code.\par
\pard\qj\sl240\slmult1 \fi300 In following sections we briefly discuss results of model checking performed on Ericsson\rquote s software. To begin with we used extended CBMC to check logical correctness of the code. In second step we performed contract verification. At last with collective knowledge of Ericsson\rquote s platform architecture and model checking on software, we proposed techniques to verify some more properties of the software.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 6.0.4  Model checking\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 The test setup started with understanding Ericsson\rquote s build system, which is capable of handling large code base being maintained by large number of developers distributed across globe. The build system is complex to cater its requirements. The code base includes millions of lines of code and hundreds of developers working on it. For simplicity we started with small libraries which had little library dependency. Even with these libraries we did have to port most of the Ericsson specific Real Time OS APIs. Also we should note that these libraries were already tested and deployed in products.\par
\pard\qj\sl240\slmult1 \fi300 With the modified CBMC, API stubbing/porting and understanding of build system, we were able process libraries of Ericsson. During the test run we observed a lot of false positives on assertions since these assertions were written to handle run time errors. This we mainly attribute to the fact that existing code is not written to provide information to static analysers. As we understood in chapter {chap:background} and {chap:implementation}, static analysers work by looking at information available in the existing logic without knowing run time information. To make the best of any static analyser one has to provide run time information statically. This information can be provided as part of header in each module or function, commented information for analysers or through contracts. The code we were working had contracts and next section provides more details on contract based verification.\par
\pard\qj\sl240\slmult1 \fi300 The source code we used for the case study was LTE baseband controller software. The code was tested and deployed into products. The model checking process on 6 major modules took little over a month. Most of the time and effort was put to avoid false positives and state space explosion. The state space explosion is still a major issue in model checking. With millions of lines of code we quite often had to choose small bounding values.   \par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 6.0.5  Contract verification\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Most of the Ericsson code has contracts on function implementation. As we discussed in {impl:contracts}, we stubbed the precondition and postcondition with CBMC APIs. During Ericsson\rquote s code analysis we realised that contracts used in the code are run time guards, which is a way of pessimistically checking incoming parameters at run time. These conditions check the values of each parameter when a function is called and the return values are checked before returning. The contracts are not providing enough information to CBMC to verify the properties of each function. \par
\pard\qj\sl240\slmult1 \fi300 In verification, contracts are expected to be defined on the behaviour of the function and also provide actual limits of the parameter. The preconditions for the function can include limits on parameters and limits on global states. The post conditions can include affected states and results being returned. The affected states can be either part of parameters or global variables.\par
\pard\qj\sl240\slmult1 \sb120 \fi0 {\s4\ql\sb240\sa60\keepn\f13\b\fs32 6.0.6  Identifying properties of thread local and concurrent threads\par
}\pard\qj\sl240\slmult1 \sb60 \fi0 Apart from verifying logic properties of software, like arithmetic errors or pointer analysis, model checking can be used verify specific properties of the system. For example race conditions within a thread or between threads, memory handling or mutex handling. \par
\pard\qj\sl240\slmult1 \fi300 Thread local race conditions are seen in system where the processor core and processor peripheral access processor common memory asynchronously. For example a case study in 
[{\field{\*\fldinst{\lang1024 REF BIB_Donaldson_2011_AAD_2034876_2034900 \\* MERGEFORMAT }}{\fldrslt{15}}}
] shows IBM cell processor with possible race condition between processor core and DMA controller. The Ericsson platform uses a strong memory consistency model. During analysis we concluded that the DSP cores do not have thread local race conditions. The bounded model checking can verify some of the thread local properties. For example:\par
{\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {\b Correctness of memory allocation and deallocation}\par
\pard\qj\sl240\slmult1 \li600\fi0 The dynamic memory management APIs can be instrumented to detect multiple deallocation of same memory address in a single thread.\par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {\b Correctness of handling mutex variables}\par
\pard\qj\sl240\slmult1 \li600\fi0 The mutex handling APIs can be instrumented to detect multiple locking/unlocking on same mutex variable.\par
}\pard\qj\sl240\slmult1 \sb100 \fi300 As we discussed in earlier chapters concurrent software have several control flow paths and produces large formulas during model checking. The platform we analysed is designed to operate on incoming signals. Typically multiple signals handlers run to completion on parallel cores. The majority of signal handler operations are independent of other signals handlers in the system. In some cases signal handlers share some resources. The signal handlers also take advantage of heterogeneous architecture and spawn threads to slave cores and accelerate the computation. The bounded model checking can be used to verify following properties of the platform.\par
{\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {\b Verifying race conditions among the cores}\par
\pard\qj\sl240\slmult1 \li600\fi0 In some cases the signal handlers share resources, like shared data structures or shared IO devices. The bounded model checking can be used to identify possible race conditions.\par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {\b Memory management}\par
\pard\qj\sl240\slmult1 \li600\fi0 The signal handlers make use of slave cores and transfer some of the processing to slave cores. The slave cores are capable of accessing shared memory regions may access, allocate or deallocate memory. The bounded model checking can be used to verify correctness of the memory usage by multiple slave cores.\par
\pard\qj\sl240\slmult1 \sb50 \li600\fi-300 \bullet\tab {\b Correctness of using mutex variables}\par
\pard\qj\sl240\slmult1 \li600\fi0 The shared memory access is done within protected area. We can instrument the APIs to detect possible unprotected access to shared memory regions.\par
{}}\page{}\pard\qj\sl240\slmult1 \sb100 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter 7\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Future Work\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 In current implementation we keep the memory labels as variable properties in goto-programs. In future we can use these labels in verifying memory related operations.\par
\pard\qj\sl240\slmult1 \fi300 As we discussed in previous sections, contracts defined in the code are not providing enough information to verifier. Ericsson\rquote s code can be carefully reviewed again and one can add contracts which provide enough information about functionality. Also, contracts can be defined effectively, through top down development approach. In top down development approach, product architecture is designed, architecture is divided into modules and each module will have specific functionality. This approach clearly identifies system states being used by each module. It is easier to identify possible preconditions, postcondition and invariants.\par
\pard\qj\sl240\slmult1 \fi300 In previous chapter we have discussed various properties we identified in the system and proposed possible implementation techniques. All the properties can be verified by extending CBMC or instrumenting the software.\par
\page {\field{\*\fldinst{INDEX \\c 2}}{\fldrslt{}}}{\pard\qj\sl240\slmult1 \sb120 \fi0 {\plain\b\fs32 Bibliography}\par
\pard\qj\sl240\slmult1 \sb60 \li450\fi-450 [{\v\*\bkmkstart BIB_Apt_1981_TYH_357146_357150}1{\*\bkmkend BIB_Apt_1981_TYH_357146_357150}]\tab K.R. Apt. Ten years of hoare\rquote s logic: A survey - part i. {\i ACM Transactions on Programming Languages and Systems (TOPLAS)}, 3(4):431\endash 483, 1981.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Balarin_1993_IAL_647762_735495}2{\*\bkmkend BIB_Balarin_1993_IAL_647762_735495}]\tab F.\~Balarin and A.\~Sangiovanni-Vincentelli. An iterative approach to language containment. In {\i Computer Aided Verification}, pages 29\endash 40. Springer, 1993.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_biere2003bounded}3{\*\bkmkend BIB_biere2003bounded}]\tab A.\~Biere, A.\~Cimatti, E.M. Clarke, O.\~Strichman, and Y.\~Zhu. Bounded model checking. {\i Advances in computers}, 58:117\endash 148, 2003.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_brace1991efficient}4{\*\bkmkend BIB_brace1991efficient}]\tab K.S. Brace, R.L. Rudell, and R.E. Bryant. Efficient implementation of a bdd package. In {\i Proceedings of the 27th ACM/IEEE design automation conference}, pages 40\endash 45. ACM, 1991.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Bryant_1986_GAB_6432_6433}5{\*\bkmkend BIB_Bryant_1986_GAB_6432_6433}]\tab R.E. Bryant. Graph-based algorithms for boolean function manipulation. {\i Computers, IEEE Transactions on}, 100(8):677\endash 691, 1986.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Burch90symbolicmodel}6{\*\bkmkend BIB_Burch90symbolicmodel}]\tab J.\~R. Burch, E.\~M. Clarke, K.\~L. Mcmillan, D.\~L. Dill, and L.\~J. Hwang. Symbolic model checking: 10 20 states and beyond, 1990.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_clarke1997model}7{\*\bkmkend BIB_clarke1997model}]\tab E.\~Clarke. Model checking. In {\i Foundations of software technology and theoretical computer science}, pages 54\endash 56. Springer, 1997.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_clarke2008birth}8{\*\bkmkend BIB_clarke2008birth}]\tab E.\~Clarke. The birth of model checking. {\i 25 Years of Model Checking}, pages 1\endash 26, 2008.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_springerlink_10_1007_3_540_44577_3_12}9{\*\bkmkend BIB_springerlink_10_1007_3_540_44577_3_12}]\tab E.\~Clarke, O.\~Grumberg, S.\~Jha, Y.\~Lu, and H.\~Veith. Progress on the state explosion problem in model checking. In {\i Informatics}, pages 176\endash 194. Springer, 2001.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_clarke2006ansi}10{\*\bkmkend BIB_clarke2006ansi}]\tab E.\~Clarke and D.\~Kroening. Ansi-c bounded model checker user manual. Technical report, Technical report, School of Computer Science, Carnegie Mellon University, 2006.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Clarke04atool}11{\*\bkmkend BIB_Clarke04atool}]\tab Edmund Clarke, Daniel Kroening, and Flavio Lerda. A tool for checking ansi-c programs. In {\i In Tools and Algorithms for the Construction and Analysis of Systems}, pages 168\endash 176. Springer, 2004.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_clarke1996formal}12{\*\bkmkend BIB_clarke1996formal}]\tab E.M. Clarke and J.M. Wing. Formal methods: State of the art and future directions. {\i ACM Computing Surveys (CSUR)}, 28(4):626\endash 643, 1996.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Davis_1962_MPT_368273_368557}13{\*\bkmkend BIB_Davis_1962_MPT_368273_368557}]\tab M.\~Davis, G.\~Logemann, and D.\~Loveland. A machine program for theorem-proving. {\i Communications of the ACM}, 5(7):394\endash 397, 1962.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_DeMoura_2011_SMT_1995376_1995394}14{\*\bkmkend BIB_DeMoura_2011_SMT_1995376_1995394}]\tab L.\~De\~Moura and N.\~Bj{\'f8}rner. Satisfiability modulo theories: introduction and applications. {\i Communications of the ACM}, 54(9):69\endash 77, 2011.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Donaldson_2011_AAD_2034876_2034900}15{\*\bkmkend BIB_Donaldson_2011_AAD_2034876_2034900}]\tab Alastair\~F. Donaldson, Daniel Kroening, and Philipp R\'fcmmer. Automatic analysis of dma races using model checking and k-induction. {\i Form. Methods Syst. Des.}, 39(1):83\endash 113, August 2011.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_website_dspc}16{\*\bkmkend BIB_website_dspc}]\tab DSP-C. An extension to iso c. {\f16 \field{\*\fldinst{ HYPERLINK "http://www.dsp-c.org/" }{{}}}{\fldrslt{http://www.dsp-c.org/}}}, May 2012.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_flynn1966very}17{\*\bkmkend BIB_flynn1966very}]\tab M.J. Flynn. Very high-speed computing systems. {\i Proceedings of the IEEE}, 54(12):1901\endash 1909, 1966.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_godefroid2005software}18{\*\bkmkend BIB_godefroid2005software}]\tab P.\~Godefroid. Software model checking: The verisoft approach. {\i Formal Methods in System Design}, 26(2):77\endash 101, 2005.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_hagersten1992ddm}19{\*\bkmkend BIB_hagersten1992ddm}]\tab E.\~Hagersten, A.\~Landin, and S.\~Haridi. Ddm-a cache-only memory architecture. {\i Computer}, 25(9):44\endash 54, 1992.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_hall1990seven}20{\*\bkmkend BIB_hall1990seven}]\tab A.\~Hall. Seven myths of formal methods. {\i Software, IEEE}, 7(5):11\endash 19, 1990.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_hennessy2011computer}21{\*\bkmkend BIB_hennessy2011computer}]\tab J.L. Hennessy and D.A. Patterson. {\i Computer architecture: a quantitative approach}. Morgan Kaufmann Pub, 2011.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Hoare04communicatingsequential}22{\*\bkmkend BIB_Hoare04communicatingsequential}]\tab C.\~A.\~R. Hoare. Communicating sequential processes, 2004.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Hoare03theverifying}23{\*\bkmkend BIB_Hoare03theverifying}]\tab Tony Hoare. The verifying compiler: A grand challenge for computing research. {\i Journal of the ACM}, 50:2003, 2003.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Kim_usinga}24{\*\bkmkend BIB_Kim_usinga}]\tab S.\~Kim, H.D. Patel, and S.A. Edwards. Using a model checker to determine worst-case execution time. Technical report, Citeseer, 2009.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_kroening2008decision}25{\*\bkmkend BIB_kroening2008decision}]\tab D.\~Kroening and O.\~Strichman. {\i Decision procedures: an algorithmic point of view}. Springer-Verlag New York Inc, 2008.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_website_cprover_cbmc_applications}26{\*\bkmkend BIB_website_cprover_cbmc_applications}]\tab Daniel Kroening. The cbmc applications. {\f16 \field{\*\fldinst{ HYPERLINK "http://www.cprover.org/cbmc/applications.shtml" }{{}}}{\fldrslt{http://www.cprover.org/cbmc/applications.shtml}}}, May 2012.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_website_cprover_cbmc}27{\*\bkmkend BIB_website_cprover_cbmc}]\tab Daniel Kroening. The cbmc homepage. {\f16 \field{\*\fldinst{ HYPERLINK "http://www.cprover.org/cbmc/" }{{}}}{\fldrslt{http://www.cprover.org/cbmc/}}}, May 2012.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_3540741046}28{\*\bkmkend BIB_3540741046}]\tab Daniel Kroening and Ofer Strichman. {\i Decision Procedures: An Algorithmic Point of View (Texts in Theoretical Computer Science. An EATCS Series)}. Springer, 2008.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Malik_2009_BST_1536616_1536637}29{\*\bkmkend BIB_Malik_2009_BST_1536616_1536637}]\tab S.\~Malik and L.\~Zhang. Boolean satisfiability from theoretical hardness to practical success. {\i Communications of the ACM}, 52(8):76\endash 82, 2009.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Meyer_1992_ADC_618974_619797}30{\*\bkmkend BIB_Meyer_1992_ADC_618974_619797}]\tab Bertrand Meyer. Applying "design by contract". {\i Computer}, 25(10):40\endash 51, October 1992.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_moskewicz2001chaff}31{\*\bkmkend BIB_moskewicz2001chaff}]\tab M.W. Moskewicz, C.F. Madigan, Y.\~Zhao, L.\~Zhang, and S.\~Malik. Chaff: Engineering an efficient sat solver. In {\i Proceedings of the 38th annual Design Automation Conference}, pages 530\endash 535. ACM, 2001.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_overton2001numerical}32{\*\bkmkend BIB_overton2001numerical}]\tab M.L. Overton. {\i Numerical computing with IEEE floating point arithmetic}. Siam, 2001.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Pixley_1992_ECS_113938_149645}33{\*\bkmkend BIB_Pixley_1992_ECS_113938_149645}]\tab C.\~Pixley, S.W. Jeong, and G.D. Hachtel. Exact calculation of synchronizing sequences based on binary decision diagrams. {\i Computer-Aided Design of Integrated Circuits and Systems, IEEE Transactions on}, 13(8):1024\endash 1034, 1994.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_post2007integrated}34{\*\bkmkend BIB_post2007integrated}]\tab H.\~Post and W.\~K{\'fc}chlin. Integrated static analysis for linux device driver verification. In {\i Integrated Formal Methods}, pages 518\endash 537. Springer, 2007.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Rabinovitz05boundedmodel}35{\*\bkmkend BIB_Rabinovitz05boundedmodel}]\tab Ishai Rabinovitz and Orna Grumberg. Bounded model checking of concurrent programs. In {\i In Computer-Aided Verification (CAV), LNCS 3576}, pages 82\endash 97. Springer, 2005.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_dspcbenifits}36{\*\bkmkend BIB_dspcbenifits}]\tab M.\~Roodzant. Real-time dsp applications benefit from high-level language compilation. {\i REAL TIME MAGAZINE}, page\~40, 1999.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_website_dspc_specification}37{\*\bkmkend BIB_website_dspc_specification}]\tab DSP-C Speification. An extension to iso c. {\f16 \field{\*\fldinst{ HYPERLINK "http://www.open-std.org/JTC1/SC22/WG14/www/docs/n854.pdf" }{{}}}{\fldrslt{http://www.open-std.org/JTC1/SC22/WG14/www/docs/n854.pdf}}}, May 2012.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_Staats_2008_PTV_1482985_1483006}38{\*\bkmkend BIB_Staats_2008_PTV_1482985_1483006}]\tab M.\~Staats and M.\~Heimdahl. Partial translation verification for untrusted code-generators. {\i Formal Methods and Software Engineering}, pages 226\endash 237, 2008.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_tiwari1995power}39{\*\bkmkend BIB_tiwari1995power}]\tab V.\~Tiwari and M.\~Tien-Chien\~Lee. Power analysis of a 32-bit embedded microcontroller. In {\i Design Automation Conference, 1995. Proceedings of the ASP-DAC\rquote 95/CHDL\rquote 95/VLSI\rquote 95., IFIP International Conference on Hardware Description Languages; IFIP International Conference on Very Large Scale Integration., Asian and South Pacific}, pages 141\endash 148. IEEE, 1995.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_VardiW86}40{\*\bkmkend BIB_VardiW86}]\tab Moshe\~Y. Vardi and Pierre Wolper. An automata-theoretic approach to automatic program verification (preliminary report). In {\i LICS}, pages 332\endash 344, 1986.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_vasudevan2008static}41{\*\bkmkend BIB_vasudevan2008static}]\tab N.\~Vasudevan and S.A. Edwards. Static deadlock detection for the shim concurrent language. In {\i Formal Methods and Models for Co-Design, 2008. MEMOCODE 2008. 6th ACM/IEEE International Conference on}, pages 49\endash 58. IEEE, 2008.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_verma2004dynamic}42{\*\bkmkend BIB_verma2004dynamic}]\tab M.\~Verma, L.\~Wehmeyer, and P.\~Marwedel. Dynamic overlay of scratchpad memory for energy minimization. In {\i Proceedings of the 2nd IEEE/ACM/IFIP international conference on Hardware/software codesign and system synthesis}, pages 104\endash 109. ACM, 2004.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_springerlink_10_1007_978_3_540_88479_8_30}43{\*\bkmkend BIB_springerlink_10_1007_978_3_540_88479_8_30}]\tab I.\~Wenzel, R.\~Kirner, B.\~Rieder, and P.\~Puschner. Measurement-based timing analysis. {\i Leveraging Applications of Formal Methods, Verification and Validation}, pages 430\endash 444, 2009.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_werner2010correctness}44{\*\bkmkend BIB_werner2010correctness}]\tab F.\~Werner and D.\~Farag{\'f3}. Correctness of sensor network applications by software bounded model checking. {\i Formal Methods for Industrial Critical Systems}, pages 115\endash 131, 2010.\par
\pard\qj\sl240\slmult1 \li450\fi-450 [{\v\*\bkmkstart BIB_zhu1997software}45{\*\bkmkend BIB_zhu1997software}]\tab H.\~Zhu, P.A.V. Hall, and J.H.R. May. Software unit test coverage and adequacy. {\i ACM Computing Surveys (CSUR)}, 29(4):366\endash 427, 1997.\par
}\page{}\pard\qj\sl240\slmult1 \sb60 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter {\*\bkmkstart BMappendix_a}A{\*\bkmkend BMappendix_a}\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Examples of new data type and verification results\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 Below program presents a example of __fixed type.\par
{\pard\qj\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{lstlisting\} ... \\end\{lstlisting\}}]\par
}\pard\qj\sl240\slmult1 \fi300 As we can see from above program assertion will be true, same has been detected using CBCM on static analysis and given a trace of it.\par
{\pard\qj\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{lstlisting\} ... \\end\{lstlisting\}}]\par
}\pard\qj\sl240\slmult1 \fi300 Below program presents a example of __accum type.\par
{\pard\qj\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{lstlisting\} ... \\end\{lstlisting\}}]\par
}\pard\qj\sl240\slmult1 \fi300 As we can see from above program assertion will be true, same has been detected using CBCM on static analysis and given a trace of it.\par
{\pard\qj\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{lstlisting\} ... \\end\{lstlisting\}}]\par
}\page{}\pard\qj\sl240\slmult1 \fi0 {\s2\ql\sb240\sa60\keepn\f13\b\fs40 Chapter {\*\bkmkstart BMappendix_b}B{\*\bkmkend BMappendix_b}\par
\pard\qj\sl240\slmult1 \sb240 \fi0 Contract verification example runs\par
\par\par}\pard\qj\sl240\slmult1 \sb60 \fi0 Consider a faulty implementation of open door where the door may not be opened even though the preconditions are met.\par
{\pard\qj\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{lstlisting\} ... \\end\{lstlisting\}}]\par
}\pard\qj\sl240\slmult1 \fi300 The CBMC verifies for the postcondtion and suggests the possible states which can lead to failure.\par
{\pard\qj\sl240\slmult1 \fi0 \qc [Sorry. Ignored {\plain\f16\\begin\{lstlisting\} ... \\end\{lstlisting\}}]\par
}}}
